
freqAnal.elf:     file format elf32-littlenios2
freqAnal.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010004 memsz 0x00010004 flags r-x
    LOAD off    0x00011024 vaddr 0x00030024 paddr 0x00031b14 align 2**12
         filesz 0x00001af0 memsz 0x00001af0 flags rw-
    LOAD off    0x00013604 vaddr 0x00033604 paddr 0x00033604 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fa9c  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000344  0002fce0  0002fce0  00010ce0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  00030024  00031b14  00011024  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00033604  00033604  00013604  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00033764  00033764  00012b14  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012b14  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ee8  00000000  00000000  00012b38  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00021485  00000000  00000000  00013a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008c6d  00000000  00000000  00034ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b0b2  00000000  00000000  0003db12  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002058  00000000  00000000  00048bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000386d  00000000  00000000  0004ac1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017fc9  00000000  00000000  0004e489  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00066454  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001838  00000000  00000000  00066488  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006acc6  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006acc9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006accc  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006accd  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0006acce  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0006acd7  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  0006ace0  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000e  00000000  00000000  0006ace9  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000027  00000000  00000000  0006acf7  2**0
                  CONTENTS, READONLY
 26 .jdi          00005778  00000000  00000000  0006ad1e  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0006581f  00000000  00000000  00070496  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0002fce0 l    d  .rodata	00000000 .rodata
00030024 l    d  .rwdata	00000000 .rwdata
00033604 l    d  .bss	00000000 .bss
00033764 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../freqAnal_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002fe72 l     O .rodata	00000010 zeroes.4389
0002fe82 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
00025474 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 findfp.c
00026cfc l     F .text	00000008 __fp_unlock
00026d10 l     F .text	0000019c __sinit.part.1
00026eac l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00030024 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00030468 l     O .rwdata	00000020 lc_ctype_charset
00030448 l     O .rwdata	00000020 lc_message_charset
00030488 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0002feb4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002ffe8 l     O .rodata	00000010 blanks.4332
0002ffd8 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0002d640 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d74c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d778 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d864 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d944 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002da30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002dc04 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00031b04 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002de50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002df84 l     F .text	00000034 alt_dev_reg
00030a70 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e25c l     F .text	0000020c altera_avalon_jtag_uart_irq
0002e468 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002ec14 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002f088 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002f1c8 l     F .text	0000003c alt_get_errno
0002f204 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00033638 g     O .bss	00000004 alt_instruction_exception_handler
000292fc g     F .text	00000074 _mprec_log10
000293e8 g     F .text	0000008c __any_on
0002be48 g     F .text	00000054 _isatty_r
0002fec0 g     O .rodata	00000028 __mprec_tinytens
0002db40 g     F .text	0000007c alt_main
00022f74 g     F .text	000000c0 _puts_r
00033664 g     O .bss	00000100 alt_irq
0002bb70 g     F .text	00000060 _lseek_r
00031b14 g       *ABS*	00000000 __flash_rwdata_start
0002d3e8 g     F .text	00000088 .hidden __eqdf2
00033764 g       *ABS*	00000000 __alt_heap_start
00029b78 g     F .text	0000005c __sseek
0002704c g     F .text	00000010 __sinit
000276e0 g     F .text	0000007c _setlocale_r
00026eb4 g     F .text	00000068 __sfmoreglue
0002dbe0 g     F .text	00000024 __malloc_unlock
00020784 g     F .text	00000440 .hidden __divsf3
000281f4 g     F .text	0000015c memmove
00027034 g     F .text	00000018 _cleanup
00023120 g     F .text	000000e4 snprintf
00028478 g     F .text	000000a8 _Balloc
00020fc0 g     F .text	00000070 .hidden __fixsfsi
00022e18 g     F .text	000000dc .hidden __gtdf2
0002f5c0 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002bdec g     F .text	0000005c _fstat_r
0003361c g     O .bss	00000004 errno
00029af4 g     F .text	00000008 __seofread
00029e88 g     F .text	0000123c ___svfiprintf_internal_r
00033624 g     O .bss	00000004 alt_argv
00039ad0 g       *ABS*	00000000 _gp
000204e0 g     F .text	0000016c determineValue
000308f0 g     O .rwdata	00000180 alt_fd_list
0002f5e4 g     F .text	00000090 alt_find_dev
000280ac g     F .text	00000148 memcpy
00026d04 g     F .text	0000000c _cleanup_r
0002d564 g     F .text	000000dc .hidden __floatsidf
0002f14c g     F .text	0000007c alt_io_redirect
0002d470 g     F .text	000000f4 .hidden __ltdf2
0002fce0 g       *ABS*	00000000 __DTOR_END__
00023034 g     F .text	00000014 puts
0002f8b0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
000299d8 g     F .text	00000074 __fpclassifyd
00029258 g     F .text	000000a4 __ratio
0002e660 g     F .text	0000021c altera_avalon_jtag_uart_read
0002ca44 g     F .text	00000064 .hidden __udivsi3
0002d8a0 g     F .text	000000a4 isatty
0002ff10 g     O .rodata	000000c8 __mprec_tens
0002775c g     F .text	0000000c __locale_charset
00031ad0 g     O .rwdata	00000004 peakToPeak_t
00022da4 g     F .text	00000074 .hidden __fixunsdfsi
0002f820 g     F .text	00000090 alt_icache_flush
00033618 g     O .bss	00000004 __malloc_top_pad
00031ae0 g     O .rwdata	00000004 __mb_cur_max
0002778c g     F .text	0000000c _localeconv_r
00028884 g     F .text	0000003c __i2b
0002709c g     F .text	000004bc __sfvwrite_r
00029a4c g     F .text	00000054 _sbrk_r
0002bd8c g     F .text	00000060 _read_r
00031afc g     O .rwdata	00000004 alt_max_fd
0002b390 g     F .text	000000f0 _fclose_r
0002b70c g     F .text	00000030 fflush
00033614 g     O .bss	00000004 __malloc_max_sbrked_mem
00022a88 g     F .text	00000110 .hidden __extendsfdf2
00021120 g     F .text	000008ac .hidden __adddf3
00029000 g     F .text	0000010c __b2d
0002c414 g     F .text	00000538 .hidden __umoddi3
0002da6c g     F .text	000000d4 lseek
00031ad8 g     O .rwdata	00000004 _global_impure_ptr
00029474 g     F .text	00000564 _realloc_r
00033764 g       *ABS*	00000000 __bss_end
0002ef98 g     F .text	000000f0 alt_iic_isr_register
0002f4b8 g     F .text	00000108 alt_tick
0002be9c g     F .text	00000578 .hidden __udivdi3
0002fee8 g     O .rodata	00000028 __mprec_bigtens
00028668 g     F .text	00000104 __s2b
000229e0 g     F .text	000000a8 .hidden __floatunsidf
00028d40 g     F .text	00000060 __mcmp
0002706c g     F .text	00000018 __fp_lock_all
0002ef4c g     F .text	0000004c alt_ic_irq_enabled
0002f41c g     F .text	0000009c alt_alarm_stop
0003362c g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
000308c8 g     O .rwdata	00000028 alt_dev_null
0002ebcc g     F .text	00000048 alt_dcache_flush_all
0002876c g     F .text	00000068 __hi0bits
00022ef4 g     F .text	00000080 .hidden __fixdfsi
00031b14 g       *ABS*	00000000 __ram_rwdata_end
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory
00031af4 g     O .rwdata	00000008 alt_dev_list
0002de8c g     F .text	000000f8 write
00030024 g       *ABS*	00000000 __ram_rodata_end
0002d7b4 g     F .text	000000b0 fstat
0002d470 g     F .text	000000f4 .hidden __ledf2
00028ab8 g     F .text	00000140 __pow5mult
0003360c g     O .bss	00000004 __nlocale_changed
0002caa8 g     F .text	00000058 .hidden __umodsi3
00033764 g       *ABS*	00000000 end
0002e19c g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0002fce0 g       *ABS*	00000000 __CTOR_LIST__
00034000 g       *ABS*	00000000 __alt_stack_pointer
00022d40 g     F .text	00000064 .hidden __clzsi2
00023048 g     F .text	000000d8 _snprintf_r
0002e87c g     F .text	00000224 altera_avalon_jtag_uart_write
0002705c g     F .text	00000004 __sfp_lock_acquire
00027fc8 g     F .text	000000e4 memchr
0002b860 g     F .text	00000310 _free_r
00027768 g     F .text	00000010 __locale_mb_cur_max
0002fb2c g     F .text	00000180 __call_exitprocs
00033608 g     O .bss	00000004 __mlocale_changed
00031ae4 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00033630 g     O .bss	00000004 _alt_tick_rate
00028bf8 g     F .text	00000148 __lshift
00033634 g     O .bss	00000004 _alt_nticks
0002dc40 g     F .text	000000fc read
0002dff0 g     F .text	00000048 alt_sys_init
00029cb8 g     F .text	000001d0 __ssprint_r
0002fa14 g     F .text	00000118 __register_exitproc
000288c0 g     F .text	000001f8 __multiply
0002e508 g     F .text	00000068 altera_avalon_jtag_uart_close
00030024 g       *ABS*	00000000 __ram_rwdata_start
0002fce0 g       *ABS*	00000000 __ram_rodata_start
0003363c g     O .bss	00000028 __malloc_current_mallinfo
0002910c g     F .text	0000014c __d2b
0002e038 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002f77c g     F .text	000000a4 alt_get_fd
0002b278 g     F .text	00000054 _close_r
0002f998 g     F .text	0000007c memcmp
0002e0f8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00033764 g       *ABS*	00000000 __alt_stack_base
0002e148 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000206e8 g     F .text	0000009c .hidden __floatundisf
0002b124 g     F .text	00000154 __swsetup_r
0002cb00 g     F .text	000008e8 .hidden __divdf3
00026f1c g     F .text	00000118 __sfp
00029370 g     F .text	00000078 __copybits
000304c0 g     O .rwdata	00000408 __malloc_av_
00027068 g     F .text	00000004 __sinit_lock_release
000219cc g     F .text	00000718 .hidden __muldf3
00029aa0 g     F .text	00000054 __sread
00031ad4 g     O .rwdata	00000004 CLOCK_50_IN_S
0002f674 g     F .text	00000108 alt_find_file
0002ec50 g     F .text	000000a4 alt_dev_llist_insert
0002dbbc g     F .text	00000024 __malloc_lock
0002dda0 g     F .text	000000b0 sbrk
0002329c g     F .text	000021d8 ___svfprintf_internal_r
0002b6b0 g     F .text	0000005c _fflush_r
0002b2cc g     F .text	000000c4 _calloc_r
00033604 g       *ABS*	00000000 __bss_start
00028350 g     F .text	00000128 memset
00020290 g     F .text	00000250 main
00033628 g     O .bss	00000004 alt_envp
00033610 g     O .bss	00000004 __malloc_max_total_mem
0002e098 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029bd4 g     F .text	00000008 __sclose
00034000 g       *ABS*	00000000 __alt_heap_limit
0002b480 g     F .text	00000014 fclose
00022b98 g     F .text	000001a8 .hidden __truncdfsf2
00025674 g     F .text	00001688 _dtoa_r
000277bc g     F .text	0000080c _malloc_r
00031b00 g     O .rwdata	00000004 alt_errno
00027558 g     F .text	000000c4 _fwalk
0002064c g     F .text	0000009c .hidden __fixunssfdi
0002c94c g     F .text	00000084 .hidden __divsi3
0002b73c g     F .text	00000124 _malloc_trim_r
0002fce0 g       *ABS*	00000000 __CTOR_END__
00020bc4 g     F .text	000003fc .hidden __mulsf3
00029bdc g     F .text	000000dc strcmp
0002fce0 g       *ABS*	00000000 __flash_rodata_start
0002fce0 g       *ABS*	00000000 __DTOR_LIST__
0002d3e8 g     F .text	00000088 .hidden __nedf2
0002dfb8 g     F .text	00000038 alt_irq_init
0002dd3c g     F .text	00000064 alt_release_fd
0002fd2b g     O .rodata	00000100 .hidden __clz_tab
00033604 g     O .bss	00000004 _PathLocale
0002f94c g     F .text	00000014 atexit
0002b0c4 g     F .text	00000060 _write_r
00027798 g     F .text	00000018 setlocale
00031adc g     O .rwdata	00000004 _impure_ptr
00033620 g     O .bss	00000004 alt_argc
0002b494 g     F .text	0000021c __sflush_r
0002ed54 g     F .text	00000060 _do_dtors
00027784 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00028f9c g     F .text	00000064 __ulp
00027084 g     F .text	00000018 __fp_unlock_all
00031aec g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
000277b0 g     F .text	0000000c localeconv
0002ede8 g     F .text	00000050 alt_ic_isr_register
00031b14 g       *ABS*	00000000 _edata
00033764 g       *ABS*	00000000 _end
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002e570 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002eec0 g     F .text	0000008c alt_ic_irq_disable
00029afc g     F .text	0000007c __swrite
00031ae8 g     O .rwdata	00000004 __malloc_trim_threshold
00027778 g     F .text	0000000c __locale_msgcharset
0002f960 g     F .text	00000038 exit
0002761c g     F .text	000000c4 _fwalk_reent
00021030 g     F .text	000000f0 .hidden __floatunsisf
00028da0 g     F .text	000001fc __mdiff
0002c9d0 g     F .text	00000074 .hidden __modsi3
00034000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00027060 g     F .text	00000004 __sfp_lock_release
0002fcac g     F .text	00000034 _exit
0002eaa0 g     F .text	0000012c alt_alarm_start
0002bbd0 g     F .text	000001bc __smakebuf_r
00023204 g     F .text	00000098 strlen
0002f2c8 g     F .text	00000154 open
00022e18 g     F .text	000000dc .hidden __gedf2
0002edb4 g     F .text	00000034 alt_icache_flush_all
00031b08 g     O .rwdata	00000004 alt_priority_mask
0002ee38 g     F .text	00000088 alt_ic_irq_enable
000220e4 g     F .text	000008fc .hidden __subdf3
000287d4 g     F .text	000000b0 __lo0bits
00031b0c g     O .rwdata	00000008 alt_alarm_list
0002ecf4 g     F .text	00000060 _do_ctors
0002d67c g     F .text	000000d0 close
0002d9ac g     F .text	00000084 alt_load
00027064 g     F .text	00000004 __sinit_lock_acquire
00028548 g     F .text	00000120 __multadd
00028520 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00880014 	movui	r2,8192
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <_gp+0xfffe6534>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__reset-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	108d9904 	addi	r2,r2,13924
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	108d9904 	addi	r2,r2,13924
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <_gp+0xfffe665c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <_gp+0xfffe6650>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6da17 	ldw	r2,-25752(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6da17 	ldw	r2,-25752(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00840014 	movui	r2,4096
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <_gp+0xfffe6778>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	ded00014 	ori	sp,sp,16384
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6a6b414 	ori	gp,gp,39632
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	108d8114 	ori	r2,r2,13828

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18cdd914 	ori	r3,r3,14180

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <_gp+0xfffe67a8>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002d9ac0 	call	2d9ac <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002db400 	call	2db40 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <_gp+0xfffe67bc>

00020290 <main>:
const float CLOCK_50_IN_S = 0.00000002;

// Function prototype
void determineValue(int freq, int segments[]);

int main(){
   20290:	deffef04 	addi	sp,sp,-68
   20294:	dfc01015 	stw	ra,64(sp)
   20298:	df000f15 	stw	fp,60(sp)
   2029c:	dc000e15 	stw	r16,56(sp)
   202a0:	df000f04 	addi	fp,sp,60
    uint32_t received;
    int fifoWidth = 0;
   202a4:	e03ff115 	stw	zero,-60(fp)
    int corrWindow = 0;
   202a8:	e03ff215 	stw	zero,-56(fp)
    int freq = 0;
   202ac:	e03ff315 	stw	zero,-52(fp)
    int numberOfCorrelations = 0;
   202b0:	e03ff415 	stw	zero,-48(fp)
    uint32_t numADC = 0;
   202b4:	e03ff515 	stw	zero,-44(fp)
    uint64_t secondsTaken = 0;
   202b8:	e03ff615 	stw	zero,-40(fp)
   202bc:	e03ff715 	stw	zero,-36(fp)
    int segments[6] = {0};
   202c0:	e03ff915 	stw	zero,-28(fp)
   202c4:	e03ffa15 	stw	zero,-24(fp)
   202c8:	e03ffb15 	stw	zero,-20(fp)
   202cc:	e03ffc15 	stw	zero,-16(fp)
   202d0:	e03ffd15 	stw	zero,-12(fp)
   202d4:	e03ffe15 	stw	zero,-8(fp)
    printf("running \n");
   202d8:	010000f4 	movhi	r4,3
   202dc:	213f3804 	addi	r4,r4,-800
   202e0:	00230340 	call	23034 <puts>
    while(1){
        received = IORD_ALTERA_AVALON_PIO_DATA(RECV_BASE);
   202e4:	00800134 	movhi	r2,4
   202e8:	10841c04 	addi	r2,r2,4208
   202ec:	10800037 	ldwio	r2,0(r2)
   202f0:	e0bff815 	stw	r2,-32(fp)
        //printf("Received data: %u\n", (unsigned int) received);

        // For Averaging
        if ((((received >> 28) & 0x0F) == 0b1100)){
   202f4:	e0bff817 	ldw	r2,-32(fp)
   202f8:	1004d73a 	srli	r2,r2,28
   202fc:	10800318 	cmpnei	r2,r2,12
   20300:	10000c1e 	bne	r2,zero,20334 <main+0xa4>
        	printf("received datata \n");
   20304:	010000f4 	movhi	r4,3
   20308:	213f3b04 	addi	r4,r4,-788
   2030c:	00230340 	call	23034 <puts>
            if(((received >> 18) & 0x01) == 1) {
   20310:	e0bff817 	ldw	r2,-32(fp)
   20314:	1004d4ba 	srli	r2,r2,18
   20318:	1080004c 	andi	r2,r2,1
   2031c:	10000326 	beq	r2,zero,2032c <main+0x9c>
                fifoWidth = 8;
   20320:	00800204 	movi	r2,8
   20324:	e0bff115 	stw	r2,-60(fp)
   20328:	00000206 	br	20334 <main+0xa4>
            } else {
                fifoWidth = 4;
   2032c:	00800104 	movi	r2,4
   20330:	e0bff115 	stw	r2,-60(fp)
            } 
        }

        // For correlation
        if ((((received >> 28) & 0x0F) == 0b1101)){
   20334:	e0bff817 	ldw	r2,-32(fp)
   20338:	1004d73a 	srli	r2,r2,28
   2033c:	10800358 	cmpnei	r2,r2,13
   20340:	10000c1e 	bne	r2,zero,20374 <main+0xe4>
        	printf("received corr pack \n");
   20344:	010000f4 	movhi	r4,3
   20348:	213f4004 	addi	r4,r4,-768
   2034c:	00230340 	call	23034 <puts>
            if(((received >> 18) & 0x01) == 1) {
   20350:	e0bff817 	ldw	r2,-32(fp)
   20354:	1004d4ba 	srli	r2,r2,18
   20358:	1080004c 	andi	r2,r2,1
   2035c:	10000326 	beq	r2,zero,2036c <main+0xdc>
                corrWindow = 20;
   20360:	00800504 	movi	r2,20
   20364:	e0bff215 	stw	r2,-56(fp)
   20368:	00000206 	br	20374 <main+0xe4>
            } else {
                corrWindow = 16;
   2036c:	00800404 	movi	r2,16
   20370:	e0bff215 	stw	r2,-56(fp)
            }
        }

        // Checking if we are receiving a valid data packet from PeD
        if ((((received >> 28) & 0x0F) == 0b1001) && (((received >> 27) & 0x01) == 1)) {
   20374:	e0bff817 	ldw	r2,-32(fp)
   20378:	1004d73a 	srli	r2,r2,28
   2037c:	10800258 	cmpnei	r2,r2,9
   20380:	10003e1e 	bne	r2,zero,2047c <main+0x1ec>
   20384:	e0bff817 	ldw	r2,-32(fp)
   20388:	1004d6fa 	srli	r2,r2,27
   2038c:	1080004c 	andi	r2,r2,1
   20390:	10003a26 	beq	r2,zero,2047c <main+0x1ec>
            // Analyze the freq
        	printf("correlation found \n");
   20394:	010000f4 	movhi	r4,3
   20398:	213f4504 	addi	r4,r4,-748
   2039c:	00230340 	call	23034 <puts>
            numberOfCorrelations = received & 0xFFFFF;
   203a0:	e0fff817 	ldw	r3,-32(fp)
   203a4:	00800434 	movhi	r2,16
   203a8:	10bfffc4 	addi	r2,r2,-1
   203ac:	1884703a 	and	r2,r3,r2
   203b0:	e0bff415 	stw	r2,-48(fp)
            
            // Now we begin our frequency analysis
            numADC = (numberOfCorrelations * fifoWidth * corrWindow);
   203b4:	e0fff417 	ldw	r3,-48(fp)
   203b8:	e0bff117 	ldw	r2,-60(fp)
   203bc:	1887383a 	mul	r3,r3,r2
   203c0:	e0bff217 	ldw	r2,-56(fp)
   203c4:	1885383a 	mul	r2,r3,r2
   203c8:	e0bff515 	stw	r2,-44(fp)
            secondsTaken = peakToPeak_t * CLOCK_50_IN_S * numADC;
   203cc:	009130f4 	movhi	r2,17603
   203d0:	10940004 	addi	r2,r2,20480
   203d4:	00ccab34 	movhi	r3,12972
   203d8:	18f31dc4 	addi	r3,r3,-13193
   203dc:	180b883a 	mov	r5,r3
   203e0:	1009883a 	mov	r4,r2
   203e4:	0020bc40 	call	20bc4 <__mulsf3>
   203e8:	1007883a 	mov	r3,r2
   203ec:	1821883a 	mov	r16,r3
   203f0:	e13ff517 	ldw	r4,-44(fp)
   203f4:	00210300 	call	21030 <__floatunsisf>
   203f8:	1007883a 	mov	r3,r2
   203fc:	180b883a 	mov	r5,r3
   20400:	8009883a 	mov	r4,r16
   20404:	0020bc40 	call	20bc4 <__mulsf3>
   20408:	1007883a 	mov	r3,r2
   2040c:	1805883a 	mov	r2,r3
   20410:	1009883a 	mov	r4,r2
   20414:	002064c0 	call	2064c <__fixunssfdi>
   20418:	1009883a 	mov	r4,r2
   2041c:	180b883a 	mov	r5,r3
   20420:	e13ff615 	stw	r4,-40(fp)
   20424:	e17ff715 	stw	r5,-36(fp)
            freq = (int)((1.0f / ((float) secondsTaken)) / 1000); // in kHz
   20428:	e13ff617 	ldw	r4,-40(fp)
   2042c:	e17ff717 	ldw	r5,-36(fp)
   20430:	00206e80 	call	206e8 <__floatundisf>
   20434:	1007883a 	mov	r3,r2
   20438:	180b883a 	mov	r5,r3
   2043c:	010fe034 	movhi	r4,16256
   20440:	00207840 	call	20784 <__divsf3>
   20444:	1007883a 	mov	r3,r2
   20448:	1805883a 	mov	r2,r3
   2044c:	01511eb4 	movhi	r5,17530
   20450:	1009883a 	mov	r4,r2
   20454:	00207840 	call	20784 <__divsf3>
   20458:	1007883a 	mov	r3,r2
   2045c:	1805883a 	mov	r2,r3
   20460:	1009883a 	mov	r4,r2
   20464:	0020fc00 	call	20fc0 <__fixsfsi>
   20468:	e0bff315 	stw	r2,-52(fp)
             // Determine segment values based on the frequency
             determineValue(freq, segments);
   2046c:	e0bff904 	addi	r2,fp,-28
   20470:	100b883a 	mov	r5,r2
   20474:	e13ff317 	ldw	r4,-52(fp)
   20478:	00204e00 	call	204e0 <determineValue>
        }


        IOWR_ALTERA_AVALON_PIO_DATA(SEG_0_BASE, segments[0]);
   2047c:	e0fff917 	ldw	r3,-28(fp)
   20480:	00800134 	movhi	r2,4
   20484:	10841404 	addi	r2,r2,4176
   20488:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_PIO_DATA(SEG_1_BASE, segments[1]);
   2048c:	e0fffa17 	ldw	r3,-24(fp)
   20490:	00800134 	movhi	r2,4
   20494:	10841004 	addi	r2,r2,4160
   20498:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_PIO_DATA(SEG_2_BASE, segments[2]);
   2049c:	e0fffb17 	ldw	r3,-20(fp)
   204a0:	00800134 	movhi	r2,4
   204a4:	10840c04 	addi	r2,r2,4144
   204a8:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_PIO_DATA(SEG_3_BASE, segments[3]);
   204ac:	e0fffc17 	ldw	r3,-16(fp)
   204b0:	00800134 	movhi	r2,4
   204b4:	10840804 	addi	r2,r2,4128
   204b8:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_PIO_DATA(SEG_4_BASE, segments[4]);
   204bc:	e0fffd17 	ldw	r3,-12(fp)
   204c0:	00800134 	movhi	r2,4
   204c4:	10840404 	addi	r2,r2,4112
   204c8:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_PIO_DATA(SEG_5_BASE, segments[5]);
   204cc:	e0fffe17 	ldw	r3,-8(fp)
   204d0:	00800134 	movhi	r2,4
   204d4:	10840004 	addi	r2,r2,4096
   204d8:	10c00035 	stwio	r3,0(r2)
    }
   204dc:	003f8106 	br	202e4 <_gp+0xfffe6814>

000204e0 <determineValue>:

    return 0;
}

// Function to determine the segment values
void determineValue(int freq, int segments[]){
   204e0:	deffed04 	addi	sp,sp,-76
   204e4:	dfc01215 	stw	ra,72(sp)
   204e8:	df001115 	stw	fp,68(sp)
   204ec:	df001104 	addi	fp,sp,68
   204f0:	e13ffe15 	stw	r4,-8(fp)
   204f4:	e17fff15 	stw	r5,-4(fp)
    int numberMap[] = {
   204f8:	00803004 	movi	r2,192
   204fc:	e0bff215 	stw	r2,-56(fp)
   20500:	00803e44 	movi	r2,249
   20504:	e0bff315 	stw	r2,-52(fp)
   20508:	00802904 	movi	r2,164
   2050c:	e0bff415 	stw	r2,-48(fp)
   20510:	00802c04 	movi	r2,176
   20514:	e0bff515 	stw	r2,-44(fp)
   20518:	00802644 	movi	r2,153
   2051c:	e0bff615 	stw	r2,-40(fp)
   20520:	00802484 	movi	r2,146
   20524:	e0bff715 	stw	r2,-36(fp)
   20528:	00802084 	movi	r2,130
   2052c:	e0bff815 	stw	r2,-32(fp)
   20530:	00803e04 	movi	r2,248
   20534:	e0bff915 	stw	r2,-28(fp)
   20538:	00802004 	movi	r2,128
   2053c:	e0bffa15 	stw	r2,-24(fp)
   20540:	00802604 	movi	r2,152
   20544:	e0bffb15 	stw	r2,-20(fp)
        0b10000000, // 8
        0b10011000  // 9
    };

    char freqConvert[6];
    snprintf(freqConvert, sizeof(freqConvert), "%d", freq); 
   20548:	e0bffc04 	addi	r2,fp,-16
   2054c:	e1fffe17 	ldw	r7,-8(fp)
   20550:	018000f4 	movhi	r6,3
   20554:	31bf4a04 	addi	r6,r6,-728
   20558:	01400184 	movi	r5,6
   2055c:	1009883a 	mov	r4,r2
   20560:	00231200 	call	23120 <snprintf>

    // Clear segments
    for (int i = 0; i < 6; i++) {
   20564:	e03fef15 	stw	zero,-68(fp)
   20568:	00000a06 	br	20594 <determineValue+0xb4>
        segments[i] = 0;
   2056c:	e0bfef17 	ldw	r2,-68(fp)
   20570:	1085883a 	add	r2,r2,r2
   20574:	1085883a 	add	r2,r2,r2
   20578:	1007883a 	mov	r3,r2
   2057c:	e0bfff17 	ldw	r2,-4(fp)
   20580:	10c5883a 	add	r2,r2,r3
   20584:	10000015 	stw	zero,0(r2)

    char freqConvert[6];
    snprintf(freqConvert, sizeof(freqConvert), "%d", freq); 

    // Clear segments
    for (int i = 0; i < 6; i++) {
   20588:	e0bfef17 	ldw	r2,-68(fp)
   2058c:	10800044 	addi	r2,r2,1
   20590:	e0bfef15 	stw	r2,-68(fp)
   20594:	e0bfef17 	ldw	r2,-68(fp)
   20598:	10800190 	cmplti	r2,r2,6
   2059c:	103ff31e 	bne	r2,zero,2056c <_gp+0xfffe6a9c>
        segments[i] = 0;
    }

    // Map the frequency value to the segments
    for (int i = 0; i < strlen(freqConvert) && i < 6; i++) {
   205a0:	e03ff015 	stw	zero,-64(fp)
   205a4:	00001a06 	br	20610 <determineValue+0x130>
        int digit = freqConvert[i] - '0'; // Convert character to digit
   205a8:	e0fffc04 	addi	r3,fp,-16
   205ac:	e0bff017 	ldw	r2,-64(fp)
   205b0:	1885883a 	add	r2,r3,r2
   205b4:	10800003 	ldbu	r2,0(r2)
   205b8:	10803fcc 	andi	r2,r2,255
   205bc:	1080201c 	xori	r2,r2,128
   205c0:	10bfe004 	addi	r2,r2,-128
   205c4:	10bff404 	addi	r2,r2,-48
   205c8:	e0bff115 	stw	r2,-60(fp)
        segments[i] = numberMap[digit];
   205cc:	e0bff017 	ldw	r2,-64(fp)
   205d0:	1085883a 	add	r2,r2,r2
   205d4:	1085883a 	add	r2,r2,r2
   205d8:	1007883a 	mov	r3,r2
   205dc:	e0bfff17 	ldw	r2,-4(fp)
   205e0:	10c7883a 	add	r3,r2,r3
   205e4:	e0bff117 	ldw	r2,-60(fp)
   205e8:	1085883a 	add	r2,r2,r2
   205ec:	1085883a 	add	r2,r2,r2
   205f0:	e13fef04 	addi	r4,fp,-68
   205f4:	2085883a 	add	r2,r4,r2
   205f8:	10800304 	addi	r2,r2,12
   205fc:	10800017 	ldw	r2,0(r2)
   20600:	18800015 	stw	r2,0(r3)
    for (int i = 0; i < 6; i++) {
        segments[i] = 0;
    }

    // Map the frequency value to the segments
    for (int i = 0; i < strlen(freqConvert) && i < 6; i++) {
   20604:	e0bff017 	ldw	r2,-64(fp)
   20608:	10800044 	addi	r2,r2,1
   2060c:	e0bff015 	stw	r2,-64(fp)
   20610:	e0bffc04 	addi	r2,fp,-16
   20614:	1009883a 	mov	r4,r2
   20618:	00232040 	call	23204 <strlen>
   2061c:	1007883a 	mov	r3,r2
   20620:	e0bff017 	ldw	r2,-64(fp)
   20624:	10c0032e 	bgeu	r2,r3,20634 <determineValue+0x154>
   20628:	e0bff017 	ldw	r2,-64(fp)
   2062c:	10800190 	cmplti	r2,r2,6
   20630:	103fdd1e 	bne	r2,zero,205a8 <_gp+0xfffe6ad8>
        int digit = freqConvert[i] - '0'; // Convert character to digit
        segments[i] = numberMap[digit];
    }
}
   20634:	0001883a 	nop
   20638:	e037883a 	mov	sp,fp
   2063c:	dfc00117 	ldw	ra,4(sp)
   20640:	df000017 	ldw	fp,0(sp)
   20644:	dec00204 	addi	sp,sp,8
   20648:	f800283a 	ret

0002064c <__fixunssfdi>:
   2064c:	defffc04 	addi	sp,sp,-16
   20650:	dfc00315 	stw	ra,12(sp)
   20654:	dc800215 	stw	r18,8(sp)
   20658:	dc400115 	stw	r17,4(sp)
   2065c:	dc000015 	stw	r16,0(sp)
   20660:	0022a880 	call	22a88 <__extendsfdf2>
   20664:	000d883a 	mov	r6,zero
   20668:	01cf7c34 	movhi	r7,15856
   2066c:	1009883a 	mov	r4,r2
   20670:	180b883a 	mov	r5,r3
   20674:	1025883a 	mov	r18,r2
   20678:	1823883a 	mov	r17,r3
   2067c:	00219cc0 	call	219cc <__muldf3>
   20680:	180b883a 	mov	r5,r3
   20684:	1009883a 	mov	r4,r2
   20688:	0022da40 	call	22da4 <__fixunsdfsi>
   2068c:	1009883a 	mov	r4,r2
   20690:	1021883a 	mov	r16,r2
   20694:	00229e00 	call	229e0 <__floatunsidf>
   20698:	000d883a 	mov	r6,zero
   2069c:	01d07c34 	movhi	r7,16880
   206a0:	1009883a 	mov	r4,r2
   206a4:	180b883a 	mov	r5,r3
   206a8:	00219cc0 	call	219cc <__muldf3>
   206ac:	100d883a 	mov	r6,r2
   206b0:	180f883a 	mov	r7,r3
   206b4:	9009883a 	mov	r4,r18
   206b8:	880b883a 	mov	r5,r17
   206bc:	00220e40 	call	220e4 <__subdf3>
   206c0:	180b883a 	mov	r5,r3
   206c4:	1009883a 	mov	r4,r2
   206c8:	0022da40 	call	22da4 <__fixunsdfsi>
   206cc:	8007883a 	mov	r3,r16
   206d0:	dfc00317 	ldw	ra,12(sp)
   206d4:	dc800217 	ldw	r18,8(sp)
   206d8:	dc400117 	ldw	r17,4(sp)
   206dc:	dc000017 	ldw	r16,0(sp)
   206e0:	dec00404 	addi	sp,sp,16
   206e4:	f800283a 	ret

000206e8 <__floatundisf>:
   206e8:	defffc04 	addi	sp,sp,-16
   206ec:	00800834 	movhi	r2,32
   206f0:	dc000015 	stw	r16,0(sp)
   206f4:	dfc00315 	stw	ra,12(sp)
   206f8:	dc800215 	stw	r18,8(sp)
   206fc:	dc400115 	stw	r17,4(sp)
   20700:	10bfffc4 	addi	r2,r2,-1
   20704:	2021883a 	mov	r16,r4
   20708:	1140052e 	bgeu	r2,r5,20720 <__floatundisf+0x38>
   2070c:	2081ffcc 	andi	r2,r4,2047
   20710:	10000326 	beq	r2,zero,20720 <__floatundisf+0x38>
   20714:	00be0004 	movi	r2,-2048
   20718:	20a0703a 	and	r16,r4,r2
   2071c:	84020014 	ori	r16,r16,2048
   20720:	2809883a 	mov	r4,r5
   20724:	00229e00 	call	229e0 <__floatunsidf>
   20728:	000d883a 	mov	r6,zero
   2072c:	01d07c34 	movhi	r7,16880
   20730:	180b883a 	mov	r5,r3
   20734:	1009883a 	mov	r4,r2
   20738:	00219cc0 	call	219cc <__muldf3>
   2073c:	8009883a 	mov	r4,r16
   20740:	1025883a 	mov	r18,r2
   20744:	1823883a 	mov	r17,r3
   20748:	00229e00 	call	229e0 <__floatunsidf>
   2074c:	900d883a 	mov	r6,r18
   20750:	880f883a 	mov	r7,r17
   20754:	1009883a 	mov	r4,r2
   20758:	180b883a 	mov	r5,r3
   2075c:	00211200 	call	21120 <__adddf3>
   20760:	1009883a 	mov	r4,r2
   20764:	180b883a 	mov	r5,r3
   20768:	0022b980 	call	22b98 <__truncdfsf2>
   2076c:	dfc00317 	ldw	ra,12(sp)
   20770:	dc800217 	ldw	r18,8(sp)
   20774:	dc400117 	ldw	r17,4(sp)
   20778:	dc000017 	ldw	r16,0(sp)
   2077c:	dec00404 	addi	sp,sp,16
   20780:	f800283a 	ret

00020784 <__divsf3>:
   20784:	defff504 	addi	sp,sp,-44
   20788:	200cd5fa 	srli	r6,r4,23
   2078c:	dcc00415 	stw	r19,16(sp)
   20790:	2026d7fa 	srli	r19,r4,31
   20794:	00c02034 	movhi	r3,128
   20798:	dd800715 	stw	r22,28(sp)
   2079c:	dd000515 	stw	r20,20(sp)
   207a0:	dc800315 	stw	r18,12(sp)
   207a4:	18ffffc4 	addi	r3,r3,-1
   207a8:	dfc00a15 	stw	ra,40(sp)
   207ac:	df000915 	stw	fp,36(sp)
   207b0:	ddc00815 	stw	r23,32(sp)
   207b4:	dd400615 	stw	r21,24(sp)
   207b8:	dc400215 	stw	r17,8(sp)
   207bc:	dc000115 	stw	r16,4(sp)
   207c0:	35003fcc 	andi	r20,r6,255
   207c4:	1924703a 	and	r18,r3,r4
   207c8:	9d803fcc 	andi	r22,r19,255
   207cc:	a0005226 	beq	r20,zero,20918 <__divsf3+0x194>
   207d0:	00803fc4 	movi	r2,255
   207d4:	a0802e26 	beq	r20,r2,20890 <__divsf3+0x10c>
   207d8:	91002034 	orhi	r4,r18,128
   207dc:	202490fa 	slli	r18,r4,3
   207e0:	a53fe044 	addi	r20,r20,-127
   207e4:	0021883a 	mov	r16,zero
   207e8:	002f883a 	mov	r23,zero
   207ec:	280cd5fa 	srli	r6,r5,23
   207f0:	282ad7fa 	srli	r21,r5,31
   207f4:	00c02034 	movhi	r3,128
   207f8:	18ffffc4 	addi	r3,r3,-1
   207fc:	31803fcc 	andi	r6,r6,255
   20800:	1962703a 	and	r17,r3,r5
   20804:	af003fcc 	andi	fp,r21,255
   20808:	30004a26 	beq	r6,zero,20934 <__divsf3+0x1b0>
   2080c:	00803fc4 	movi	r2,255
   20810:	30804526 	beq	r6,r2,20928 <__divsf3+0x1a4>
   20814:	89402034 	orhi	r5,r17,128
   20818:	282290fa 	slli	r17,r5,3
   2081c:	31bfe044 	addi	r6,r6,-127
   20820:	000b883a 	mov	r5,zero
   20824:	2c20b03a 	or	r16,r5,r16
   20828:	802090ba 	slli	r16,r16,2
   2082c:	008000b4 	movhi	r2,2
   20830:	10821404 	addi	r2,r2,2128
   20834:	80a1883a 	add	r16,r16,r2
   20838:	81000017 	ldw	r4,0(r16)
   2083c:	9d46f03a 	xor	r3,r19,r21
   20840:	180f883a 	mov	r7,r3
   20844:	18803fcc 	andi	r2,r3,255
   20848:	a18dc83a 	sub	r6,r20,r6
   2084c:	2000683a 	jmp	r4
   20850:	00020a34 	movhi	zero,2088
   20854:	000208b8 	rdprs	zero,zero,2082
   20858:	00020a28 	cmpgeui	zero,zero,2088
   2085c:	000208a4 	muli	zero,zero,2082
   20860:	00020a28 	cmpgeui	zero,zero,2088
   20864:	00020a00 	call	20a0 <__reset-0x1df60>
   20868:	00020a28 	cmpgeui	zero,zero,2088
   2086c:	000208a4 	muli	zero,zero,2082
   20870:	000208b8 	rdprs	zero,zero,2082
   20874:	000208b8 	rdprs	zero,zero,2082
   20878:	00020a00 	call	20a0 <__reset-0x1df60>
   2087c:	000208a4 	muli	zero,zero,2082
   20880:	00020b14 	movui	zero,2092
   20884:	00020b14 	movui	zero,2092
   20888:	00020b14 	movui	zero,2092
   2088c:	00020ac8 	cmpgei	zero,zero,2091
   20890:	9000581e 	bne	r18,zero,209f4 <__divsf3+0x270>
   20894:	04000204 	movi	r16,8
   20898:	05c00084 	movi	r23,2
   2089c:	003fd306 	br	207ec <_gp+0xfffe6d1c>
   208a0:	0023883a 	mov	r17,zero
   208a4:	e02d883a 	mov	r22,fp
   208a8:	282f883a 	mov	r23,r5
   208ac:	00800084 	movi	r2,2
   208b0:	b8808f1e 	bne	r23,r2,20af0 <__divsf3+0x36c>
   208b4:	b005883a 	mov	r2,r22
   208b8:	11c0004c 	andi	r7,r2,1
   208bc:	013fffc4 	movi	r4,-1
   208c0:	000d883a 	mov	r6,zero
   208c4:	21003fcc 	andi	r4,r4,255
   208c8:	200895fa 	slli	r4,r4,23
   208cc:	38803fcc 	andi	r2,r7,255
   208d0:	00c02034 	movhi	r3,128
   208d4:	100497fa 	slli	r2,r2,31
   208d8:	18ffffc4 	addi	r3,r3,-1
   208dc:	30c6703a 	and	r3,r6,r3
   208e0:	1906b03a 	or	r3,r3,r4
   208e4:	1884b03a 	or	r2,r3,r2
   208e8:	dfc00a17 	ldw	ra,40(sp)
   208ec:	df000917 	ldw	fp,36(sp)
   208f0:	ddc00817 	ldw	r23,32(sp)
   208f4:	dd800717 	ldw	r22,28(sp)
   208f8:	dd400617 	ldw	r21,24(sp)
   208fc:	dd000517 	ldw	r20,20(sp)
   20900:	dcc00417 	ldw	r19,16(sp)
   20904:	dc800317 	ldw	r18,12(sp)
   20908:	dc400217 	ldw	r17,8(sp)
   2090c:	dc000117 	ldw	r16,4(sp)
   20910:	dec00b04 	addi	sp,sp,44
   20914:	f800283a 	ret
   20918:	90002b1e 	bne	r18,zero,209c8 <__divsf3+0x244>
   2091c:	04000104 	movi	r16,4
   20920:	05c00044 	movi	r23,1
   20924:	003fb106 	br	207ec <_gp+0xfffe6d1c>
   20928:	8800251e 	bne	r17,zero,209c0 <__divsf3+0x23c>
   2092c:	01400084 	movi	r5,2
   20930:	00000206 	br	2093c <__divsf3+0x1b8>
   20934:	88001a1e 	bne	r17,zero,209a0 <__divsf3+0x21c>
   20938:	01400044 	movi	r5,1
   2093c:	8160b03a 	or	r16,r16,r5
   20940:	802090ba 	slli	r16,r16,2
   20944:	00c000b4 	movhi	r3,2
   20948:	18c25804 	addi	r3,r3,2400
   2094c:	80e1883a 	add	r16,r16,r3
   20950:	80c00017 	ldw	r3,0(r16)
   20954:	9d44f03a 	xor	r2,r19,r21
   20958:	a18dc83a 	sub	r6,r20,r6
   2095c:	1800683a 	jmp	r3
   20960:	000208b8 	rdprs	zero,zero,2082
   20964:	000208b8 	rdprs	zero,zero,2082
   20968:	00020b04 	movi	zero,2092
   2096c:	000208a0 	cmpeqi	zero,zero,2082
   20970:	00020b04 	movi	zero,2092
   20974:	00020a00 	call	20a0 <__reset-0x1df60>
   20978:	00020b04 	movi	zero,2092
   2097c:	000208a0 	cmpeqi	zero,zero,2082
   20980:	000208b8 	rdprs	zero,zero,2082
   20984:	000208b8 	rdprs	zero,zero,2082
   20988:	00020a00 	call	20a0 <__reset-0x1df60>
   2098c:	000208a0 	cmpeqi	zero,zero,2082
   20990:	00020b14 	movui	zero,2092
   20994:	00020b14 	movui	zero,2092
   20998:	00020b14 	movui	zero,2092
   2099c:	00020b2c 	andhi	zero,zero,2092
   209a0:	8809883a 	mov	r4,r17
   209a4:	0022d400 	call	22d40 <__clzsi2>
   209a8:	10fffec4 	addi	r3,r2,-5
   209ac:	10801d84 	addi	r2,r2,118
   209b0:	88e2983a 	sll	r17,r17,r3
   209b4:	008dc83a 	sub	r6,zero,r2
   209b8:	000b883a 	mov	r5,zero
   209bc:	003f9906 	br	20824 <_gp+0xfffe6d54>
   209c0:	014000c4 	movi	r5,3
   209c4:	003f9706 	br	20824 <_gp+0xfffe6d54>
   209c8:	9009883a 	mov	r4,r18
   209cc:	d9400015 	stw	r5,0(sp)
   209d0:	0022d400 	call	22d40 <__clzsi2>
   209d4:	10fffec4 	addi	r3,r2,-5
   209d8:	11801d84 	addi	r6,r2,118
   209dc:	90e4983a 	sll	r18,r18,r3
   209e0:	01a9c83a 	sub	r20,zero,r6
   209e4:	0021883a 	mov	r16,zero
   209e8:	002f883a 	mov	r23,zero
   209ec:	d9400017 	ldw	r5,0(sp)
   209f0:	003f7e06 	br	207ec <_gp+0xfffe6d1c>
   209f4:	04000304 	movi	r16,12
   209f8:	05c000c4 	movi	r23,3
   209fc:	003f7b06 	br	207ec <_gp+0xfffe6d1c>
   20a00:	01802034 	movhi	r6,128
   20a04:	000f883a 	mov	r7,zero
   20a08:	31bfffc4 	addi	r6,r6,-1
   20a0c:	013fffc4 	movi	r4,-1
   20a10:	003fac06 	br	208c4 <_gp+0xfffe6df4>
   20a14:	01400044 	movi	r5,1
   20a18:	2909c83a 	sub	r4,r5,r4
   20a1c:	00c006c4 	movi	r3,27
   20a20:	19004b0e 	bge	r3,r4,20b50 <__divsf3+0x3cc>
   20a24:	114e703a 	and	r7,r2,r5
   20a28:	0009883a 	mov	r4,zero
   20a2c:	000d883a 	mov	r6,zero
   20a30:	003fa406 	br	208c4 <_gp+0xfffe6df4>
   20a34:	9006917a 	slli	r3,r18,5
   20a38:	8822917a 	slli	r17,r17,5
   20a3c:	1c40372e 	bgeu	r3,r17,20b1c <__divsf3+0x398>
   20a40:	31bfffc4 	addi	r6,r6,-1
   20a44:	010006c4 	movi	r4,27
   20a48:	000b883a 	mov	r5,zero
   20a4c:	180f883a 	mov	r7,r3
   20a50:	294b883a 	add	r5,r5,r5
   20a54:	18c7883a 	add	r3,r3,r3
   20a58:	38000116 	blt	r7,zero,20a60 <__divsf3+0x2dc>
   20a5c:	1c400236 	bltu	r3,r17,20a68 <__divsf3+0x2e4>
   20a60:	1c47c83a 	sub	r3,r3,r17
   20a64:	29400054 	ori	r5,r5,1
   20a68:	213fffc4 	addi	r4,r4,-1
   20a6c:	203ff71e 	bne	r4,zero,20a4c <_gp+0xfffe6f7c>
   20a70:	1806c03a 	cmpne	r3,r3,zero
   20a74:	1962b03a 	or	r17,r3,r5
   20a78:	31001fc4 	addi	r4,r6,127
   20a7c:	013fe50e 	bge	zero,r4,20a14 <_gp+0xfffe6f44>
   20a80:	88c001cc 	andi	r3,r17,7
   20a84:	18000426 	beq	r3,zero,20a98 <__divsf3+0x314>
   20a88:	88c003cc 	andi	r3,r17,15
   20a8c:	01400104 	movi	r5,4
   20a90:	19400126 	beq	r3,r5,20a98 <__divsf3+0x314>
   20a94:	8963883a 	add	r17,r17,r5
   20a98:	88c2002c 	andhi	r3,r17,2048
   20a9c:	18000426 	beq	r3,zero,20ab0 <__divsf3+0x32c>
   20aa0:	00fe0034 	movhi	r3,63488
   20aa4:	18ffffc4 	addi	r3,r3,-1
   20aa8:	31002004 	addi	r4,r6,128
   20aac:	88e2703a 	and	r17,r17,r3
   20ab0:	00c03f84 	movi	r3,254
   20ab4:	193f8016 	blt	r3,r4,208b8 <_gp+0xfffe6de8>
   20ab8:	880c91ba 	slli	r6,r17,6
   20abc:	11c0004c 	andi	r7,r2,1
   20ac0:	300cd27a 	srli	r6,r6,9
   20ac4:	003f7f06 	br	208c4 <_gp+0xfffe6df4>
   20ac8:	9080102c 	andhi	r2,r18,64
   20acc:	10000226 	beq	r2,zero,20ad8 <__divsf3+0x354>
   20ad0:	8880102c 	andhi	r2,r17,64
   20ad4:	10001826 	beq	r2,zero,20b38 <__divsf3+0x3b4>
   20ad8:	00802034 	movhi	r2,128
   20adc:	91801034 	orhi	r6,r18,64
   20ae0:	10bfffc4 	addi	r2,r2,-1
   20ae4:	980f883a 	mov	r7,r19
   20ae8:	308c703a 	and	r6,r6,r2
   20aec:	003fc706 	br	20a0c <_gp+0xfffe6f3c>
   20af0:	008000c4 	movi	r2,3
   20af4:	b8802d26 	beq	r23,r2,20bac <__divsf3+0x428>
   20af8:	00c00044 	movi	r3,1
   20afc:	b005883a 	mov	r2,r22
   20b00:	b8ffdd1e 	bne	r23,r3,20a78 <_gp+0xfffe6fa8>
   20b04:	11c0004c 	andi	r7,r2,1
   20b08:	0009883a 	mov	r4,zero
   20b0c:	000d883a 	mov	r6,zero
   20b10:	003f6c06 	br	208c4 <_gp+0xfffe6df4>
   20b14:	9023883a 	mov	r17,r18
   20b18:	003f6406 	br	208ac <_gp+0xfffe6ddc>
   20b1c:	1c47c83a 	sub	r3,r3,r17
   20b20:	01000684 	movi	r4,26
   20b24:	01400044 	movi	r5,1
   20b28:	003fc806 	br	20a4c <_gp+0xfffe6f7c>
   20b2c:	9080102c 	andhi	r2,r18,64
   20b30:	103fe926 	beq	r2,zero,20ad8 <_gp+0xfffe7008>
   20b34:	0023883a 	mov	r17,zero
   20b38:	00802034 	movhi	r2,128
   20b3c:	89801034 	orhi	r6,r17,64
   20b40:	10bfffc4 	addi	r2,r2,-1
   20b44:	a80f883a 	mov	r7,r21
   20b48:	308c703a 	and	r6,r6,r2
   20b4c:	003faf06 	br	20a0c <_gp+0xfffe6f3c>
   20b50:	01c00804 	movi	r7,32
   20b54:	390fc83a 	sub	r7,r7,r4
   20b58:	89ce983a 	sll	r7,r17,r7
   20b5c:	890ad83a 	srl	r5,r17,r4
   20b60:	380ec03a 	cmpne	r7,r7,zero
   20b64:	29cab03a 	or	r5,r5,r7
   20b68:	28c001cc 	andi	r3,r5,7
   20b6c:	18000426 	beq	r3,zero,20b80 <__divsf3+0x3fc>
   20b70:	28c003cc 	andi	r3,r5,15
   20b74:	01000104 	movi	r4,4
   20b78:	19000126 	beq	r3,r4,20b80 <__divsf3+0x3fc>
   20b7c:	290b883a 	add	r5,r5,r4
   20b80:	28c1002c 	andhi	r3,r5,1024
   20b84:	18000426 	beq	r3,zero,20b98 <__divsf3+0x414>
   20b88:	11c0004c 	andi	r7,r2,1
   20b8c:	01000044 	movi	r4,1
   20b90:	000d883a 	mov	r6,zero
   20b94:	003f4b06 	br	208c4 <_gp+0xfffe6df4>
   20b98:	280a91ba 	slli	r5,r5,6
   20b9c:	11c0004c 	andi	r7,r2,1
   20ba0:	0009883a 	mov	r4,zero
   20ba4:	280cd27a 	srli	r6,r5,9
   20ba8:	003f4606 	br	208c4 <_gp+0xfffe6df4>
   20bac:	00802034 	movhi	r2,128
   20bb0:	89801034 	orhi	r6,r17,64
   20bb4:	10bfffc4 	addi	r2,r2,-1
   20bb8:	b00f883a 	mov	r7,r22
   20bbc:	308c703a 	and	r6,r6,r2
   20bc0:	003f9206 	br	20a0c <_gp+0xfffe6f3c>

00020bc4 <__mulsf3>:
   20bc4:	defff504 	addi	sp,sp,-44
   20bc8:	dc000115 	stw	r16,4(sp)
   20bcc:	2020d5fa 	srli	r16,r4,23
   20bd0:	dd400615 	stw	r21,24(sp)
   20bd4:	202ad7fa 	srli	r21,r4,31
   20bd8:	dc800315 	stw	r18,12(sp)
   20bdc:	04802034 	movhi	r18,128
   20be0:	df000915 	stw	fp,36(sp)
   20be4:	dd000515 	stw	r20,20(sp)
   20be8:	94bfffc4 	addi	r18,r18,-1
   20bec:	dfc00a15 	stw	ra,40(sp)
   20bf0:	ddc00815 	stw	r23,32(sp)
   20bf4:	dd800715 	stw	r22,28(sp)
   20bf8:	dcc00415 	stw	r19,16(sp)
   20bfc:	dc400215 	stw	r17,8(sp)
   20c00:	84003fcc 	andi	r16,r16,255
   20c04:	9124703a 	and	r18,r18,r4
   20c08:	a829883a 	mov	r20,r21
   20c0c:	af003fcc 	andi	fp,r21,255
   20c10:	80005426 	beq	r16,zero,20d64 <__mulsf3+0x1a0>
   20c14:	00803fc4 	movi	r2,255
   20c18:	80802f26 	beq	r16,r2,20cd8 <__mulsf3+0x114>
   20c1c:	91002034 	orhi	r4,r18,128
   20c20:	202490fa 	slli	r18,r4,3
   20c24:	843fe044 	addi	r16,r16,-127
   20c28:	0023883a 	mov	r17,zero
   20c2c:	002f883a 	mov	r23,zero
   20c30:	2804d5fa 	srli	r2,r5,23
   20c34:	282cd7fa 	srli	r22,r5,31
   20c38:	01002034 	movhi	r4,128
   20c3c:	213fffc4 	addi	r4,r4,-1
   20c40:	10803fcc 	andi	r2,r2,255
   20c44:	2166703a 	and	r19,r4,r5
   20c48:	b1803fcc 	andi	r6,r22,255
   20c4c:	10004c26 	beq	r2,zero,20d80 <__mulsf3+0x1bc>
   20c50:	00c03fc4 	movi	r3,255
   20c54:	10c04726 	beq	r2,r3,20d74 <__mulsf3+0x1b0>
   20c58:	99002034 	orhi	r4,r19,128
   20c5c:	202690fa 	slli	r19,r4,3
   20c60:	10bfe044 	addi	r2,r2,-127
   20c64:	0007883a 	mov	r3,zero
   20c68:	80a1883a 	add	r16,r16,r2
   20c6c:	010003c4 	movi	r4,15
   20c70:	1c44b03a 	or	r2,r3,r17
   20c74:	b56af03a 	xor	r21,r22,r21
   20c78:	81c00044 	addi	r7,r16,1
   20c7c:	20806b36 	bltu	r4,r2,20e2c <__mulsf3+0x268>
   20c80:	100490ba 	slli	r2,r2,2
   20c84:	010000b4 	movhi	r4,2
   20c88:	21032604 	addi	r4,r4,3224
   20c8c:	1105883a 	add	r2,r2,r4
   20c90:	10800017 	ldw	r2,0(r2)
   20c94:	1000683a 	jmp	r2
   20c98:	00020e2c 	andhi	zero,zero,2104
   20c9c:	00020cec 	andhi	zero,zero,2099
   20ca0:	00020cec 	andhi	zero,zero,2099
   20ca4:	00020ce8 	cmpgeui	zero,zero,2099
   20ca8:	00020e10 	cmplti	zero,zero,2104
   20cac:	00020e10 	cmplti	zero,zero,2104
   20cb0:	00020dfc 	xorhi	zero,zero,2103
   20cb4:	00020ce8 	cmpgeui	zero,zero,2099
   20cb8:	00020e10 	cmplti	zero,zero,2104
   20cbc:	00020dfc 	xorhi	zero,zero,2103
   20cc0:	00020e10 	cmplti	zero,zero,2104
   20cc4:	00020ce8 	cmpgeui	zero,zero,2099
   20cc8:	00020e1c 	xori	zero,zero,2104
   20ccc:	00020e1c 	xori	zero,zero,2104
   20cd0:	00020e1c 	xori	zero,zero,2104
   20cd4:	00020ef8 	rdprs	zero,zero,2107
   20cd8:	90003b1e 	bne	r18,zero,20dc8 <__mulsf3+0x204>
   20cdc:	04400204 	movi	r17,8
   20ce0:	05c00084 	movi	r23,2
   20ce4:	003fd206 	br	20c30 <_gp+0xfffe7160>
   20ce8:	302b883a 	mov	r21,r6
   20cec:	00800084 	movi	r2,2
   20cf0:	18802626 	beq	r3,r2,20d8c <__mulsf3+0x1c8>
   20cf4:	008000c4 	movi	r2,3
   20cf8:	1880ab26 	beq	r3,r2,20fa8 <__mulsf3+0x3e4>
   20cfc:	00800044 	movi	r2,1
   20d00:	1880a21e 	bne	r3,r2,20f8c <__mulsf3+0x3c8>
   20d04:	a829883a 	mov	r20,r21
   20d08:	0007883a 	mov	r3,zero
   20d0c:	0009883a 	mov	r4,zero
   20d10:	18803fcc 	andi	r2,r3,255
   20d14:	100695fa 	slli	r3,r2,23
   20d18:	a0803fcc 	andi	r2,r20,255
   20d1c:	100a97fa 	slli	r5,r2,31
   20d20:	00802034 	movhi	r2,128
   20d24:	10bfffc4 	addi	r2,r2,-1
   20d28:	2084703a 	and	r2,r4,r2
   20d2c:	10c4b03a 	or	r2,r2,r3
   20d30:	1144b03a 	or	r2,r2,r5
   20d34:	dfc00a17 	ldw	ra,40(sp)
   20d38:	df000917 	ldw	fp,36(sp)
   20d3c:	ddc00817 	ldw	r23,32(sp)
   20d40:	dd800717 	ldw	r22,28(sp)
   20d44:	dd400617 	ldw	r21,24(sp)
   20d48:	dd000517 	ldw	r20,20(sp)
   20d4c:	dcc00417 	ldw	r19,16(sp)
   20d50:	dc800317 	ldw	r18,12(sp)
   20d54:	dc400217 	ldw	r17,8(sp)
   20d58:	dc000117 	ldw	r16,4(sp)
   20d5c:	dec00b04 	addi	sp,sp,44
   20d60:	f800283a 	ret
   20d64:	90000d1e 	bne	r18,zero,20d9c <__mulsf3+0x1d8>
   20d68:	04400104 	movi	r17,4
   20d6c:	05c00044 	movi	r23,1
   20d70:	003faf06 	br	20c30 <_gp+0xfffe7160>
   20d74:	9806c03a 	cmpne	r3,r19,zero
   20d78:	18c00084 	addi	r3,r3,2
   20d7c:	003fba06 	br	20c68 <_gp+0xfffe7198>
   20d80:	9800141e 	bne	r19,zero,20dd4 <__mulsf3+0x210>
   20d84:	00c00044 	movi	r3,1
   20d88:	003fb706 	br	20c68 <_gp+0xfffe7198>
   20d8c:	a829883a 	mov	r20,r21
   20d90:	00ffffc4 	movi	r3,-1
   20d94:	0009883a 	mov	r4,zero
   20d98:	003fdd06 	br	20d10 <_gp+0xfffe7240>
   20d9c:	9009883a 	mov	r4,r18
   20da0:	d9400015 	stw	r5,0(sp)
   20da4:	0022d400 	call	22d40 <__clzsi2>
   20da8:	10fffec4 	addi	r3,r2,-5
   20dac:	10801d84 	addi	r2,r2,118
   20db0:	90e4983a 	sll	r18,r18,r3
   20db4:	00a1c83a 	sub	r16,zero,r2
   20db8:	0023883a 	mov	r17,zero
   20dbc:	002f883a 	mov	r23,zero
   20dc0:	d9400017 	ldw	r5,0(sp)
   20dc4:	003f9a06 	br	20c30 <_gp+0xfffe7160>
   20dc8:	04400304 	movi	r17,12
   20dcc:	05c000c4 	movi	r23,3
   20dd0:	003f9706 	br	20c30 <_gp+0xfffe7160>
   20dd4:	9809883a 	mov	r4,r19
   20dd8:	d9800015 	stw	r6,0(sp)
   20ddc:	0022d400 	call	22d40 <__clzsi2>
   20de0:	10fffec4 	addi	r3,r2,-5
   20de4:	10801d84 	addi	r2,r2,118
   20de8:	98e6983a 	sll	r19,r19,r3
   20dec:	0085c83a 	sub	r2,zero,r2
   20df0:	0007883a 	mov	r3,zero
   20df4:	d9800017 	ldw	r6,0(sp)
   20df8:	003f9b06 	br	20c68 <_gp+0xfffe7198>
   20dfc:	01002034 	movhi	r4,128
   20e00:	0029883a 	mov	r20,zero
   20e04:	213fffc4 	addi	r4,r4,-1
   20e08:	00ffffc4 	movi	r3,-1
   20e0c:	003fc006 	br	20d10 <_gp+0xfffe7240>
   20e10:	9027883a 	mov	r19,r18
   20e14:	b807883a 	mov	r3,r23
   20e18:	003fb406 	br	20cec <_gp+0xfffe721c>
   20e1c:	9027883a 	mov	r19,r18
   20e20:	e02b883a 	mov	r21,fp
   20e24:	b807883a 	mov	r3,r23
   20e28:	003fb006 	br	20cec <_gp+0xfffe721c>
   20e2c:	9004d43a 	srli	r2,r18,16
   20e30:	9810d43a 	srli	r8,r19,16
   20e34:	94bfffcc 	andi	r18,r18,65535
   20e38:	993fffcc 	andi	r4,r19,65535
   20e3c:	910d383a 	mul	r6,r18,r4
   20e40:	20a7383a 	mul	r19,r4,r2
   20e44:	9225383a 	mul	r18,r18,r8
   20e48:	3006d43a 	srli	r3,r6,16
   20e4c:	1211383a 	mul	r8,r2,r8
   20e50:	94e5883a 	add	r18,r18,r19
   20e54:	1c87883a 	add	r3,r3,r18
   20e58:	1cc0022e 	bgeu	r3,r19,20e64 <__mulsf3+0x2a0>
   20e5c:	00800074 	movhi	r2,1
   20e60:	4091883a 	add	r8,r8,r2
   20e64:	1804943a 	slli	r2,r3,16
   20e68:	31bfffcc 	andi	r6,r6,65535
   20e6c:	1806d43a 	srli	r3,r3,16
   20e70:	1185883a 	add	r2,r2,r6
   20e74:	102691ba 	slli	r19,r2,6
   20e78:	1a07883a 	add	r3,r3,r8
   20e7c:	1004d6ba 	srli	r2,r2,26
   20e80:	180891ba 	slli	r4,r3,6
   20e84:	9826c03a 	cmpne	r19,r19,zero
   20e88:	9884b03a 	or	r2,r19,r2
   20e8c:	1126b03a 	or	r19,r2,r4
   20e90:	9882002c 	andhi	r2,r19,2048
   20e94:	10000426 	beq	r2,zero,20ea8 <__mulsf3+0x2e4>
   20e98:	9804d07a 	srli	r2,r19,1
   20e9c:	9900004c 	andi	r4,r19,1
   20ea0:	3821883a 	mov	r16,r7
   20ea4:	1126b03a 	or	r19,r2,r4
   20ea8:	80c01fc4 	addi	r3,r16,127
   20eac:	00c0210e 	bge	zero,r3,20f34 <__mulsf3+0x370>
   20eb0:	988001cc 	andi	r2,r19,7
   20eb4:	10000426 	beq	r2,zero,20ec8 <__mulsf3+0x304>
   20eb8:	988003cc 	andi	r2,r19,15
   20ebc:	01000104 	movi	r4,4
   20ec0:	11000126 	beq	r2,r4,20ec8 <__mulsf3+0x304>
   20ec4:	9927883a 	add	r19,r19,r4
   20ec8:	9882002c 	andhi	r2,r19,2048
   20ecc:	10000426 	beq	r2,zero,20ee0 <__mulsf3+0x31c>
   20ed0:	00be0034 	movhi	r2,63488
   20ed4:	10bfffc4 	addi	r2,r2,-1
   20ed8:	80c02004 	addi	r3,r16,128
   20edc:	98a6703a 	and	r19,r19,r2
   20ee0:	00803f84 	movi	r2,254
   20ee4:	10ffa916 	blt	r2,r3,20d8c <_gp+0xfffe72bc>
   20ee8:	980891ba 	slli	r4,r19,6
   20eec:	a829883a 	mov	r20,r21
   20ef0:	2008d27a 	srli	r4,r4,9
   20ef4:	003f8606 	br	20d10 <_gp+0xfffe7240>
   20ef8:	9080102c 	andhi	r2,r18,64
   20efc:	10000826 	beq	r2,zero,20f20 <__mulsf3+0x35c>
   20f00:	9880102c 	andhi	r2,r19,64
   20f04:	1000061e 	bne	r2,zero,20f20 <__mulsf3+0x35c>
   20f08:	00802034 	movhi	r2,128
   20f0c:	99001034 	orhi	r4,r19,64
   20f10:	10bfffc4 	addi	r2,r2,-1
   20f14:	b029883a 	mov	r20,r22
   20f18:	2088703a 	and	r4,r4,r2
   20f1c:	003fba06 	br	20e08 <_gp+0xfffe7338>
   20f20:	00802034 	movhi	r2,128
   20f24:	91001034 	orhi	r4,r18,64
   20f28:	10bfffc4 	addi	r2,r2,-1
   20f2c:	2088703a 	and	r4,r4,r2
   20f30:	003fb506 	br	20e08 <_gp+0xfffe7338>
   20f34:	00800044 	movi	r2,1
   20f38:	10c7c83a 	sub	r3,r2,r3
   20f3c:	008006c4 	movi	r2,27
   20f40:	10ff7016 	blt	r2,r3,20d04 <_gp+0xfffe7234>
   20f44:	00800804 	movi	r2,32
   20f48:	10c5c83a 	sub	r2,r2,r3
   20f4c:	9884983a 	sll	r2,r19,r2
   20f50:	98c6d83a 	srl	r3,r19,r3
   20f54:	1004c03a 	cmpne	r2,r2,zero
   20f58:	1884b03a 	or	r2,r3,r2
   20f5c:	10c001cc 	andi	r3,r2,7
   20f60:	18000426 	beq	r3,zero,20f74 <__mulsf3+0x3b0>
   20f64:	10c003cc 	andi	r3,r2,15
   20f68:	01000104 	movi	r4,4
   20f6c:	19000126 	beq	r3,r4,20f74 <__mulsf3+0x3b0>
   20f70:	1105883a 	add	r2,r2,r4
   20f74:	10c1002c 	andhi	r3,r2,1024
   20f78:	18000626 	beq	r3,zero,20f94 <__mulsf3+0x3d0>
   20f7c:	a829883a 	mov	r20,r21
   20f80:	00c00044 	movi	r3,1
   20f84:	0009883a 	mov	r4,zero
   20f88:	003f6106 	br	20d10 <_gp+0xfffe7240>
   20f8c:	3821883a 	mov	r16,r7
   20f90:	003fc506 	br	20ea8 <_gp+0xfffe73d8>
   20f94:	100491ba 	slli	r2,r2,6
   20f98:	a829883a 	mov	r20,r21
   20f9c:	0007883a 	mov	r3,zero
   20fa0:	1008d27a 	srli	r4,r2,9
   20fa4:	003f5a06 	br	20d10 <_gp+0xfffe7240>
   20fa8:	00802034 	movhi	r2,128
   20fac:	99001034 	orhi	r4,r19,64
   20fb0:	10bfffc4 	addi	r2,r2,-1
   20fb4:	a829883a 	mov	r20,r21
   20fb8:	2088703a 	and	r4,r4,r2
   20fbc:	003f9206 	br	20e08 <_gp+0xfffe7338>

00020fc0 <__fixsfsi>:
   20fc0:	200ad5fa 	srli	r5,r4,23
   20fc4:	00c02034 	movhi	r3,128
   20fc8:	18ffffc4 	addi	r3,r3,-1
   20fcc:	29403fcc 	andi	r5,r5,255
   20fd0:	00801f84 	movi	r2,126
   20fd4:	1906703a 	and	r3,r3,r4
   20fd8:	2008d7fa 	srli	r4,r4,31
   20fdc:	11400e0e 	bge	r2,r5,21018 <__fixsfsi+0x58>
   20fe0:	00802744 	movi	r2,157
   20fe4:	11400816 	blt	r2,r5,21008 <__fixsfsi+0x48>
   20fe8:	00802544 	movi	r2,149
   20fec:	18c02034 	orhi	r3,r3,128
   20ff0:	11400b0e 	bge	r2,r5,21020 <__fixsfsi+0x60>
   20ff4:	28bfda84 	addi	r2,r5,-150
   20ff8:	1884983a 	sll	r2,r3,r2
   20ffc:	20000726 	beq	r4,zero,2101c <__fixsfsi+0x5c>
   21000:	0085c83a 	sub	r2,zero,r2
   21004:	f800283a 	ret
   21008:	00a00034 	movhi	r2,32768
   2100c:	10bfffc4 	addi	r2,r2,-1
   21010:	2085883a 	add	r2,r4,r2
   21014:	f800283a 	ret
   21018:	0005883a 	mov	r2,zero
   2101c:	f800283a 	ret
   21020:	00802584 	movi	r2,150
   21024:	1145c83a 	sub	r2,r2,r5
   21028:	1884d83a 	srl	r2,r3,r2
   2102c:	003ff306 	br	20ffc <_gp+0xfffe752c>

00021030 <__floatunsisf>:
   21030:	defffe04 	addi	sp,sp,-8
   21034:	dfc00115 	stw	ra,4(sp)
   21038:	dc000015 	stw	r16,0(sp)
   2103c:	20002c26 	beq	r4,zero,210f0 <__floatunsisf+0xc0>
   21040:	2021883a 	mov	r16,r4
   21044:	0022d400 	call	22d40 <__clzsi2>
   21048:	00c02784 	movi	r3,158
   2104c:	1887c83a 	sub	r3,r3,r2
   21050:	01002584 	movi	r4,150
   21054:	20c00f16 	blt	r4,r3,21094 <__floatunsisf+0x64>
   21058:	20c9c83a 	sub	r4,r4,r3
   2105c:	8108983a 	sll	r4,r16,r4
   21060:	00802034 	movhi	r2,128
   21064:	10bfffc4 	addi	r2,r2,-1
   21068:	2088703a 	and	r4,r4,r2
   2106c:	18803fcc 	andi	r2,r3,255
   21070:	100695fa 	slli	r3,r2,23
   21074:	00802034 	movhi	r2,128
   21078:	10bfffc4 	addi	r2,r2,-1
   2107c:	2084703a 	and	r2,r4,r2
   21080:	10c4b03a 	or	r2,r2,r3
   21084:	dfc00117 	ldw	ra,4(sp)
   21088:	dc000017 	ldw	r16,0(sp)
   2108c:	dec00204 	addi	sp,sp,8
   21090:	f800283a 	ret
   21094:	01002644 	movi	r4,153
   21098:	20c01816 	blt	r4,r3,210fc <__floatunsisf+0xcc>
   2109c:	20c9c83a 	sub	r4,r4,r3
   210a0:	8108983a 	sll	r4,r16,r4
   210a4:	017f0034 	movhi	r5,64512
   210a8:	297fffc4 	addi	r5,r5,-1
   210ac:	218001cc 	andi	r6,r4,7
   210b0:	214a703a 	and	r5,r4,r5
   210b4:	30000426 	beq	r6,zero,210c8 <__floatunsisf+0x98>
   210b8:	210003cc 	andi	r4,r4,15
   210bc:	01800104 	movi	r6,4
   210c0:	21800126 	beq	r4,r6,210c8 <__floatunsisf+0x98>
   210c4:	298b883a 	add	r5,r5,r6
   210c8:	2901002c 	andhi	r4,r5,1024
   210cc:	20000526 	beq	r4,zero,210e4 <__floatunsisf+0xb4>
   210d0:	00c027c4 	movi	r3,159
   210d4:	1887c83a 	sub	r3,r3,r2
   210d8:	00bf0034 	movhi	r2,64512
   210dc:	10bfffc4 	addi	r2,r2,-1
   210e0:	288a703a 	and	r5,r5,r2
   210e4:	280891ba 	slli	r4,r5,6
   210e8:	2008d27a 	srli	r4,r4,9
   210ec:	003fdf06 	br	2106c <_gp+0xfffe759c>
   210f0:	0007883a 	mov	r3,zero
   210f4:	0009883a 	mov	r4,zero
   210f8:	003fdc06 	br	2106c <_gp+0xfffe759c>
   210fc:	01402e44 	movi	r5,185
   21100:	28cbc83a 	sub	r5,r5,r3
   21104:	01000144 	movi	r4,5
   21108:	2089c83a 	sub	r4,r4,r2
   2110c:	814a983a 	sll	r5,r16,r5
   21110:	8108d83a 	srl	r4,r16,r4
   21114:	2820c03a 	cmpne	r16,r5,zero
   21118:	2408b03a 	or	r4,r4,r16
   2111c:	003fe106 	br	210a4 <_gp+0xfffe75d4>

00021120 <__adddf3>:
   21120:	02c00434 	movhi	r11,16
   21124:	5affffc4 	addi	r11,r11,-1
   21128:	2806d7fa 	srli	r3,r5,31
   2112c:	2ad4703a 	and	r10,r5,r11
   21130:	3ad2703a 	and	r9,r7,r11
   21134:	3804d53a 	srli	r2,r7,20
   21138:	3018d77a 	srli	r12,r6,29
   2113c:	280ad53a 	srli	r5,r5,20
   21140:	501490fa 	slli	r10,r10,3
   21144:	2010d77a 	srli	r8,r4,29
   21148:	481290fa 	slli	r9,r9,3
   2114c:	380ed7fa 	srli	r7,r7,31
   21150:	defffb04 	addi	sp,sp,-20
   21154:	dc800215 	stw	r18,8(sp)
   21158:	dc400115 	stw	r17,4(sp)
   2115c:	dc000015 	stw	r16,0(sp)
   21160:	dfc00415 	stw	ra,16(sp)
   21164:	dcc00315 	stw	r19,12(sp)
   21168:	1c803fcc 	andi	r18,r3,255
   2116c:	2c01ffcc 	andi	r16,r5,2047
   21170:	5210b03a 	or	r8,r10,r8
   21174:	202290fa 	slli	r17,r4,3
   21178:	1081ffcc 	andi	r2,r2,2047
   2117c:	4b12b03a 	or	r9,r9,r12
   21180:	300c90fa 	slli	r6,r6,3
   21184:	91c07526 	beq	r18,r7,2135c <__adddf3+0x23c>
   21188:	8087c83a 	sub	r3,r16,r2
   2118c:	00c0ab0e 	bge	zero,r3,2143c <__adddf3+0x31c>
   21190:	10002a1e 	bne	r2,zero,2123c <__adddf3+0x11c>
   21194:	4984b03a 	or	r2,r9,r6
   21198:	1000961e 	bne	r2,zero,213f4 <__adddf3+0x2d4>
   2119c:	888001cc 	andi	r2,r17,7
   211a0:	10000726 	beq	r2,zero,211c0 <__adddf3+0xa0>
   211a4:	888003cc 	andi	r2,r17,15
   211a8:	00c00104 	movi	r3,4
   211ac:	10c00426 	beq	r2,r3,211c0 <__adddf3+0xa0>
   211b0:	88c7883a 	add	r3,r17,r3
   211b4:	1c63803a 	cmpltu	r17,r3,r17
   211b8:	4451883a 	add	r8,r8,r17
   211bc:	1823883a 	mov	r17,r3
   211c0:	4080202c 	andhi	r2,r8,128
   211c4:	10005926 	beq	r2,zero,2132c <__adddf3+0x20c>
   211c8:	84000044 	addi	r16,r16,1
   211cc:	0081ffc4 	movi	r2,2047
   211d0:	8080ba26 	beq	r16,r2,214bc <__adddf3+0x39c>
   211d4:	00bfe034 	movhi	r2,65408
   211d8:	10bfffc4 	addi	r2,r2,-1
   211dc:	4090703a 	and	r8,r8,r2
   211e0:	4004977a 	slli	r2,r8,29
   211e4:	4010927a 	slli	r8,r8,9
   211e8:	8822d0fa 	srli	r17,r17,3
   211ec:	8401ffcc 	andi	r16,r16,2047
   211f0:	4010d33a 	srli	r8,r8,12
   211f4:	9007883a 	mov	r3,r18
   211f8:	1444b03a 	or	r2,r2,r17
   211fc:	8401ffcc 	andi	r16,r16,2047
   21200:	8020953a 	slli	r16,r16,20
   21204:	18c03fcc 	andi	r3,r3,255
   21208:	01000434 	movhi	r4,16
   2120c:	213fffc4 	addi	r4,r4,-1
   21210:	180697fa 	slli	r3,r3,31
   21214:	4110703a 	and	r8,r8,r4
   21218:	4410b03a 	or	r8,r8,r16
   2121c:	40c6b03a 	or	r3,r8,r3
   21220:	dfc00417 	ldw	ra,16(sp)
   21224:	dcc00317 	ldw	r19,12(sp)
   21228:	dc800217 	ldw	r18,8(sp)
   2122c:	dc400117 	ldw	r17,4(sp)
   21230:	dc000017 	ldw	r16,0(sp)
   21234:	dec00504 	addi	sp,sp,20
   21238:	f800283a 	ret
   2123c:	0081ffc4 	movi	r2,2047
   21240:	80bfd626 	beq	r16,r2,2119c <_gp+0xfffe76cc>
   21244:	4a402034 	orhi	r9,r9,128
   21248:	00800e04 	movi	r2,56
   2124c:	10c09f16 	blt	r2,r3,214cc <__adddf3+0x3ac>
   21250:	008007c4 	movi	r2,31
   21254:	10c0c216 	blt	r2,r3,21560 <__adddf3+0x440>
   21258:	00800804 	movi	r2,32
   2125c:	10c5c83a 	sub	r2,r2,r3
   21260:	488a983a 	sll	r5,r9,r2
   21264:	30c8d83a 	srl	r4,r6,r3
   21268:	3084983a 	sll	r2,r6,r2
   2126c:	48c6d83a 	srl	r3,r9,r3
   21270:	290cb03a 	or	r6,r5,r4
   21274:	1004c03a 	cmpne	r2,r2,zero
   21278:	308cb03a 	or	r6,r6,r2
   2127c:	898dc83a 	sub	r6,r17,r6
   21280:	89a3803a 	cmpltu	r17,r17,r6
   21284:	40d1c83a 	sub	r8,r8,r3
   21288:	4451c83a 	sub	r8,r8,r17
   2128c:	3023883a 	mov	r17,r6
   21290:	4080202c 	andhi	r2,r8,128
   21294:	10002326 	beq	r2,zero,21324 <__adddf3+0x204>
   21298:	04c02034 	movhi	r19,128
   2129c:	9cffffc4 	addi	r19,r19,-1
   212a0:	44e6703a 	and	r19,r8,r19
   212a4:	98007626 	beq	r19,zero,21480 <__adddf3+0x360>
   212a8:	9809883a 	mov	r4,r19
   212ac:	0022d400 	call	22d40 <__clzsi2>
   212b0:	10fffe04 	addi	r3,r2,-8
   212b4:	010007c4 	movi	r4,31
   212b8:	20c07716 	blt	r4,r3,21498 <__adddf3+0x378>
   212bc:	00800804 	movi	r2,32
   212c0:	10c5c83a 	sub	r2,r2,r3
   212c4:	8884d83a 	srl	r2,r17,r2
   212c8:	98d0983a 	sll	r8,r19,r3
   212cc:	88e2983a 	sll	r17,r17,r3
   212d0:	1204b03a 	or	r2,r2,r8
   212d4:	1c007416 	blt	r3,r16,214a8 <__adddf3+0x388>
   212d8:	1c21c83a 	sub	r16,r3,r16
   212dc:	82000044 	addi	r8,r16,1
   212e0:	00c007c4 	movi	r3,31
   212e4:	1a009116 	blt	r3,r8,2152c <__adddf3+0x40c>
   212e8:	00c00804 	movi	r3,32
   212ec:	1a07c83a 	sub	r3,r3,r8
   212f0:	8a08d83a 	srl	r4,r17,r8
   212f4:	88e2983a 	sll	r17,r17,r3
   212f8:	10c6983a 	sll	r3,r2,r3
   212fc:	1210d83a 	srl	r8,r2,r8
   21300:	8804c03a 	cmpne	r2,r17,zero
   21304:	1906b03a 	or	r3,r3,r4
   21308:	18a2b03a 	or	r17,r3,r2
   2130c:	0021883a 	mov	r16,zero
   21310:	003fa206 	br	2119c <_gp+0xfffe76cc>
   21314:	1890b03a 	or	r8,r3,r2
   21318:	40017d26 	beq	r8,zero,21910 <__adddf3+0x7f0>
   2131c:	1011883a 	mov	r8,r2
   21320:	1823883a 	mov	r17,r3
   21324:	888001cc 	andi	r2,r17,7
   21328:	103f9e1e 	bne	r2,zero,211a4 <_gp+0xfffe76d4>
   2132c:	4004977a 	slli	r2,r8,29
   21330:	8822d0fa 	srli	r17,r17,3
   21334:	4010d0fa 	srli	r8,r8,3
   21338:	9007883a 	mov	r3,r18
   2133c:	1444b03a 	or	r2,r2,r17
   21340:	0101ffc4 	movi	r4,2047
   21344:	81002426 	beq	r16,r4,213d8 <__adddf3+0x2b8>
   21348:	8120703a 	and	r16,r16,r4
   2134c:	01000434 	movhi	r4,16
   21350:	213fffc4 	addi	r4,r4,-1
   21354:	4110703a 	and	r8,r8,r4
   21358:	003fa806 	br	211fc <_gp+0xfffe772c>
   2135c:	8089c83a 	sub	r4,r16,r2
   21360:	01005e0e 	bge	zero,r4,214dc <__adddf3+0x3bc>
   21364:	10002b26 	beq	r2,zero,21414 <__adddf3+0x2f4>
   21368:	0081ffc4 	movi	r2,2047
   2136c:	80bf8b26 	beq	r16,r2,2119c <_gp+0xfffe76cc>
   21370:	4a402034 	orhi	r9,r9,128
   21374:	00800e04 	movi	r2,56
   21378:	1100a40e 	bge	r2,r4,2160c <__adddf3+0x4ec>
   2137c:	498cb03a 	or	r6,r9,r6
   21380:	300ac03a 	cmpne	r5,r6,zero
   21384:	0013883a 	mov	r9,zero
   21388:	2c4b883a 	add	r5,r5,r17
   2138c:	2c63803a 	cmpltu	r17,r5,r17
   21390:	4a11883a 	add	r8,r9,r8
   21394:	8a11883a 	add	r8,r17,r8
   21398:	2823883a 	mov	r17,r5
   2139c:	4080202c 	andhi	r2,r8,128
   213a0:	103fe026 	beq	r2,zero,21324 <_gp+0xfffe7854>
   213a4:	84000044 	addi	r16,r16,1
   213a8:	0081ffc4 	movi	r2,2047
   213ac:	8080d226 	beq	r16,r2,216f8 <__adddf3+0x5d8>
   213b0:	00bfe034 	movhi	r2,65408
   213b4:	10bfffc4 	addi	r2,r2,-1
   213b8:	4090703a 	and	r8,r8,r2
   213bc:	880ad07a 	srli	r5,r17,1
   213c0:	400897fa 	slli	r4,r8,31
   213c4:	88c0004c 	andi	r3,r17,1
   213c8:	28e2b03a 	or	r17,r5,r3
   213cc:	4010d07a 	srli	r8,r8,1
   213d0:	2462b03a 	or	r17,r4,r17
   213d4:	003f7106 	br	2119c <_gp+0xfffe76cc>
   213d8:	4088b03a 	or	r4,r8,r2
   213dc:	20014526 	beq	r4,zero,218f4 <__adddf3+0x7d4>
   213e0:	01000434 	movhi	r4,16
   213e4:	42000234 	orhi	r8,r8,8
   213e8:	213fffc4 	addi	r4,r4,-1
   213ec:	4110703a 	and	r8,r8,r4
   213f0:	003f8206 	br	211fc <_gp+0xfffe772c>
   213f4:	18ffffc4 	addi	r3,r3,-1
   213f8:	1800491e 	bne	r3,zero,21520 <__adddf3+0x400>
   213fc:	898bc83a 	sub	r5,r17,r6
   21400:	8963803a 	cmpltu	r17,r17,r5
   21404:	4251c83a 	sub	r8,r8,r9
   21408:	4451c83a 	sub	r8,r8,r17
   2140c:	2823883a 	mov	r17,r5
   21410:	003f9f06 	br	21290 <_gp+0xfffe77c0>
   21414:	4984b03a 	or	r2,r9,r6
   21418:	103f6026 	beq	r2,zero,2119c <_gp+0xfffe76cc>
   2141c:	213fffc4 	addi	r4,r4,-1
   21420:	2000931e 	bne	r4,zero,21670 <__adddf3+0x550>
   21424:	898d883a 	add	r6,r17,r6
   21428:	3463803a 	cmpltu	r17,r6,r17
   2142c:	4251883a 	add	r8,r8,r9
   21430:	8a11883a 	add	r8,r17,r8
   21434:	3023883a 	mov	r17,r6
   21438:	003fd806 	br	2139c <_gp+0xfffe78cc>
   2143c:	1800541e 	bne	r3,zero,21590 <__adddf3+0x470>
   21440:	80800044 	addi	r2,r16,1
   21444:	1081ffcc 	andi	r2,r2,2047
   21448:	00c00044 	movi	r3,1
   2144c:	1880a00e 	bge	r3,r2,216d0 <__adddf3+0x5b0>
   21450:	8989c83a 	sub	r4,r17,r6
   21454:	8905803a 	cmpltu	r2,r17,r4
   21458:	4267c83a 	sub	r19,r8,r9
   2145c:	98a7c83a 	sub	r19,r19,r2
   21460:	9880202c 	andhi	r2,r19,128
   21464:	10006326 	beq	r2,zero,215f4 <__adddf3+0x4d4>
   21468:	3463c83a 	sub	r17,r6,r17
   2146c:	4a07c83a 	sub	r3,r9,r8
   21470:	344d803a 	cmpltu	r6,r6,r17
   21474:	19a7c83a 	sub	r19,r3,r6
   21478:	3825883a 	mov	r18,r7
   2147c:	983f8a1e 	bne	r19,zero,212a8 <_gp+0xfffe77d8>
   21480:	8809883a 	mov	r4,r17
   21484:	0022d400 	call	22d40 <__clzsi2>
   21488:	10800804 	addi	r2,r2,32
   2148c:	10fffe04 	addi	r3,r2,-8
   21490:	010007c4 	movi	r4,31
   21494:	20ff890e 	bge	r4,r3,212bc <_gp+0xfffe77ec>
   21498:	10bff604 	addi	r2,r2,-40
   2149c:	8884983a 	sll	r2,r17,r2
   214a0:	0023883a 	mov	r17,zero
   214a4:	1c3f8c0e 	bge	r3,r16,212d8 <_gp+0xfffe7808>
   214a8:	023fe034 	movhi	r8,65408
   214ac:	423fffc4 	addi	r8,r8,-1
   214b0:	80e1c83a 	sub	r16,r16,r3
   214b4:	1210703a 	and	r8,r2,r8
   214b8:	003f3806 	br	2119c <_gp+0xfffe76cc>
   214bc:	9007883a 	mov	r3,r18
   214c0:	0011883a 	mov	r8,zero
   214c4:	0005883a 	mov	r2,zero
   214c8:	003f4c06 	br	211fc <_gp+0xfffe772c>
   214cc:	498cb03a 	or	r6,r9,r6
   214d0:	300cc03a 	cmpne	r6,r6,zero
   214d4:	0007883a 	mov	r3,zero
   214d8:	003f6806 	br	2127c <_gp+0xfffe77ac>
   214dc:	20009c1e 	bne	r4,zero,21750 <__adddf3+0x630>
   214e0:	80800044 	addi	r2,r16,1
   214e4:	1141ffcc 	andi	r5,r2,2047
   214e8:	01000044 	movi	r4,1
   214ec:	2140670e 	bge	r4,r5,2168c <__adddf3+0x56c>
   214f0:	0101ffc4 	movi	r4,2047
   214f4:	11007f26 	beq	r2,r4,216f4 <__adddf3+0x5d4>
   214f8:	898d883a 	add	r6,r17,r6
   214fc:	4247883a 	add	r3,r8,r9
   21500:	3451803a 	cmpltu	r8,r6,r17
   21504:	40d1883a 	add	r8,r8,r3
   21508:	402297fa 	slli	r17,r8,31
   2150c:	300cd07a 	srli	r6,r6,1
   21510:	4010d07a 	srli	r8,r8,1
   21514:	1021883a 	mov	r16,r2
   21518:	89a2b03a 	or	r17,r17,r6
   2151c:	003f1f06 	br	2119c <_gp+0xfffe76cc>
   21520:	0081ffc4 	movi	r2,2047
   21524:	80bf481e 	bne	r16,r2,21248 <_gp+0xfffe7778>
   21528:	003f1c06 	br	2119c <_gp+0xfffe76cc>
   2152c:	843ff844 	addi	r16,r16,-31
   21530:	01000804 	movi	r4,32
   21534:	1406d83a 	srl	r3,r2,r16
   21538:	41005026 	beq	r8,r4,2167c <__adddf3+0x55c>
   2153c:	01001004 	movi	r4,64
   21540:	2211c83a 	sub	r8,r4,r8
   21544:	1204983a 	sll	r2,r2,r8
   21548:	88a2b03a 	or	r17,r17,r2
   2154c:	8822c03a 	cmpne	r17,r17,zero
   21550:	1c62b03a 	or	r17,r3,r17
   21554:	0011883a 	mov	r8,zero
   21558:	0021883a 	mov	r16,zero
   2155c:	003f7106 	br	21324 <_gp+0xfffe7854>
   21560:	193ff804 	addi	r4,r3,-32
   21564:	00800804 	movi	r2,32
   21568:	4908d83a 	srl	r4,r9,r4
   2156c:	18804526 	beq	r3,r2,21684 <__adddf3+0x564>
   21570:	00801004 	movi	r2,64
   21574:	10c5c83a 	sub	r2,r2,r3
   21578:	4886983a 	sll	r3,r9,r2
   2157c:	198cb03a 	or	r6,r3,r6
   21580:	300cc03a 	cmpne	r6,r6,zero
   21584:	218cb03a 	or	r6,r4,r6
   21588:	0007883a 	mov	r3,zero
   2158c:	003f3b06 	br	2127c <_gp+0xfffe77ac>
   21590:	80002a26 	beq	r16,zero,2163c <__adddf3+0x51c>
   21594:	0101ffc4 	movi	r4,2047
   21598:	11006826 	beq	r2,r4,2173c <__adddf3+0x61c>
   2159c:	00c7c83a 	sub	r3,zero,r3
   215a0:	42002034 	orhi	r8,r8,128
   215a4:	01000e04 	movi	r4,56
   215a8:	20c07c16 	blt	r4,r3,2179c <__adddf3+0x67c>
   215ac:	010007c4 	movi	r4,31
   215b0:	20c0da16 	blt	r4,r3,2191c <__adddf3+0x7fc>
   215b4:	01000804 	movi	r4,32
   215b8:	20c9c83a 	sub	r4,r4,r3
   215bc:	4114983a 	sll	r10,r8,r4
   215c0:	88cad83a 	srl	r5,r17,r3
   215c4:	8908983a 	sll	r4,r17,r4
   215c8:	40c6d83a 	srl	r3,r8,r3
   215cc:	5162b03a 	or	r17,r10,r5
   215d0:	2008c03a 	cmpne	r4,r4,zero
   215d4:	8922b03a 	or	r17,r17,r4
   215d8:	3463c83a 	sub	r17,r6,r17
   215dc:	48c7c83a 	sub	r3,r9,r3
   215e0:	344d803a 	cmpltu	r6,r6,r17
   215e4:	1991c83a 	sub	r8,r3,r6
   215e8:	1021883a 	mov	r16,r2
   215ec:	3825883a 	mov	r18,r7
   215f0:	003f2706 	br	21290 <_gp+0xfffe77c0>
   215f4:	24d0b03a 	or	r8,r4,r19
   215f8:	40001b1e 	bne	r8,zero,21668 <__adddf3+0x548>
   215fc:	0005883a 	mov	r2,zero
   21600:	0007883a 	mov	r3,zero
   21604:	0021883a 	mov	r16,zero
   21608:	003f4d06 	br	21340 <_gp+0xfffe7870>
   2160c:	008007c4 	movi	r2,31
   21610:	11003c16 	blt	r2,r4,21704 <__adddf3+0x5e4>
   21614:	00800804 	movi	r2,32
   21618:	1105c83a 	sub	r2,r2,r4
   2161c:	488e983a 	sll	r7,r9,r2
   21620:	310ad83a 	srl	r5,r6,r4
   21624:	3084983a 	sll	r2,r6,r2
   21628:	4912d83a 	srl	r9,r9,r4
   2162c:	394ab03a 	or	r5,r7,r5
   21630:	1004c03a 	cmpne	r2,r2,zero
   21634:	288ab03a 	or	r5,r5,r2
   21638:	003f5306 	br	21388 <_gp+0xfffe78b8>
   2163c:	4448b03a 	or	r4,r8,r17
   21640:	20003e26 	beq	r4,zero,2173c <__adddf3+0x61c>
   21644:	00c6303a 	nor	r3,zero,r3
   21648:	18003a1e 	bne	r3,zero,21734 <__adddf3+0x614>
   2164c:	3463c83a 	sub	r17,r6,r17
   21650:	4a07c83a 	sub	r3,r9,r8
   21654:	344d803a 	cmpltu	r6,r6,r17
   21658:	1991c83a 	sub	r8,r3,r6
   2165c:	1021883a 	mov	r16,r2
   21660:	3825883a 	mov	r18,r7
   21664:	003f0a06 	br	21290 <_gp+0xfffe77c0>
   21668:	2023883a 	mov	r17,r4
   2166c:	003f0d06 	br	212a4 <_gp+0xfffe77d4>
   21670:	0081ffc4 	movi	r2,2047
   21674:	80bf3f1e 	bne	r16,r2,21374 <_gp+0xfffe78a4>
   21678:	003ec806 	br	2119c <_gp+0xfffe76cc>
   2167c:	0005883a 	mov	r2,zero
   21680:	003fb106 	br	21548 <_gp+0xfffe7a78>
   21684:	0007883a 	mov	r3,zero
   21688:	003fbc06 	br	2157c <_gp+0xfffe7aac>
   2168c:	4444b03a 	or	r2,r8,r17
   21690:	8000871e 	bne	r16,zero,218b0 <__adddf3+0x790>
   21694:	1000ba26 	beq	r2,zero,21980 <__adddf3+0x860>
   21698:	4984b03a 	or	r2,r9,r6
   2169c:	103ebf26 	beq	r2,zero,2119c <_gp+0xfffe76cc>
   216a0:	8985883a 	add	r2,r17,r6
   216a4:	4247883a 	add	r3,r8,r9
   216a8:	1451803a 	cmpltu	r8,r2,r17
   216ac:	40d1883a 	add	r8,r8,r3
   216b0:	40c0202c 	andhi	r3,r8,128
   216b4:	1023883a 	mov	r17,r2
   216b8:	183f1a26 	beq	r3,zero,21324 <_gp+0xfffe7854>
   216bc:	00bfe034 	movhi	r2,65408
   216c0:	10bfffc4 	addi	r2,r2,-1
   216c4:	2021883a 	mov	r16,r4
   216c8:	4090703a 	and	r8,r8,r2
   216cc:	003eb306 	br	2119c <_gp+0xfffe76cc>
   216d0:	4444b03a 	or	r2,r8,r17
   216d4:	8000291e 	bne	r16,zero,2177c <__adddf3+0x65c>
   216d8:	10004b1e 	bne	r2,zero,21808 <__adddf3+0x6e8>
   216dc:	4990b03a 	or	r8,r9,r6
   216e0:	40008b26 	beq	r8,zero,21910 <__adddf3+0x7f0>
   216e4:	4811883a 	mov	r8,r9
   216e8:	3023883a 	mov	r17,r6
   216ec:	3825883a 	mov	r18,r7
   216f0:	003eaa06 	br	2119c <_gp+0xfffe76cc>
   216f4:	1021883a 	mov	r16,r2
   216f8:	0011883a 	mov	r8,zero
   216fc:	0005883a 	mov	r2,zero
   21700:	003f0f06 	br	21340 <_gp+0xfffe7870>
   21704:	217ff804 	addi	r5,r4,-32
   21708:	00800804 	movi	r2,32
   2170c:	494ad83a 	srl	r5,r9,r5
   21710:	20807d26 	beq	r4,r2,21908 <__adddf3+0x7e8>
   21714:	00801004 	movi	r2,64
   21718:	1109c83a 	sub	r4,r2,r4
   2171c:	4912983a 	sll	r9,r9,r4
   21720:	498cb03a 	or	r6,r9,r6
   21724:	300cc03a 	cmpne	r6,r6,zero
   21728:	298ab03a 	or	r5,r5,r6
   2172c:	0013883a 	mov	r9,zero
   21730:	003f1506 	br	21388 <_gp+0xfffe78b8>
   21734:	0101ffc4 	movi	r4,2047
   21738:	113f9a1e 	bne	r2,r4,215a4 <_gp+0xfffe7ad4>
   2173c:	4811883a 	mov	r8,r9
   21740:	3023883a 	mov	r17,r6
   21744:	1021883a 	mov	r16,r2
   21748:	3825883a 	mov	r18,r7
   2174c:	003e9306 	br	2119c <_gp+0xfffe76cc>
   21750:	8000161e 	bne	r16,zero,217ac <__adddf3+0x68c>
   21754:	444ab03a 	or	r5,r8,r17
   21758:	28005126 	beq	r5,zero,218a0 <__adddf3+0x780>
   2175c:	0108303a 	nor	r4,zero,r4
   21760:	20004d1e 	bne	r4,zero,21898 <__adddf3+0x778>
   21764:	89a3883a 	add	r17,r17,r6
   21768:	4253883a 	add	r9,r8,r9
   2176c:	898d803a 	cmpltu	r6,r17,r6
   21770:	3251883a 	add	r8,r6,r9
   21774:	1021883a 	mov	r16,r2
   21778:	003f0806 	br	2139c <_gp+0xfffe78cc>
   2177c:	1000301e 	bne	r2,zero,21840 <__adddf3+0x720>
   21780:	4984b03a 	or	r2,r9,r6
   21784:	10007126 	beq	r2,zero,2194c <__adddf3+0x82c>
   21788:	4811883a 	mov	r8,r9
   2178c:	3023883a 	mov	r17,r6
   21790:	3825883a 	mov	r18,r7
   21794:	0401ffc4 	movi	r16,2047
   21798:	003e8006 	br	2119c <_gp+0xfffe76cc>
   2179c:	4462b03a 	or	r17,r8,r17
   217a0:	8822c03a 	cmpne	r17,r17,zero
   217a4:	0007883a 	mov	r3,zero
   217a8:	003f8b06 	br	215d8 <_gp+0xfffe7b08>
   217ac:	0141ffc4 	movi	r5,2047
   217b0:	11403b26 	beq	r2,r5,218a0 <__adddf3+0x780>
   217b4:	0109c83a 	sub	r4,zero,r4
   217b8:	42002034 	orhi	r8,r8,128
   217bc:	01400e04 	movi	r5,56
   217c0:	29006716 	blt	r5,r4,21960 <__adddf3+0x840>
   217c4:	014007c4 	movi	r5,31
   217c8:	29007016 	blt	r5,r4,2198c <__adddf3+0x86c>
   217cc:	01400804 	movi	r5,32
   217d0:	290bc83a 	sub	r5,r5,r4
   217d4:	4154983a 	sll	r10,r8,r5
   217d8:	890ed83a 	srl	r7,r17,r4
   217dc:	894a983a 	sll	r5,r17,r5
   217e0:	4108d83a 	srl	r4,r8,r4
   217e4:	51e2b03a 	or	r17,r10,r7
   217e8:	280ac03a 	cmpne	r5,r5,zero
   217ec:	8962b03a 	or	r17,r17,r5
   217f0:	89a3883a 	add	r17,r17,r6
   217f4:	2253883a 	add	r9,r4,r9
   217f8:	898d803a 	cmpltu	r6,r17,r6
   217fc:	3251883a 	add	r8,r6,r9
   21800:	1021883a 	mov	r16,r2
   21804:	003ee506 	br	2139c <_gp+0xfffe78cc>
   21808:	4984b03a 	or	r2,r9,r6
   2180c:	103e6326 	beq	r2,zero,2119c <_gp+0xfffe76cc>
   21810:	8987c83a 	sub	r3,r17,r6
   21814:	88c9803a 	cmpltu	r4,r17,r3
   21818:	4245c83a 	sub	r2,r8,r9
   2181c:	1105c83a 	sub	r2,r2,r4
   21820:	1100202c 	andhi	r4,r2,128
   21824:	203ebb26 	beq	r4,zero,21314 <_gp+0xfffe7844>
   21828:	3463c83a 	sub	r17,r6,r17
   2182c:	4a07c83a 	sub	r3,r9,r8
   21830:	344d803a 	cmpltu	r6,r6,r17
   21834:	1991c83a 	sub	r8,r3,r6
   21838:	3825883a 	mov	r18,r7
   2183c:	003e5706 	br	2119c <_gp+0xfffe76cc>
   21840:	4984b03a 	or	r2,r9,r6
   21844:	10002e26 	beq	r2,zero,21900 <__adddf3+0x7e0>
   21848:	4004d0fa 	srli	r2,r8,3
   2184c:	8822d0fa 	srli	r17,r17,3
   21850:	4010977a 	slli	r8,r8,29
   21854:	10c0022c 	andhi	r3,r2,8
   21858:	4462b03a 	or	r17,r8,r17
   2185c:	18000826 	beq	r3,zero,21880 <__adddf3+0x760>
   21860:	4808d0fa 	srli	r4,r9,3
   21864:	20c0022c 	andhi	r3,r4,8
   21868:	1800051e 	bne	r3,zero,21880 <__adddf3+0x760>
   2186c:	300cd0fa 	srli	r6,r6,3
   21870:	4806977a 	slli	r3,r9,29
   21874:	2005883a 	mov	r2,r4
   21878:	3825883a 	mov	r18,r7
   2187c:	19a2b03a 	or	r17,r3,r6
   21880:	8810d77a 	srli	r8,r17,29
   21884:	100490fa 	slli	r2,r2,3
   21888:	882290fa 	slli	r17,r17,3
   2188c:	0401ffc4 	movi	r16,2047
   21890:	4090b03a 	or	r8,r8,r2
   21894:	003e4106 	br	2119c <_gp+0xfffe76cc>
   21898:	0141ffc4 	movi	r5,2047
   2189c:	117fc71e 	bne	r2,r5,217bc <_gp+0xfffe7cec>
   218a0:	4811883a 	mov	r8,r9
   218a4:	3023883a 	mov	r17,r6
   218a8:	1021883a 	mov	r16,r2
   218ac:	003e3b06 	br	2119c <_gp+0xfffe76cc>
   218b0:	10002f26 	beq	r2,zero,21970 <__adddf3+0x850>
   218b4:	4984b03a 	or	r2,r9,r6
   218b8:	10001126 	beq	r2,zero,21900 <__adddf3+0x7e0>
   218bc:	4004d0fa 	srli	r2,r8,3
   218c0:	8822d0fa 	srli	r17,r17,3
   218c4:	4010977a 	slli	r8,r8,29
   218c8:	10c0022c 	andhi	r3,r2,8
   218cc:	4462b03a 	or	r17,r8,r17
   218d0:	183feb26 	beq	r3,zero,21880 <_gp+0xfffe7db0>
   218d4:	4808d0fa 	srli	r4,r9,3
   218d8:	20c0022c 	andhi	r3,r4,8
   218dc:	183fe81e 	bne	r3,zero,21880 <_gp+0xfffe7db0>
   218e0:	300cd0fa 	srli	r6,r6,3
   218e4:	4806977a 	slli	r3,r9,29
   218e8:	2005883a 	mov	r2,r4
   218ec:	19a2b03a 	or	r17,r3,r6
   218f0:	003fe306 	br	21880 <_gp+0xfffe7db0>
   218f4:	0011883a 	mov	r8,zero
   218f8:	0005883a 	mov	r2,zero
   218fc:	003e3f06 	br	211fc <_gp+0xfffe772c>
   21900:	0401ffc4 	movi	r16,2047
   21904:	003e2506 	br	2119c <_gp+0xfffe76cc>
   21908:	0013883a 	mov	r9,zero
   2190c:	003f8406 	br	21720 <_gp+0xfffe7c50>
   21910:	0005883a 	mov	r2,zero
   21914:	0007883a 	mov	r3,zero
   21918:	003e8906 	br	21340 <_gp+0xfffe7870>
   2191c:	197ff804 	addi	r5,r3,-32
   21920:	01000804 	movi	r4,32
   21924:	414ad83a 	srl	r5,r8,r5
   21928:	19002426 	beq	r3,r4,219bc <__adddf3+0x89c>
   2192c:	01001004 	movi	r4,64
   21930:	20c7c83a 	sub	r3,r4,r3
   21934:	40c6983a 	sll	r3,r8,r3
   21938:	1c46b03a 	or	r3,r3,r17
   2193c:	1806c03a 	cmpne	r3,r3,zero
   21940:	28e2b03a 	or	r17,r5,r3
   21944:	0007883a 	mov	r3,zero
   21948:	003f2306 	br	215d8 <_gp+0xfffe7b08>
   2194c:	0007883a 	mov	r3,zero
   21950:	5811883a 	mov	r8,r11
   21954:	00bfffc4 	movi	r2,-1
   21958:	0401ffc4 	movi	r16,2047
   2195c:	003e7806 	br	21340 <_gp+0xfffe7870>
   21960:	4462b03a 	or	r17,r8,r17
   21964:	8822c03a 	cmpne	r17,r17,zero
   21968:	0009883a 	mov	r4,zero
   2196c:	003fa006 	br	217f0 <_gp+0xfffe7d20>
   21970:	4811883a 	mov	r8,r9
   21974:	3023883a 	mov	r17,r6
   21978:	0401ffc4 	movi	r16,2047
   2197c:	003e0706 	br	2119c <_gp+0xfffe76cc>
   21980:	4811883a 	mov	r8,r9
   21984:	3023883a 	mov	r17,r6
   21988:	003e0406 	br	2119c <_gp+0xfffe76cc>
   2198c:	21fff804 	addi	r7,r4,-32
   21990:	01400804 	movi	r5,32
   21994:	41ced83a 	srl	r7,r8,r7
   21998:	21400a26 	beq	r4,r5,219c4 <__adddf3+0x8a4>
   2199c:	01401004 	movi	r5,64
   219a0:	2909c83a 	sub	r4,r5,r4
   219a4:	4108983a 	sll	r4,r8,r4
   219a8:	2448b03a 	or	r4,r4,r17
   219ac:	2008c03a 	cmpne	r4,r4,zero
   219b0:	3922b03a 	or	r17,r7,r4
   219b4:	0009883a 	mov	r4,zero
   219b8:	003f8d06 	br	217f0 <_gp+0xfffe7d20>
   219bc:	0007883a 	mov	r3,zero
   219c0:	003fdd06 	br	21938 <_gp+0xfffe7e68>
   219c4:	0009883a 	mov	r4,zero
   219c8:	003ff706 	br	219a8 <_gp+0xfffe7ed8>

000219cc <__muldf3>:
   219cc:	defff304 	addi	sp,sp,-52
   219d0:	2804d53a 	srli	r2,r5,20
   219d4:	dd800915 	stw	r22,36(sp)
   219d8:	282cd7fa 	srli	r22,r5,31
   219dc:	dc000315 	stw	r16,12(sp)
   219e0:	04000434 	movhi	r16,16
   219e4:	dd400815 	stw	r21,32(sp)
   219e8:	dc800515 	stw	r18,20(sp)
   219ec:	843fffc4 	addi	r16,r16,-1
   219f0:	dfc00c15 	stw	ra,48(sp)
   219f4:	df000b15 	stw	fp,44(sp)
   219f8:	ddc00a15 	stw	r23,40(sp)
   219fc:	dd000715 	stw	r20,28(sp)
   21a00:	dcc00615 	stw	r19,24(sp)
   21a04:	dc400415 	stw	r17,16(sp)
   21a08:	1481ffcc 	andi	r18,r2,2047
   21a0c:	2c20703a 	and	r16,r5,r16
   21a10:	b02b883a 	mov	r21,r22
   21a14:	b2403fcc 	andi	r9,r22,255
   21a18:	90006026 	beq	r18,zero,21b9c <__muldf3+0x1d0>
   21a1c:	0081ffc4 	movi	r2,2047
   21a20:	2029883a 	mov	r20,r4
   21a24:	90803626 	beq	r18,r2,21b00 <__muldf3+0x134>
   21a28:	80800434 	orhi	r2,r16,16
   21a2c:	100490fa 	slli	r2,r2,3
   21a30:	2020d77a 	srli	r16,r4,29
   21a34:	202890fa 	slli	r20,r4,3
   21a38:	94bf0044 	addi	r18,r18,-1023
   21a3c:	80a0b03a 	or	r16,r16,r2
   21a40:	0027883a 	mov	r19,zero
   21a44:	0039883a 	mov	fp,zero
   21a48:	3804d53a 	srli	r2,r7,20
   21a4c:	382ed7fa 	srli	r23,r7,31
   21a50:	04400434 	movhi	r17,16
   21a54:	8c7fffc4 	addi	r17,r17,-1
   21a58:	1081ffcc 	andi	r2,r2,2047
   21a5c:	3011883a 	mov	r8,r6
   21a60:	3c62703a 	and	r17,r7,r17
   21a64:	ba803fcc 	andi	r10,r23,255
   21a68:	10006d26 	beq	r2,zero,21c20 <__muldf3+0x254>
   21a6c:	00c1ffc4 	movi	r3,2047
   21a70:	10c06526 	beq	r2,r3,21c08 <__muldf3+0x23c>
   21a74:	88c00434 	orhi	r3,r17,16
   21a78:	180690fa 	slli	r3,r3,3
   21a7c:	3022d77a 	srli	r17,r6,29
   21a80:	301090fa 	slli	r8,r6,3
   21a84:	10bf0044 	addi	r2,r2,-1023
   21a88:	88e2b03a 	or	r17,r17,r3
   21a8c:	000b883a 	mov	r5,zero
   21a90:	9085883a 	add	r2,r18,r2
   21a94:	2cc8b03a 	or	r4,r5,r19
   21a98:	00c003c4 	movi	r3,15
   21a9c:	bdacf03a 	xor	r22,r23,r22
   21aa0:	12c00044 	addi	r11,r2,1
   21aa4:	19009936 	bltu	r3,r4,21d0c <__muldf3+0x340>
   21aa8:	200890ba 	slli	r4,r4,2
   21aac:	00c000b4 	movhi	r3,2
   21ab0:	18c6b004 	addi	r3,r3,6848
   21ab4:	20c9883a 	add	r4,r4,r3
   21ab8:	20c00017 	ldw	r3,0(r4)
   21abc:	1800683a 	jmp	r3
   21ac0:	00021d0c 	andi	zero,zero,2164
   21ac4:	00021b20 	cmpeqi	zero,zero,2156
   21ac8:	00021b20 	cmpeqi	zero,zero,2156
   21acc:	00021b1c 	xori	zero,zero,2156
   21ad0:	00021ce8 	cmpgeui	zero,zero,2163
   21ad4:	00021ce8 	cmpgeui	zero,zero,2163
   21ad8:	00021cd0 	cmplti	zero,zero,2163
   21adc:	00021b1c 	xori	zero,zero,2156
   21ae0:	00021ce8 	cmpgeui	zero,zero,2163
   21ae4:	00021cd0 	cmplti	zero,zero,2163
   21ae8:	00021ce8 	cmpgeui	zero,zero,2163
   21aec:	00021b1c 	xori	zero,zero,2156
   21af0:	00021cf8 	rdprs	zero,zero,2163
   21af4:	00021cf8 	rdprs	zero,zero,2163
   21af8:	00021cf8 	rdprs	zero,zero,2163
   21afc:	00021f14 	movui	zero,2172
   21b00:	2404b03a 	or	r2,r4,r16
   21b04:	10006f1e 	bne	r2,zero,21cc4 <__muldf3+0x2f8>
   21b08:	04c00204 	movi	r19,8
   21b0c:	0021883a 	mov	r16,zero
   21b10:	0029883a 	mov	r20,zero
   21b14:	07000084 	movi	fp,2
   21b18:	003fcb06 	br	21a48 <_gp+0xfffe7f78>
   21b1c:	502d883a 	mov	r22,r10
   21b20:	00800084 	movi	r2,2
   21b24:	28805726 	beq	r5,r2,21c84 <__muldf3+0x2b8>
   21b28:	008000c4 	movi	r2,3
   21b2c:	28816626 	beq	r5,r2,220c8 <__muldf3+0x6fc>
   21b30:	00800044 	movi	r2,1
   21b34:	2881411e 	bne	r5,r2,2203c <__muldf3+0x670>
   21b38:	b02b883a 	mov	r21,r22
   21b3c:	0005883a 	mov	r2,zero
   21b40:	000b883a 	mov	r5,zero
   21b44:	0029883a 	mov	r20,zero
   21b48:	1004953a 	slli	r2,r2,20
   21b4c:	a8c03fcc 	andi	r3,r21,255
   21b50:	04400434 	movhi	r17,16
   21b54:	8c7fffc4 	addi	r17,r17,-1
   21b58:	180697fa 	slli	r3,r3,31
   21b5c:	2c4a703a 	and	r5,r5,r17
   21b60:	288ab03a 	or	r5,r5,r2
   21b64:	28c6b03a 	or	r3,r5,r3
   21b68:	a005883a 	mov	r2,r20
   21b6c:	dfc00c17 	ldw	ra,48(sp)
   21b70:	df000b17 	ldw	fp,44(sp)
   21b74:	ddc00a17 	ldw	r23,40(sp)
   21b78:	dd800917 	ldw	r22,36(sp)
   21b7c:	dd400817 	ldw	r21,32(sp)
   21b80:	dd000717 	ldw	r20,28(sp)
   21b84:	dcc00617 	ldw	r19,24(sp)
   21b88:	dc800517 	ldw	r18,20(sp)
   21b8c:	dc400417 	ldw	r17,16(sp)
   21b90:	dc000317 	ldw	r16,12(sp)
   21b94:	dec00d04 	addi	sp,sp,52
   21b98:	f800283a 	ret
   21b9c:	2404b03a 	or	r2,r4,r16
   21ba0:	2027883a 	mov	r19,r4
   21ba4:	10004226 	beq	r2,zero,21cb0 <__muldf3+0x2e4>
   21ba8:	8000fc26 	beq	r16,zero,21f9c <__muldf3+0x5d0>
   21bac:	8009883a 	mov	r4,r16
   21bb0:	d9800215 	stw	r6,8(sp)
   21bb4:	d9c00015 	stw	r7,0(sp)
   21bb8:	da400115 	stw	r9,4(sp)
   21bbc:	0022d400 	call	22d40 <__clzsi2>
   21bc0:	d9800217 	ldw	r6,8(sp)
   21bc4:	d9c00017 	ldw	r7,0(sp)
   21bc8:	da400117 	ldw	r9,4(sp)
   21bcc:	113ffd44 	addi	r4,r2,-11
   21bd0:	00c00704 	movi	r3,28
   21bd4:	1900ed16 	blt	r3,r4,21f8c <__muldf3+0x5c0>
   21bd8:	00c00744 	movi	r3,29
   21bdc:	147ffe04 	addi	r17,r2,-8
   21be0:	1907c83a 	sub	r3,r3,r4
   21be4:	8460983a 	sll	r16,r16,r17
   21be8:	98c6d83a 	srl	r3,r19,r3
   21bec:	9c68983a 	sll	r20,r19,r17
   21bf0:	1c20b03a 	or	r16,r3,r16
   21bf4:	1080fcc4 	addi	r2,r2,1011
   21bf8:	00a5c83a 	sub	r18,zero,r2
   21bfc:	0027883a 	mov	r19,zero
   21c00:	0039883a 	mov	fp,zero
   21c04:	003f9006 	br	21a48 <_gp+0xfffe7f78>
   21c08:	3446b03a 	or	r3,r6,r17
   21c0c:	1800261e 	bne	r3,zero,21ca8 <__muldf3+0x2dc>
   21c10:	0023883a 	mov	r17,zero
   21c14:	0011883a 	mov	r8,zero
   21c18:	01400084 	movi	r5,2
   21c1c:	003f9c06 	br	21a90 <_gp+0xfffe7fc0>
   21c20:	3446b03a 	or	r3,r6,r17
   21c24:	18001c26 	beq	r3,zero,21c98 <__muldf3+0x2cc>
   21c28:	8800ce26 	beq	r17,zero,21f64 <__muldf3+0x598>
   21c2c:	8809883a 	mov	r4,r17
   21c30:	d9800215 	stw	r6,8(sp)
   21c34:	da400115 	stw	r9,4(sp)
   21c38:	da800015 	stw	r10,0(sp)
   21c3c:	0022d400 	call	22d40 <__clzsi2>
   21c40:	d9800217 	ldw	r6,8(sp)
   21c44:	da400117 	ldw	r9,4(sp)
   21c48:	da800017 	ldw	r10,0(sp)
   21c4c:	113ffd44 	addi	r4,r2,-11
   21c50:	00c00704 	movi	r3,28
   21c54:	1900bf16 	blt	r3,r4,21f54 <__muldf3+0x588>
   21c58:	00c00744 	movi	r3,29
   21c5c:	123ffe04 	addi	r8,r2,-8
   21c60:	1907c83a 	sub	r3,r3,r4
   21c64:	8a22983a 	sll	r17,r17,r8
   21c68:	30c6d83a 	srl	r3,r6,r3
   21c6c:	3210983a 	sll	r8,r6,r8
   21c70:	1c62b03a 	or	r17,r3,r17
   21c74:	1080fcc4 	addi	r2,r2,1011
   21c78:	0085c83a 	sub	r2,zero,r2
   21c7c:	000b883a 	mov	r5,zero
   21c80:	003f8306 	br	21a90 <_gp+0xfffe7fc0>
   21c84:	b02b883a 	mov	r21,r22
   21c88:	0081ffc4 	movi	r2,2047
   21c8c:	000b883a 	mov	r5,zero
   21c90:	0029883a 	mov	r20,zero
   21c94:	003fac06 	br	21b48 <_gp+0xfffe8078>
   21c98:	0023883a 	mov	r17,zero
   21c9c:	0011883a 	mov	r8,zero
   21ca0:	01400044 	movi	r5,1
   21ca4:	003f7a06 	br	21a90 <_gp+0xfffe7fc0>
   21ca8:	014000c4 	movi	r5,3
   21cac:	003f7806 	br	21a90 <_gp+0xfffe7fc0>
   21cb0:	04c00104 	movi	r19,4
   21cb4:	0021883a 	mov	r16,zero
   21cb8:	0029883a 	mov	r20,zero
   21cbc:	07000044 	movi	fp,1
   21cc0:	003f6106 	br	21a48 <_gp+0xfffe7f78>
   21cc4:	04c00304 	movi	r19,12
   21cc8:	070000c4 	movi	fp,3
   21ccc:	003f5e06 	br	21a48 <_gp+0xfffe7f78>
   21cd0:	01400434 	movhi	r5,16
   21cd4:	002b883a 	mov	r21,zero
   21cd8:	297fffc4 	addi	r5,r5,-1
   21cdc:	053fffc4 	movi	r20,-1
   21ce0:	0081ffc4 	movi	r2,2047
   21ce4:	003f9806 	br	21b48 <_gp+0xfffe8078>
   21ce8:	8023883a 	mov	r17,r16
   21cec:	a011883a 	mov	r8,r20
   21cf0:	e00b883a 	mov	r5,fp
   21cf4:	003f8a06 	br	21b20 <_gp+0xfffe8050>
   21cf8:	8023883a 	mov	r17,r16
   21cfc:	a011883a 	mov	r8,r20
   21d00:	482d883a 	mov	r22,r9
   21d04:	e00b883a 	mov	r5,fp
   21d08:	003f8506 	br	21b20 <_gp+0xfffe8050>
   21d0c:	a00ad43a 	srli	r5,r20,16
   21d10:	401ad43a 	srli	r13,r8,16
   21d14:	a53fffcc 	andi	r20,r20,65535
   21d18:	423fffcc 	andi	r8,r8,65535
   21d1c:	4519383a 	mul	r12,r8,r20
   21d20:	4147383a 	mul	r3,r8,r5
   21d24:	6d09383a 	mul	r4,r13,r20
   21d28:	600cd43a 	srli	r6,r12,16
   21d2c:	2b5d383a 	mul	r14,r5,r13
   21d30:	20c9883a 	add	r4,r4,r3
   21d34:	310d883a 	add	r6,r6,r4
   21d38:	30c0022e 	bgeu	r6,r3,21d44 <__muldf3+0x378>
   21d3c:	00c00074 	movhi	r3,1
   21d40:	70dd883a 	add	r14,r14,r3
   21d44:	8826d43a 	srli	r19,r17,16
   21d48:	8bffffcc 	andi	r15,r17,65535
   21d4c:	7d23383a 	mul	r17,r15,r20
   21d50:	7949383a 	mul	r4,r15,r5
   21d54:	9d29383a 	mul	r20,r19,r20
   21d58:	8814d43a 	srli	r10,r17,16
   21d5c:	3012943a 	slli	r9,r6,16
   21d60:	a129883a 	add	r20,r20,r4
   21d64:	633fffcc 	andi	r12,r12,65535
   21d68:	5515883a 	add	r10,r10,r20
   21d6c:	3006d43a 	srli	r3,r6,16
   21d70:	4b13883a 	add	r9,r9,r12
   21d74:	2ccb383a 	mul	r5,r5,r19
   21d78:	5100022e 	bgeu	r10,r4,21d84 <__muldf3+0x3b8>
   21d7c:	01000074 	movhi	r4,1
   21d80:	290b883a 	add	r5,r5,r4
   21d84:	802ad43a 	srli	r21,r16,16
   21d88:	843fffcc 	andi	r16,r16,65535
   21d8c:	440d383a 	mul	r6,r8,r16
   21d90:	4565383a 	mul	r18,r8,r21
   21d94:	8349383a 	mul	r4,r16,r13
   21d98:	500e943a 	slli	r7,r10,16
   21d9c:	3010d43a 	srli	r8,r6,16
   21da0:	5028d43a 	srli	r20,r10,16
   21da4:	2489883a 	add	r4,r4,r18
   21da8:	8abfffcc 	andi	r10,r17,65535
   21dac:	3a95883a 	add	r10,r7,r10
   21db0:	4119883a 	add	r12,r8,r4
   21db4:	a169883a 	add	r20,r20,r5
   21db8:	1a87883a 	add	r3,r3,r10
   21dbc:	6d5b383a 	mul	r13,r13,r21
   21dc0:	6480022e 	bgeu	r12,r18,21dcc <__muldf3+0x400>
   21dc4:	01000074 	movhi	r4,1
   21dc8:	691b883a 	add	r13,r13,r4
   21dcc:	7c25383a 	mul	r18,r15,r16
   21dd0:	7d4b383a 	mul	r5,r15,r21
   21dd4:	84cf383a 	mul	r7,r16,r19
   21dd8:	901ed43a 	srli	r15,r18,16
   21ddc:	6008d43a 	srli	r4,r12,16
   21de0:	6010943a 	slli	r8,r12,16
   21de4:	394f883a 	add	r7,r7,r5
   21de8:	333fffcc 	andi	r12,r6,65535
   21dec:	79df883a 	add	r15,r15,r7
   21df0:	235b883a 	add	r13,r4,r13
   21df4:	9d63383a 	mul	r17,r19,r21
   21df8:	4309883a 	add	r4,r8,r12
   21dfc:	7940022e 	bgeu	r15,r5,21e08 <__muldf3+0x43c>
   21e00:	01400074 	movhi	r5,1
   21e04:	8963883a 	add	r17,r17,r5
   21e08:	780a943a 	slli	r5,r15,16
   21e0c:	91bfffcc 	andi	r6,r18,65535
   21e10:	70c7883a 	add	r3,r14,r3
   21e14:	298d883a 	add	r6,r5,r6
   21e18:	1a8f803a 	cmpltu	r7,r3,r10
   21e1c:	350b883a 	add	r5,r6,r20
   21e20:	20c7883a 	add	r3,r4,r3
   21e24:	3955883a 	add	r10,r7,r5
   21e28:	1909803a 	cmpltu	r4,r3,r4
   21e2c:	6a91883a 	add	r8,r13,r10
   21e30:	780cd43a 	srli	r6,r15,16
   21e34:	2219883a 	add	r12,r4,r8
   21e38:	2d0b803a 	cmpltu	r5,r5,r20
   21e3c:	51cf803a 	cmpltu	r7,r10,r7
   21e40:	29ceb03a 	or	r7,r5,r7
   21e44:	4351803a 	cmpltu	r8,r8,r13
   21e48:	610b803a 	cmpltu	r5,r12,r4
   21e4c:	4148b03a 	or	r4,r8,r5
   21e50:	398f883a 	add	r7,r7,r6
   21e54:	3909883a 	add	r4,r7,r4
   21e58:	1810927a 	slli	r8,r3,9
   21e5c:	2449883a 	add	r4,r4,r17
   21e60:	2008927a 	slli	r4,r4,9
   21e64:	6022d5fa 	srli	r17,r12,23
   21e68:	1806d5fa 	srli	r3,r3,23
   21e6c:	4252b03a 	or	r9,r8,r9
   21e70:	600a927a 	slli	r5,r12,9
   21e74:	4810c03a 	cmpne	r8,r9,zero
   21e78:	2462b03a 	or	r17,r4,r17
   21e7c:	40c6b03a 	or	r3,r8,r3
   21e80:	8900402c 	andhi	r4,r17,256
   21e84:	1950b03a 	or	r8,r3,r5
   21e88:	20000726 	beq	r4,zero,21ea8 <__muldf3+0x4dc>
   21e8c:	4006d07a 	srli	r3,r8,1
   21e90:	880497fa 	slli	r2,r17,31
   21e94:	4200004c 	andi	r8,r8,1
   21e98:	8822d07a 	srli	r17,r17,1
   21e9c:	1a10b03a 	or	r8,r3,r8
   21ea0:	1210b03a 	or	r8,r2,r8
   21ea4:	5805883a 	mov	r2,r11
   21ea8:	1140ffc4 	addi	r5,r2,1023
   21eac:	0140440e 	bge	zero,r5,21fc0 <__muldf3+0x5f4>
   21eb0:	40c001cc 	andi	r3,r8,7
   21eb4:	18000726 	beq	r3,zero,21ed4 <__muldf3+0x508>
   21eb8:	40c003cc 	andi	r3,r8,15
   21ebc:	01000104 	movi	r4,4
   21ec0:	19000426 	beq	r3,r4,21ed4 <__muldf3+0x508>
   21ec4:	4107883a 	add	r3,r8,r4
   21ec8:	1a11803a 	cmpltu	r8,r3,r8
   21ecc:	8a23883a 	add	r17,r17,r8
   21ed0:	1811883a 	mov	r8,r3
   21ed4:	88c0402c 	andhi	r3,r17,256
   21ed8:	18000426 	beq	r3,zero,21eec <__muldf3+0x520>
   21edc:	11410004 	addi	r5,r2,1024
   21ee0:	00bfc034 	movhi	r2,65280
   21ee4:	10bfffc4 	addi	r2,r2,-1
   21ee8:	88a2703a 	and	r17,r17,r2
   21eec:	0081ff84 	movi	r2,2046
   21ef0:	117f6416 	blt	r2,r5,21c84 <_gp+0xfffe81b4>
   21ef4:	8828977a 	slli	r20,r17,29
   21ef8:	4010d0fa 	srli	r8,r8,3
   21efc:	8822927a 	slli	r17,r17,9
   21f00:	2881ffcc 	andi	r2,r5,2047
   21f04:	a228b03a 	or	r20,r20,r8
   21f08:	880ad33a 	srli	r5,r17,12
   21f0c:	b02b883a 	mov	r21,r22
   21f10:	003f0d06 	br	21b48 <_gp+0xfffe8078>
   21f14:	8080022c 	andhi	r2,r16,8
   21f18:	10000926 	beq	r2,zero,21f40 <__muldf3+0x574>
   21f1c:	8880022c 	andhi	r2,r17,8
   21f20:	1000071e 	bne	r2,zero,21f40 <__muldf3+0x574>
   21f24:	00800434 	movhi	r2,16
   21f28:	89400234 	orhi	r5,r17,8
   21f2c:	10bfffc4 	addi	r2,r2,-1
   21f30:	b82b883a 	mov	r21,r23
   21f34:	288a703a 	and	r5,r5,r2
   21f38:	4029883a 	mov	r20,r8
   21f3c:	003f6806 	br	21ce0 <_gp+0xfffe8210>
   21f40:	00800434 	movhi	r2,16
   21f44:	81400234 	orhi	r5,r16,8
   21f48:	10bfffc4 	addi	r2,r2,-1
   21f4c:	288a703a 	and	r5,r5,r2
   21f50:	003f6306 	br	21ce0 <_gp+0xfffe8210>
   21f54:	147ff604 	addi	r17,r2,-40
   21f58:	3462983a 	sll	r17,r6,r17
   21f5c:	0011883a 	mov	r8,zero
   21f60:	003f4406 	br	21c74 <_gp+0xfffe81a4>
   21f64:	3009883a 	mov	r4,r6
   21f68:	d9800215 	stw	r6,8(sp)
   21f6c:	da400115 	stw	r9,4(sp)
   21f70:	da800015 	stw	r10,0(sp)
   21f74:	0022d400 	call	22d40 <__clzsi2>
   21f78:	10800804 	addi	r2,r2,32
   21f7c:	da800017 	ldw	r10,0(sp)
   21f80:	da400117 	ldw	r9,4(sp)
   21f84:	d9800217 	ldw	r6,8(sp)
   21f88:	003f3006 	br	21c4c <_gp+0xfffe817c>
   21f8c:	143ff604 	addi	r16,r2,-40
   21f90:	9c20983a 	sll	r16,r19,r16
   21f94:	0029883a 	mov	r20,zero
   21f98:	003f1606 	br	21bf4 <_gp+0xfffe8124>
   21f9c:	d9800215 	stw	r6,8(sp)
   21fa0:	d9c00015 	stw	r7,0(sp)
   21fa4:	da400115 	stw	r9,4(sp)
   21fa8:	0022d400 	call	22d40 <__clzsi2>
   21fac:	10800804 	addi	r2,r2,32
   21fb0:	da400117 	ldw	r9,4(sp)
   21fb4:	d9c00017 	ldw	r7,0(sp)
   21fb8:	d9800217 	ldw	r6,8(sp)
   21fbc:	003f0306 	br	21bcc <_gp+0xfffe80fc>
   21fc0:	00c00044 	movi	r3,1
   21fc4:	1947c83a 	sub	r3,r3,r5
   21fc8:	00800e04 	movi	r2,56
   21fcc:	10feda16 	blt	r2,r3,21b38 <_gp+0xfffe8068>
   21fd0:	008007c4 	movi	r2,31
   21fd4:	10c01b16 	blt	r2,r3,22044 <__muldf3+0x678>
   21fd8:	00800804 	movi	r2,32
   21fdc:	10c5c83a 	sub	r2,r2,r3
   21fe0:	888a983a 	sll	r5,r17,r2
   21fe4:	40c8d83a 	srl	r4,r8,r3
   21fe8:	4084983a 	sll	r2,r8,r2
   21fec:	88e2d83a 	srl	r17,r17,r3
   21ff0:	2906b03a 	or	r3,r5,r4
   21ff4:	1004c03a 	cmpne	r2,r2,zero
   21ff8:	1886b03a 	or	r3,r3,r2
   21ffc:	188001cc 	andi	r2,r3,7
   22000:	10000726 	beq	r2,zero,22020 <__muldf3+0x654>
   22004:	188003cc 	andi	r2,r3,15
   22008:	01000104 	movi	r4,4
   2200c:	11000426 	beq	r2,r4,22020 <__muldf3+0x654>
   22010:	1805883a 	mov	r2,r3
   22014:	10c00104 	addi	r3,r2,4
   22018:	1885803a 	cmpltu	r2,r3,r2
   2201c:	88a3883a 	add	r17,r17,r2
   22020:	8880202c 	andhi	r2,r17,128
   22024:	10001c26 	beq	r2,zero,22098 <__muldf3+0x6cc>
   22028:	b02b883a 	mov	r21,r22
   2202c:	00800044 	movi	r2,1
   22030:	000b883a 	mov	r5,zero
   22034:	0029883a 	mov	r20,zero
   22038:	003ec306 	br	21b48 <_gp+0xfffe8078>
   2203c:	5805883a 	mov	r2,r11
   22040:	003f9906 	br	21ea8 <_gp+0xfffe83d8>
   22044:	00bff844 	movi	r2,-31
   22048:	1145c83a 	sub	r2,r2,r5
   2204c:	8888d83a 	srl	r4,r17,r2
   22050:	00800804 	movi	r2,32
   22054:	18801a26 	beq	r3,r2,220c0 <__muldf3+0x6f4>
   22058:	00801004 	movi	r2,64
   2205c:	10c5c83a 	sub	r2,r2,r3
   22060:	8884983a 	sll	r2,r17,r2
   22064:	1204b03a 	or	r2,r2,r8
   22068:	1004c03a 	cmpne	r2,r2,zero
   2206c:	2084b03a 	or	r2,r4,r2
   22070:	144001cc 	andi	r17,r2,7
   22074:	88000d1e 	bne	r17,zero,220ac <__muldf3+0x6e0>
   22078:	000b883a 	mov	r5,zero
   2207c:	1028d0fa 	srli	r20,r2,3
   22080:	b02b883a 	mov	r21,r22
   22084:	0005883a 	mov	r2,zero
   22088:	a468b03a 	or	r20,r20,r17
   2208c:	003eae06 	br	21b48 <_gp+0xfffe8078>
   22090:	1007883a 	mov	r3,r2
   22094:	0023883a 	mov	r17,zero
   22098:	880a927a 	slli	r5,r17,9
   2209c:	1805883a 	mov	r2,r3
   220a0:	8822977a 	slli	r17,r17,29
   220a4:	280ad33a 	srli	r5,r5,12
   220a8:	003ff406 	br	2207c <_gp+0xfffe85ac>
   220ac:	10c003cc 	andi	r3,r2,15
   220b0:	01000104 	movi	r4,4
   220b4:	193ff626 	beq	r3,r4,22090 <_gp+0xfffe85c0>
   220b8:	0023883a 	mov	r17,zero
   220bc:	003fd506 	br	22014 <_gp+0xfffe8544>
   220c0:	0005883a 	mov	r2,zero
   220c4:	003fe706 	br	22064 <_gp+0xfffe8594>
   220c8:	00800434 	movhi	r2,16
   220cc:	89400234 	orhi	r5,r17,8
   220d0:	10bfffc4 	addi	r2,r2,-1
   220d4:	b02b883a 	mov	r21,r22
   220d8:	288a703a 	and	r5,r5,r2
   220dc:	4029883a 	mov	r20,r8
   220e0:	003eff06 	br	21ce0 <_gp+0xfffe8210>

000220e4 <__subdf3>:
   220e4:	02000434 	movhi	r8,16
   220e8:	423fffc4 	addi	r8,r8,-1
   220ec:	defffb04 	addi	sp,sp,-20
   220f0:	2a14703a 	and	r10,r5,r8
   220f4:	3812d53a 	srli	r9,r7,20
   220f8:	3a10703a 	and	r8,r7,r8
   220fc:	2006d77a 	srli	r3,r4,29
   22100:	3004d77a 	srli	r2,r6,29
   22104:	dc000015 	stw	r16,0(sp)
   22108:	501490fa 	slli	r10,r10,3
   2210c:	2820d53a 	srli	r16,r5,20
   22110:	401090fa 	slli	r8,r8,3
   22114:	dc800215 	stw	r18,8(sp)
   22118:	dc400115 	stw	r17,4(sp)
   2211c:	dfc00415 	stw	ra,16(sp)
   22120:	202290fa 	slli	r17,r4,3
   22124:	dcc00315 	stw	r19,12(sp)
   22128:	4a41ffcc 	andi	r9,r9,2047
   2212c:	0101ffc4 	movi	r4,2047
   22130:	2824d7fa 	srli	r18,r5,31
   22134:	8401ffcc 	andi	r16,r16,2047
   22138:	50c6b03a 	or	r3,r10,r3
   2213c:	380ed7fa 	srli	r7,r7,31
   22140:	408ab03a 	or	r5,r8,r2
   22144:	300c90fa 	slli	r6,r6,3
   22148:	49009626 	beq	r9,r4,223a4 <__subdf3+0x2c0>
   2214c:	39c0005c 	xori	r7,r7,1
   22150:	8245c83a 	sub	r2,r16,r9
   22154:	3c807426 	beq	r7,r18,22328 <__subdf3+0x244>
   22158:	0080af0e 	bge	zero,r2,22418 <__subdf3+0x334>
   2215c:	48002a1e 	bne	r9,zero,22208 <__subdf3+0x124>
   22160:	2988b03a 	or	r4,r5,r6
   22164:	20009a1e 	bne	r4,zero,223d0 <__subdf3+0x2ec>
   22168:	888001cc 	andi	r2,r17,7
   2216c:	10000726 	beq	r2,zero,2218c <__subdf3+0xa8>
   22170:	888003cc 	andi	r2,r17,15
   22174:	01000104 	movi	r4,4
   22178:	11000426 	beq	r2,r4,2218c <__subdf3+0xa8>
   2217c:	890b883a 	add	r5,r17,r4
   22180:	2c63803a 	cmpltu	r17,r5,r17
   22184:	1c47883a 	add	r3,r3,r17
   22188:	2823883a 	mov	r17,r5
   2218c:	1880202c 	andhi	r2,r3,128
   22190:	10005926 	beq	r2,zero,222f8 <__subdf3+0x214>
   22194:	84000044 	addi	r16,r16,1
   22198:	0081ffc4 	movi	r2,2047
   2219c:	8080be26 	beq	r16,r2,22498 <__subdf3+0x3b4>
   221a0:	017fe034 	movhi	r5,65408
   221a4:	297fffc4 	addi	r5,r5,-1
   221a8:	1946703a 	and	r3,r3,r5
   221ac:	1804977a 	slli	r2,r3,29
   221b0:	1806927a 	slli	r3,r3,9
   221b4:	8822d0fa 	srli	r17,r17,3
   221b8:	8401ffcc 	andi	r16,r16,2047
   221bc:	180ad33a 	srli	r5,r3,12
   221c0:	9100004c 	andi	r4,r18,1
   221c4:	1444b03a 	or	r2,r2,r17
   221c8:	80c1ffcc 	andi	r3,r16,2047
   221cc:	1820953a 	slli	r16,r3,20
   221d0:	20c03fcc 	andi	r3,r4,255
   221d4:	180897fa 	slli	r4,r3,31
   221d8:	00c00434 	movhi	r3,16
   221dc:	18ffffc4 	addi	r3,r3,-1
   221e0:	28c6703a 	and	r3,r5,r3
   221e4:	1c06b03a 	or	r3,r3,r16
   221e8:	1906b03a 	or	r3,r3,r4
   221ec:	dfc00417 	ldw	ra,16(sp)
   221f0:	dcc00317 	ldw	r19,12(sp)
   221f4:	dc800217 	ldw	r18,8(sp)
   221f8:	dc400117 	ldw	r17,4(sp)
   221fc:	dc000017 	ldw	r16,0(sp)
   22200:	dec00504 	addi	sp,sp,20
   22204:	f800283a 	ret
   22208:	0101ffc4 	movi	r4,2047
   2220c:	813fd626 	beq	r16,r4,22168 <_gp+0xfffe8698>
   22210:	29402034 	orhi	r5,r5,128
   22214:	01000e04 	movi	r4,56
   22218:	2080a316 	blt	r4,r2,224a8 <__subdf3+0x3c4>
   2221c:	010007c4 	movi	r4,31
   22220:	2080c616 	blt	r4,r2,2253c <__subdf3+0x458>
   22224:	01000804 	movi	r4,32
   22228:	2089c83a 	sub	r4,r4,r2
   2222c:	2910983a 	sll	r8,r5,r4
   22230:	308ed83a 	srl	r7,r6,r2
   22234:	3108983a 	sll	r4,r6,r4
   22238:	2884d83a 	srl	r2,r5,r2
   2223c:	41ccb03a 	or	r6,r8,r7
   22240:	2008c03a 	cmpne	r4,r4,zero
   22244:	310cb03a 	or	r6,r6,r4
   22248:	898dc83a 	sub	r6,r17,r6
   2224c:	89a3803a 	cmpltu	r17,r17,r6
   22250:	1887c83a 	sub	r3,r3,r2
   22254:	1c47c83a 	sub	r3,r3,r17
   22258:	3023883a 	mov	r17,r6
   2225c:	1880202c 	andhi	r2,r3,128
   22260:	10002326 	beq	r2,zero,222f0 <__subdf3+0x20c>
   22264:	04c02034 	movhi	r19,128
   22268:	9cffffc4 	addi	r19,r19,-1
   2226c:	1ce6703a 	and	r19,r3,r19
   22270:	98007a26 	beq	r19,zero,2245c <__subdf3+0x378>
   22274:	9809883a 	mov	r4,r19
   22278:	0022d400 	call	22d40 <__clzsi2>
   2227c:	113ffe04 	addi	r4,r2,-8
   22280:	00c007c4 	movi	r3,31
   22284:	19007b16 	blt	r3,r4,22474 <__subdf3+0x390>
   22288:	00800804 	movi	r2,32
   2228c:	1105c83a 	sub	r2,r2,r4
   22290:	8884d83a 	srl	r2,r17,r2
   22294:	9906983a 	sll	r3,r19,r4
   22298:	8922983a 	sll	r17,r17,r4
   2229c:	10c4b03a 	or	r2,r2,r3
   222a0:	24007816 	blt	r4,r16,22484 <__subdf3+0x3a0>
   222a4:	2421c83a 	sub	r16,r4,r16
   222a8:	80c00044 	addi	r3,r16,1
   222ac:	010007c4 	movi	r4,31
   222b0:	20c09516 	blt	r4,r3,22508 <__subdf3+0x424>
   222b4:	01400804 	movi	r5,32
   222b8:	28cbc83a 	sub	r5,r5,r3
   222bc:	88c8d83a 	srl	r4,r17,r3
   222c0:	8962983a 	sll	r17,r17,r5
   222c4:	114a983a 	sll	r5,r2,r5
   222c8:	10c6d83a 	srl	r3,r2,r3
   222cc:	8804c03a 	cmpne	r2,r17,zero
   222d0:	290ab03a 	or	r5,r5,r4
   222d4:	28a2b03a 	or	r17,r5,r2
   222d8:	0021883a 	mov	r16,zero
   222dc:	003fa206 	br	22168 <_gp+0xfffe8698>
   222e0:	2090b03a 	or	r8,r4,r2
   222e4:	40018e26 	beq	r8,zero,22920 <__subdf3+0x83c>
   222e8:	1007883a 	mov	r3,r2
   222ec:	2023883a 	mov	r17,r4
   222f0:	888001cc 	andi	r2,r17,7
   222f4:	103f9e1e 	bne	r2,zero,22170 <_gp+0xfffe86a0>
   222f8:	1804977a 	slli	r2,r3,29
   222fc:	8822d0fa 	srli	r17,r17,3
   22300:	1810d0fa 	srli	r8,r3,3
   22304:	9100004c 	andi	r4,r18,1
   22308:	1444b03a 	or	r2,r2,r17
   2230c:	00c1ffc4 	movi	r3,2047
   22310:	80c02826 	beq	r16,r3,223b4 <__subdf3+0x2d0>
   22314:	01400434 	movhi	r5,16
   22318:	297fffc4 	addi	r5,r5,-1
   2231c:	80e0703a 	and	r16,r16,r3
   22320:	414a703a 	and	r5,r8,r5
   22324:	003fa806 	br	221c8 <_gp+0xfffe86f8>
   22328:	0080630e 	bge	zero,r2,224b8 <__subdf3+0x3d4>
   2232c:	48003026 	beq	r9,zero,223f0 <__subdf3+0x30c>
   22330:	0101ffc4 	movi	r4,2047
   22334:	813f8c26 	beq	r16,r4,22168 <_gp+0xfffe8698>
   22338:	29402034 	orhi	r5,r5,128
   2233c:	01000e04 	movi	r4,56
   22340:	2080a90e 	bge	r4,r2,225e8 <__subdf3+0x504>
   22344:	298cb03a 	or	r6,r5,r6
   22348:	3012c03a 	cmpne	r9,r6,zero
   2234c:	0005883a 	mov	r2,zero
   22350:	4c53883a 	add	r9,r9,r17
   22354:	4c63803a 	cmpltu	r17,r9,r17
   22358:	10c7883a 	add	r3,r2,r3
   2235c:	88c7883a 	add	r3,r17,r3
   22360:	4823883a 	mov	r17,r9
   22364:	1880202c 	andhi	r2,r3,128
   22368:	1000d026 	beq	r2,zero,226ac <__subdf3+0x5c8>
   2236c:	84000044 	addi	r16,r16,1
   22370:	0081ffc4 	movi	r2,2047
   22374:	8080fe26 	beq	r16,r2,22770 <__subdf3+0x68c>
   22378:	00bfe034 	movhi	r2,65408
   2237c:	10bfffc4 	addi	r2,r2,-1
   22380:	1886703a 	and	r3,r3,r2
   22384:	880ad07a 	srli	r5,r17,1
   22388:	180497fa 	slli	r2,r3,31
   2238c:	8900004c 	andi	r4,r17,1
   22390:	2922b03a 	or	r17,r5,r4
   22394:	1806d07a 	srli	r3,r3,1
   22398:	1462b03a 	or	r17,r2,r17
   2239c:	3825883a 	mov	r18,r7
   223a0:	003f7106 	br	22168 <_gp+0xfffe8698>
   223a4:	2984b03a 	or	r2,r5,r6
   223a8:	103f6826 	beq	r2,zero,2214c <_gp+0xfffe867c>
   223ac:	39c03fcc 	andi	r7,r7,255
   223b0:	003f6706 	br	22150 <_gp+0xfffe8680>
   223b4:	4086b03a 	or	r3,r8,r2
   223b8:	18015226 	beq	r3,zero,22904 <__subdf3+0x820>
   223bc:	00c00434 	movhi	r3,16
   223c0:	41400234 	orhi	r5,r8,8
   223c4:	18ffffc4 	addi	r3,r3,-1
   223c8:	28ca703a 	and	r5,r5,r3
   223cc:	003f7e06 	br	221c8 <_gp+0xfffe86f8>
   223d0:	10bfffc4 	addi	r2,r2,-1
   223d4:	1000491e 	bne	r2,zero,224fc <__subdf3+0x418>
   223d8:	898fc83a 	sub	r7,r17,r6
   223dc:	89e3803a 	cmpltu	r17,r17,r7
   223e0:	1947c83a 	sub	r3,r3,r5
   223e4:	1c47c83a 	sub	r3,r3,r17
   223e8:	3823883a 	mov	r17,r7
   223ec:	003f9b06 	br	2225c <_gp+0xfffe878c>
   223f0:	2988b03a 	or	r4,r5,r6
   223f4:	203f5c26 	beq	r4,zero,22168 <_gp+0xfffe8698>
   223f8:	10bfffc4 	addi	r2,r2,-1
   223fc:	1000931e 	bne	r2,zero,2264c <__subdf3+0x568>
   22400:	898d883a 	add	r6,r17,r6
   22404:	3463803a 	cmpltu	r17,r6,r17
   22408:	1947883a 	add	r3,r3,r5
   2240c:	88c7883a 	add	r3,r17,r3
   22410:	3023883a 	mov	r17,r6
   22414:	003fd306 	br	22364 <_gp+0xfffe8894>
   22418:	1000541e 	bne	r2,zero,2256c <__subdf3+0x488>
   2241c:	80800044 	addi	r2,r16,1
   22420:	1081ffcc 	andi	r2,r2,2047
   22424:	01000044 	movi	r4,1
   22428:	2080a20e 	bge	r4,r2,226b4 <__subdf3+0x5d0>
   2242c:	8989c83a 	sub	r4,r17,r6
   22430:	8905803a 	cmpltu	r2,r17,r4
   22434:	1967c83a 	sub	r19,r3,r5
   22438:	98a7c83a 	sub	r19,r19,r2
   2243c:	9880202c 	andhi	r2,r19,128
   22440:	10006326 	beq	r2,zero,225d0 <__subdf3+0x4ec>
   22444:	3463c83a 	sub	r17,r6,r17
   22448:	28c7c83a 	sub	r3,r5,r3
   2244c:	344d803a 	cmpltu	r6,r6,r17
   22450:	19a7c83a 	sub	r19,r3,r6
   22454:	3825883a 	mov	r18,r7
   22458:	983f861e 	bne	r19,zero,22274 <_gp+0xfffe87a4>
   2245c:	8809883a 	mov	r4,r17
   22460:	0022d400 	call	22d40 <__clzsi2>
   22464:	10800804 	addi	r2,r2,32
   22468:	113ffe04 	addi	r4,r2,-8
   2246c:	00c007c4 	movi	r3,31
   22470:	193f850e 	bge	r3,r4,22288 <_gp+0xfffe87b8>
   22474:	10bff604 	addi	r2,r2,-40
   22478:	8884983a 	sll	r2,r17,r2
   2247c:	0023883a 	mov	r17,zero
   22480:	243f880e 	bge	r4,r16,222a4 <_gp+0xfffe87d4>
   22484:	00ffe034 	movhi	r3,65408
   22488:	18ffffc4 	addi	r3,r3,-1
   2248c:	8121c83a 	sub	r16,r16,r4
   22490:	10c6703a 	and	r3,r2,r3
   22494:	003f3406 	br	22168 <_gp+0xfffe8698>
   22498:	9100004c 	andi	r4,r18,1
   2249c:	000b883a 	mov	r5,zero
   224a0:	0005883a 	mov	r2,zero
   224a4:	003f4806 	br	221c8 <_gp+0xfffe86f8>
   224a8:	298cb03a 	or	r6,r5,r6
   224ac:	300cc03a 	cmpne	r6,r6,zero
   224b0:	0005883a 	mov	r2,zero
   224b4:	003f6406 	br	22248 <_gp+0xfffe8778>
   224b8:	10009a1e 	bne	r2,zero,22724 <__subdf3+0x640>
   224bc:	82400044 	addi	r9,r16,1
   224c0:	4881ffcc 	andi	r2,r9,2047
   224c4:	02800044 	movi	r10,1
   224c8:	5080670e 	bge	r10,r2,22668 <__subdf3+0x584>
   224cc:	0081ffc4 	movi	r2,2047
   224d0:	4880af26 	beq	r9,r2,22790 <__subdf3+0x6ac>
   224d4:	898d883a 	add	r6,r17,r6
   224d8:	1945883a 	add	r2,r3,r5
   224dc:	3447803a 	cmpltu	r3,r6,r17
   224e0:	1887883a 	add	r3,r3,r2
   224e4:	182297fa 	slli	r17,r3,31
   224e8:	300cd07a 	srli	r6,r6,1
   224ec:	1806d07a 	srli	r3,r3,1
   224f0:	4821883a 	mov	r16,r9
   224f4:	89a2b03a 	or	r17,r17,r6
   224f8:	003f1b06 	br	22168 <_gp+0xfffe8698>
   224fc:	0101ffc4 	movi	r4,2047
   22500:	813f441e 	bne	r16,r4,22214 <_gp+0xfffe8744>
   22504:	003f1806 	br	22168 <_gp+0xfffe8698>
   22508:	843ff844 	addi	r16,r16,-31
   2250c:	01400804 	movi	r5,32
   22510:	1408d83a 	srl	r4,r2,r16
   22514:	19405026 	beq	r3,r5,22658 <__subdf3+0x574>
   22518:	01401004 	movi	r5,64
   2251c:	28c7c83a 	sub	r3,r5,r3
   22520:	10c4983a 	sll	r2,r2,r3
   22524:	88a2b03a 	or	r17,r17,r2
   22528:	8822c03a 	cmpne	r17,r17,zero
   2252c:	2462b03a 	or	r17,r4,r17
   22530:	0007883a 	mov	r3,zero
   22534:	0021883a 	mov	r16,zero
   22538:	003f6d06 	br	222f0 <_gp+0xfffe8820>
   2253c:	11fff804 	addi	r7,r2,-32
   22540:	01000804 	movi	r4,32
   22544:	29ced83a 	srl	r7,r5,r7
   22548:	11004526 	beq	r2,r4,22660 <__subdf3+0x57c>
   2254c:	01001004 	movi	r4,64
   22550:	2089c83a 	sub	r4,r4,r2
   22554:	2904983a 	sll	r2,r5,r4
   22558:	118cb03a 	or	r6,r2,r6
   2255c:	300cc03a 	cmpne	r6,r6,zero
   22560:	398cb03a 	or	r6,r7,r6
   22564:	0005883a 	mov	r2,zero
   22568:	003f3706 	br	22248 <_gp+0xfffe8778>
   2256c:	80002a26 	beq	r16,zero,22618 <__subdf3+0x534>
   22570:	0101ffc4 	movi	r4,2047
   22574:	49006626 	beq	r9,r4,22710 <__subdf3+0x62c>
   22578:	0085c83a 	sub	r2,zero,r2
   2257c:	18c02034 	orhi	r3,r3,128
   22580:	01000e04 	movi	r4,56
   22584:	20807e16 	blt	r4,r2,22780 <__subdf3+0x69c>
   22588:	010007c4 	movi	r4,31
   2258c:	2080e716 	blt	r4,r2,2292c <__subdf3+0x848>
   22590:	01000804 	movi	r4,32
   22594:	2089c83a 	sub	r4,r4,r2
   22598:	1914983a 	sll	r10,r3,r4
   2259c:	8890d83a 	srl	r8,r17,r2
   225a0:	8908983a 	sll	r4,r17,r4
   225a4:	1884d83a 	srl	r2,r3,r2
   225a8:	5222b03a 	or	r17,r10,r8
   225ac:	2006c03a 	cmpne	r3,r4,zero
   225b0:	88e2b03a 	or	r17,r17,r3
   225b4:	3463c83a 	sub	r17,r6,r17
   225b8:	2885c83a 	sub	r2,r5,r2
   225bc:	344d803a 	cmpltu	r6,r6,r17
   225c0:	1187c83a 	sub	r3,r2,r6
   225c4:	4821883a 	mov	r16,r9
   225c8:	3825883a 	mov	r18,r7
   225cc:	003f2306 	br	2225c <_gp+0xfffe878c>
   225d0:	24d0b03a 	or	r8,r4,r19
   225d4:	40001b1e 	bne	r8,zero,22644 <__subdf3+0x560>
   225d8:	0005883a 	mov	r2,zero
   225dc:	0009883a 	mov	r4,zero
   225e0:	0021883a 	mov	r16,zero
   225e4:	003f4906 	br	2230c <_gp+0xfffe883c>
   225e8:	010007c4 	movi	r4,31
   225ec:	20803a16 	blt	r4,r2,226d8 <__subdf3+0x5f4>
   225f0:	01000804 	movi	r4,32
   225f4:	2089c83a 	sub	r4,r4,r2
   225f8:	2912983a 	sll	r9,r5,r4
   225fc:	3090d83a 	srl	r8,r6,r2
   22600:	3108983a 	sll	r4,r6,r4
   22604:	2884d83a 	srl	r2,r5,r2
   22608:	4a12b03a 	or	r9,r9,r8
   2260c:	2008c03a 	cmpne	r4,r4,zero
   22610:	4912b03a 	or	r9,r9,r4
   22614:	003f4e06 	br	22350 <_gp+0xfffe8880>
   22618:	1c48b03a 	or	r4,r3,r17
   2261c:	20003c26 	beq	r4,zero,22710 <__subdf3+0x62c>
   22620:	0084303a 	nor	r2,zero,r2
   22624:	1000381e 	bne	r2,zero,22708 <__subdf3+0x624>
   22628:	3463c83a 	sub	r17,r6,r17
   2262c:	28c5c83a 	sub	r2,r5,r3
   22630:	344d803a 	cmpltu	r6,r6,r17
   22634:	1187c83a 	sub	r3,r2,r6
   22638:	4821883a 	mov	r16,r9
   2263c:	3825883a 	mov	r18,r7
   22640:	003f0606 	br	2225c <_gp+0xfffe878c>
   22644:	2023883a 	mov	r17,r4
   22648:	003f0906 	br	22270 <_gp+0xfffe87a0>
   2264c:	0101ffc4 	movi	r4,2047
   22650:	813f3a1e 	bne	r16,r4,2233c <_gp+0xfffe886c>
   22654:	003ec406 	br	22168 <_gp+0xfffe8698>
   22658:	0005883a 	mov	r2,zero
   2265c:	003fb106 	br	22524 <_gp+0xfffe8a54>
   22660:	0005883a 	mov	r2,zero
   22664:	003fbc06 	br	22558 <_gp+0xfffe8a88>
   22668:	1c44b03a 	or	r2,r3,r17
   2266c:	80008e1e 	bne	r16,zero,228a8 <__subdf3+0x7c4>
   22670:	1000c826 	beq	r2,zero,22994 <__subdf3+0x8b0>
   22674:	2984b03a 	or	r2,r5,r6
   22678:	103ebb26 	beq	r2,zero,22168 <_gp+0xfffe8698>
   2267c:	8989883a 	add	r4,r17,r6
   22680:	1945883a 	add	r2,r3,r5
   22684:	2447803a 	cmpltu	r3,r4,r17
   22688:	1887883a 	add	r3,r3,r2
   2268c:	1880202c 	andhi	r2,r3,128
   22690:	2023883a 	mov	r17,r4
   22694:	103f1626 	beq	r2,zero,222f0 <_gp+0xfffe8820>
   22698:	00bfe034 	movhi	r2,65408
   2269c:	10bfffc4 	addi	r2,r2,-1
   226a0:	5021883a 	mov	r16,r10
   226a4:	1886703a 	and	r3,r3,r2
   226a8:	003eaf06 	br	22168 <_gp+0xfffe8698>
   226ac:	3825883a 	mov	r18,r7
   226b0:	003f0f06 	br	222f0 <_gp+0xfffe8820>
   226b4:	1c44b03a 	or	r2,r3,r17
   226b8:	8000251e 	bne	r16,zero,22750 <__subdf3+0x66c>
   226bc:	1000661e 	bne	r2,zero,22858 <__subdf3+0x774>
   226c0:	2990b03a 	or	r8,r5,r6
   226c4:	40009626 	beq	r8,zero,22920 <__subdf3+0x83c>
   226c8:	2807883a 	mov	r3,r5
   226cc:	3023883a 	mov	r17,r6
   226d0:	3825883a 	mov	r18,r7
   226d4:	003ea406 	br	22168 <_gp+0xfffe8698>
   226d8:	127ff804 	addi	r9,r2,-32
   226dc:	01000804 	movi	r4,32
   226e0:	2a52d83a 	srl	r9,r5,r9
   226e4:	11008c26 	beq	r2,r4,22918 <__subdf3+0x834>
   226e8:	01001004 	movi	r4,64
   226ec:	2085c83a 	sub	r2,r4,r2
   226f0:	2884983a 	sll	r2,r5,r2
   226f4:	118cb03a 	or	r6,r2,r6
   226f8:	300cc03a 	cmpne	r6,r6,zero
   226fc:	4992b03a 	or	r9,r9,r6
   22700:	0005883a 	mov	r2,zero
   22704:	003f1206 	br	22350 <_gp+0xfffe8880>
   22708:	0101ffc4 	movi	r4,2047
   2270c:	493f9c1e 	bne	r9,r4,22580 <_gp+0xfffe8ab0>
   22710:	2807883a 	mov	r3,r5
   22714:	3023883a 	mov	r17,r6
   22718:	4821883a 	mov	r16,r9
   2271c:	3825883a 	mov	r18,r7
   22720:	003e9106 	br	22168 <_gp+0xfffe8698>
   22724:	80001f1e 	bne	r16,zero,227a4 <__subdf3+0x6c0>
   22728:	1c48b03a 	or	r4,r3,r17
   2272c:	20005a26 	beq	r4,zero,22898 <__subdf3+0x7b4>
   22730:	0084303a 	nor	r2,zero,r2
   22734:	1000561e 	bne	r2,zero,22890 <__subdf3+0x7ac>
   22738:	89a3883a 	add	r17,r17,r6
   2273c:	1945883a 	add	r2,r3,r5
   22740:	898d803a 	cmpltu	r6,r17,r6
   22744:	3087883a 	add	r3,r6,r2
   22748:	4821883a 	mov	r16,r9
   2274c:	003f0506 	br	22364 <_gp+0xfffe8894>
   22750:	10002b1e 	bne	r2,zero,22800 <__subdf3+0x71c>
   22754:	2984b03a 	or	r2,r5,r6
   22758:	10008026 	beq	r2,zero,2295c <__subdf3+0x878>
   2275c:	2807883a 	mov	r3,r5
   22760:	3023883a 	mov	r17,r6
   22764:	3825883a 	mov	r18,r7
   22768:	0401ffc4 	movi	r16,2047
   2276c:	003e7e06 	br	22168 <_gp+0xfffe8698>
   22770:	3809883a 	mov	r4,r7
   22774:	0011883a 	mov	r8,zero
   22778:	0005883a 	mov	r2,zero
   2277c:	003ee306 	br	2230c <_gp+0xfffe883c>
   22780:	1c62b03a 	or	r17,r3,r17
   22784:	8822c03a 	cmpne	r17,r17,zero
   22788:	0005883a 	mov	r2,zero
   2278c:	003f8906 	br	225b4 <_gp+0xfffe8ae4>
   22790:	3809883a 	mov	r4,r7
   22794:	4821883a 	mov	r16,r9
   22798:	0011883a 	mov	r8,zero
   2279c:	0005883a 	mov	r2,zero
   227a0:	003eda06 	br	2230c <_gp+0xfffe883c>
   227a4:	0101ffc4 	movi	r4,2047
   227a8:	49003b26 	beq	r9,r4,22898 <__subdf3+0x7b4>
   227ac:	0085c83a 	sub	r2,zero,r2
   227b0:	18c02034 	orhi	r3,r3,128
   227b4:	01000e04 	movi	r4,56
   227b8:	20806e16 	blt	r4,r2,22974 <__subdf3+0x890>
   227bc:	010007c4 	movi	r4,31
   227c0:	20807716 	blt	r4,r2,229a0 <__subdf3+0x8bc>
   227c4:	01000804 	movi	r4,32
   227c8:	2089c83a 	sub	r4,r4,r2
   227cc:	1914983a 	sll	r10,r3,r4
   227d0:	8890d83a 	srl	r8,r17,r2
   227d4:	8908983a 	sll	r4,r17,r4
   227d8:	1884d83a 	srl	r2,r3,r2
   227dc:	5222b03a 	or	r17,r10,r8
   227e0:	2006c03a 	cmpne	r3,r4,zero
   227e4:	88e2b03a 	or	r17,r17,r3
   227e8:	89a3883a 	add	r17,r17,r6
   227ec:	1145883a 	add	r2,r2,r5
   227f0:	898d803a 	cmpltu	r6,r17,r6
   227f4:	3087883a 	add	r3,r6,r2
   227f8:	4821883a 	mov	r16,r9
   227fc:	003ed906 	br	22364 <_gp+0xfffe8894>
   22800:	2984b03a 	or	r2,r5,r6
   22804:	10004226 	beq	r2,zero,22910 <__subdf3+0x82c>
   22808:	1808d0fa 	srli	r4,r3,3
   2280c:	8822d0fa 	srli	r17,r17,3
   22810:	1806977a 	slli	r3,r3,29
   22814:	2080022c 	andhi	r2,r4,8
   22818:	1c62b03a 	or	r17,r3,r17
   2281c:	10000826 	beq	r2,zero,22840 <__subdf3+0x75c>
   22820:	2812d0fa 	srli	r9,r5,3
   22824:	4880022c 	andhi	r2,r9,8
   22828:	1000051e 	bne	r2,zero,22840 <__subdf3+0x75c>
   2282c:	300cd0fa 	srli	r6,r6,3
   22830:	2804977a 	slli	r2,r5,29
   22834:	4809883a 	mov	r4,r9
   22838:	3825883a 	mov	r18,r7
   2283c:	11a2b03a 	or	r17,r2,r6
   22840:	8806d77a 	srli	r3,r17,29
   22844:	200890fa 	slli	r4,r4,3
   22848:	882290fa 	slli	r17,r17,3
   2284c:	0401ffc4 	movi	r16,2047
   22850:	1906b03a 	or	r3,r3,r4
   22854:	003e4406 	br	22168 <_gp+0xfffe8698>
   22858:	2984b03a 	or	r2,r5,r6
   2285c:	103e4226 	beq	r2,zero,22168 <_gp+0xfffe8698>
   22860:	8989c83a 	sub	r4,r17,r6
   22864:	8911803a 	cmpltu	r8,r17,r4
   22868:	1945c83a 	sub	r2,r3,r5
   2286c:	1205c83a 	sub	r2,r2,r8
   22870:	1200202c 	andhi	r8,r2,128
   22874:	403e9a26 	beq	r8,zero,222e0 <_gp+0xfffe8810>
   22878:	3463c83a 	sub	r17,r6,r17
   2287c:	28c5c83a 	sub	r2,r5,r3
   22880:	344d803a 	cmpltu	r6,r6,r17
   22884:	1187c83a 	sub	r3,r2,r6
   22888:	3825883a 	mov	r18,r7
   2288c:	003e3606 	br	22168 <_gp+0xfffe8698>
   22890:	0101ffc4 	movi	r4,2047
   22894:	493fc71e 	bne	r9,r4,227b4 <_gp+0xfffe8ce4>
   22898:	2807883a 	mov	r3,r5
   2289c:	3023883a 	mov	r17,r6
   228a0:	4821883a 	mov	r16,r9
   228a4:	003e3006 	br	22168 <_gp+0xfffe8698>
   228a8:	10003626 	beq	r2,zero,22984 <__subdf3+0x8a0>
   228ac:	2984b03a 	or	r2,r5,r6
   228b0:	10001726 	beq	r2,zero,22910 <__subdf3+0x82c>
   228b4:	1808d0fa 	srli	r4,r3,3
   228b8:	8822d0fa 	srli	r17,r17,3
   228bc:	1806977a 	slli	r3,r3,29
   228c0:	2080022c 	andhi	r2,r4,8
   228c4:	1c62b03a 	or	r17,r3,r17
   228c8:	10000726 	beq	r2,zero,228e8 <__subdf3+0x804>
   228cc:	2812d0fa 	srli	r9,r5,3
   228d0:	4880022c 	andhi	r2,r9,8
   228d4:	1000041e 	bne	r2,zero,228e8 <__subdf3+0x804>
   228d8:	300cd0fa 	srli	r6,r6,3
   228dc:	2804977a 	slli	r2,r5,29
   228e0:	4809883a 	mov	r4,r9
   228e4:	11a2b03a 	or	r17,r2,r6
   228e8:	8806d77a 	srli	r3,r17,29
   228ec:	200890fa 	slli	r4,r4,3
   228f0:	882290fa 	slli	r17,r17,3
   228f4:	3825883a 	mov	r18,r7
   228f8:	1906b03a 	or	r3,r3,r4
   228fc:	0401ffc4 	movi	r16,2047
   22900:	003e1906 	br	22168 <_gp+0xfffe8698>
   22904:	000b883a 	mov	r5,zero
   22908:	0005883a 	mov	r2,zero
   2290c:	003e2e06 	br	221c8 <_gp+0xfffe86f8>
   22910:	0401ffc4 	movi	r16,2047
   22914:	003e1406 	br	22168 <_gp+0xfffe8698>
   22918:	0005883a 	mov	r2,zero
   2291c:	003f7506 	br	226f4 <_gp+0xfffe8c24>
   22920:	0005883a 	mov	r2,zero
   22924:	0009883a 	mov	r4,zero
   22928:	003e7806 	br	2230c <_gp+0xfffe883c>
   2292c:	123ff804 	addi	r8,r2,-32
   22930:	01000804 	movi	r4,32
   22934:	1a10d83a 	srl	r8,r3,r8
   22938:	11002526 	beq	r2,r4,229d0 <__subdf3+0x8ec>
   2293c:	01001004 	movi	r4,64
   22940:	2085c83a 	sub	r2,r4,r2
   22944:	1884983a 	sll	r2,r3,r2
   22948:	1444b03a 	or	r2,r2,r17
   2294c:	1004c03a 	cmpne	r2,r2,zero
   22950:	40a2b03a 	or	r17,r8,r2
   22954:	0005883a 	mov	r2,zero
   22958:	003f1606 	br	225b4 <_gp+0xfffe8ae4>
   2295c:	02000434 	movhi	r8,16
   22960:	0009883a 	mov	r4,zero
   22964:	423fffc4 	addi	r8,r8,-1
   22968:	00bfffc4 	movi	r2,-1
   2296c:	0401ffc4 	movi	r16,2047
   22970:	003e6606 	br	2230c <_gp+0xfffe883c>
   22974:	1c62b03a 	or	r17,r3,r17
   22978:	8822c03a 	cmpne	r17,r17,zero
   2297c:	0005883a 	mov	r2,zero
   22980:	003f9906 	br	227e8 <_gp+0xfffe8d18>
   22984:	2807883a 	mov	r3,r5
   22988:	3023883a 	mov	r17,r6
   2298c:	0401ffc4 	movi	r16,2047
   22990:	003df506 	br	22168 <_gp+0xfffe8698>
   22994:	2807883a 	mov	r3,r5
   22998:	3023883a 	mov	r17,r6
   2299c:	003df206 	br	22168 <_gp+0xfffe8698>
   229a0:	123ff804 	addi	r8,r2,-32
   229a4:	01000804 	movi	r4,32
   229a8:	1a10d83a 	srl	r8,r3,r8
   229ac:	11000a26 	beq	r2,r4,229d8 <__subdf3+0x8f4>
   229b0:	01001004 	movi	r4,64
   229b4:	2085c83a 	sub	r2,r4,r2
   229b8:	1884983a 	sll	r2,r3,r2
   229bc:	1444b03a 	or	r2,r2,r17
   229c0:	1004c03a 	cmpne	r2,r2,zero
   229c4:	40a2b03a 	or	r17,r8,r2
   229c8:	0005883a 	mov	r2,zero
   229cc:	003f8606 	br	227e8 <_gp+0xfffe8d18>
   229d0:	0005883a 	mov	r2,zero
   229d4:	003fdc06 	br	22948 <_gp+0xfffe8e78>
   229d8:	0005883a 	mov	r2,zero
   229dc:	003ff706 	br	229bc <_gp+0xfffe8eec>

000229e0 <__floatunsidf>:
   229e0:	defffe04 	addi	sp,sp,-8
   229e4:	dc000015 	stw	r16,0(sp)
   229e8:	dfc00115 	stw	ra,4(sp)
   229ec:	2021883a 	mov	r16,r4
   229f0:	20002226 	beq	r4,zero,22a7c <__floatunsidf+0x9c>
   229f4:	0022d400 	call	22d40 <__clzsi2>
   229f8:	01010784 	movi	r4,1054
   229fc:	2089c83a 	sub	r4,r4,r2
   22a00:	01810cc4 	movi	r6,1075
   22a04:	310dc83a 	sub	r6,r6,r4
   22a08:	00c007c4 	movi	r3,31
   22a0c:	1980120e 	bge	r3,r6,22a58 <__floatunsidf+0x78>
   22a10:	00c104c4 	movi	r3,1043
   22a14:	1907c83a 	sub	r3,r3,r4
   22a18:	80ca983a 	sll	r5,r16,r3
   22a1c:	00800434 	movhi	r2,16
   22a20:	10bfffc4 	addi	r2,r2,-1
   22a24:	2101ffcc 	andi	r4,r4,2047
   22a28:	0021883a 	mov	r16,zero
   22a2c:	288a703a 	and	r5,r5,r2
   22a30:	2008953a 	slli	r4,r4,20
   22a34:	00c00434 	movhi	r3,16
   22a38:	18ffffc4 	addi	r3,r3,-1
   22a3c:	28c6703a 	and	r3,r5,r3
   22a40:	8005883a 	mov	r2,r16
   22a44:	1906b03a 	or	r3,r3,r4
   22a48:	dfc00117 	ldw	ra,4(sp)
   22a4c:	dc000017 	ldw	r16,0(sp)
   22a50:	dec00204 	addi	sp,sp,8
   22a54:	f800283a 	ret
   22a58:	00c002c4 	movi	r3,11
   22a5c:	188bc83a 	sub	r5,r3,r2
   22a60:	814ad83a 	srl	r5,r16,r5
   22a64:	00c00434 	movhi	r3,16
   22a68:	18ffffc4 	addi	r3,r3,-1
   22a6c:	81a0983a 	sll	r16,r16,r6
   22a70:	2101ffcc 	andi	r4,r4,2047
   22a74:	28ca703a 	and	r5,r5,r3
   22a78:	003fed06 	br	22a30 <_gp+0xfffe8f60>
   22a7c:	0009883a 	mov	r4,zero
   22a80:	000b883a 	mov	r5,zero
   22a84:	003fea06 	br	22a30 <_gp+0xfffe8f60>

00022a88 <__extendsfdf2>:
   22a88:	200ad5fa 	srli	r5,r4,23
   22a8c:	defffd04 	addi	sp,sp,-12
   22a90:	dc400115 	stw	r17,4(sp)
   22a94:	29403fcc 	andi	r5,r5,255
   22a98:	29800044 	addi	r6,r5,1
   22a9c:	04402034 	movhi	r17,128
   22aa0:	dc000015 	stw	r16,0(sp)
   22aa4:	8c7fffc4 	addi	r17,r17,-1
   22aa8:	dfc00215 	stw	ra,8(sp)
   22aac:	31803fcc 	andi	r6,r6,255
   22ab0:	00800044 	movi	r2,1
   22ab4:	8922703a 	and	r17,r17,r4
   22ab8:	2020d7fa 	srli	r16,r4,31
   22abc:	1180110e 	bge	r2,r6,22b04 <__extendsfdf2+0x7c>
   22ac0:	880cd0fa 	srli	r6,r17,3
   22ac4:	8822977a 	slli	r17,r17,29
   22ac8:	2940e004 	addi	r5,r5,896
   22acc:	2941ffcc 	andi	r5,r5,2047
   22ad0:	2804953a 	slli	r2,r5,20
   22ad4:	01400434 	movhi	r5,16
   22ad8:	800697fa 	slli	r3,r16,31
   22adc:	297fffc4 	addi	r5,r5,-1
   22ae0:	314a703a 	and	r5,r6,r5
   22ae4:	288ab03a 	or	r5,r5,r2
   22ae8:	28c6b03a 	or	r3,r5,r3
   22aec:	8805883a 	mov	r2,r17
   22af0:	dfc00217 	ldw	ra,8(sp)
   22af4:	dc400117 	ldw	r17,4(sp)
   22af8:	dc000017 	ldw	r16,0(sp)
   22afc:	dec00304 	addi	sp,sp,12
   22b00:	f800283a 	ret
   22b04:	2800111e 	bne	r5,zero,22b4c <__extendsfdf2+0xc4>
   22b08:	88001c26 	beq	r17,zero,22b7c <__extendsfdf2+0xf4>
   22b0c:	8809883a 	mov	r4,r17
   22b10:	0022d400 	call	22d40 <__clzsi2>
   22b14:	00c00284 	movi	r3,10
   22b18:	18801b16 	blt	r3,r2,22b88 <__extendsfdf2+0x100>
   22b1c:	018002c4 	movi	r6,11
   22b20:	308dc83a 	sub	r6,r6,r2
   22b24:	11000544 	addi	r4,r2,21
   22b28:	8986d83a 	srl	r3,r17,r6
   22b2c:	8922983a 	sll	r17,r17,r4
   22b30:	0180e244 	movi	r6,905
   22b34:	01400434 	movhi	r5,16
   22b38:	3085c83a 	sub	r2,r6,r2
   22b3c:	297fffc4 	addi	r5,r5,-1
   22b40:	194c703a 	and	r6,r3,r5
   22b44:	1141ffcc 	andi	r5,r2,2047
   22b48:	003fe006 	br	22acc <_gp+0xfffe8ffc>
   22b4c:	88000826 	beq	r17,zero,22b70 <__extendsfdf2+0xe8>
   22b50:	880cd0fa 	srli	r6,r17,3
   22b54:	00800434 	movhi	r2,16
   22b58:	10bfffc4 	addi	r2,r2,-1
   22b5c:	31800234 	orhi	r6,r6,8
   22b60:	8822977a 	slli	r17,r17,29
   22b64:	308c703a 	and	r6,r6,r2
   22b68:	0141ffc4 	movi	r5,2047
   22b6c:	003fd706 	br	22acc <_gp+0xfffe8ffc>
   22b70:	0141ffc4 	movi	r5,2047
   22b74:	000d883a 	mov	r6,zero
   22b78:	003fd406 	br	22acc <_gp+0xfffe8ffc>
   22b7c:	000b883a 	mov	r5,zero
   22b80:	000d883a 	mov	r6,zero
   22b84:	003fd106 	br	22acc <_gp+0xfffe8ffc>
   22b88:	11bffd44 	addi	r6,r2,-11
   22b8c:	8986983a 	sll	r3,r17,r6
   22b90:	0023883a 	mov	r17,zero
   22b94:	003fe606 	br	22b30 <_gp+0xfffe9060>

00022b98 <__truncdfsf2>:
   22b98:	2810d53a 	srli	r8,r5,20
   22b9c:	01c00434 	movhi	r7,16
   22ba0:	39ffffc4 	addi	r7,r7,-1
   22ba4:	29ce703a 	and	r7,r5,r7
   22ba8:	4201ffcc 	andi	r8,r8,2047
   22bac:	380e90fa 	slli	r7,r7,3
   22bb0:	200cd77a 	srli	r6,r4,29
   22bb4:	42400044 	addi	r9,r8,1
   22bb8:	4a41ffcc 	andi	r9,r9,2047
   22bbc:	00c00044 	movi	r3,1
   22bc0:	280ad7fa 	srli	r5,r5,31
   22bc4:	31ceb03a 	or	r7,r6,r7
   22bc8:	200490fa 	slli	r2,r4,3
   22bcc:	1a40230e 	bge	r3,r9,22c5c <__truncdfsf2+0xc4>
   22bd0:	40ff2004 	addi	r3,r8,-896
   22bd4:	01803f84 	movi	r6,254
   22bd8:	30c01516 	blt	r6,r3,22c30 <__truncdfsf2+0x98>
   22bdc:	00c0380e 	bge	zero,r3,22cc0 <__truncdfsf2+0x128>
   22be0:	200c91ba 	slli	r6,r4,6
   22be4:	380e90fa 	slli	r7,r7,3
   22be8:	1004d77a 	srli	r2,r2,29
   22bec:	300cc03a 	cmpne	r6,r6,zero
   22bf0:	31ccb03a 	or	r6,r6,r7
   22bf4:	308cb03a 	or	r6,r6,r2
   22bf8:	308001cc 	andi	r2,r6,7
   22bfc:	10000426 	beq	r2,zero,22c10 <__truncdfsf2+0x78>
   22c00:	308003cc 	andi	r2,r6,15
   22c04:	01000104 	movi	r4,4
   22c08:	11000126 	beq	r2,r4,22c10 <__truncdfsf2+0x78>
   22c0c:	31800104 	addi	r6,r6,4
   22c10:	3081002c 	andhi	r2,r6,1024
   22c14:	10001626 	beq	r2,zero,22c70 <__truncdfsf2+0xd8>
   22c18:	18c00044 	addi	r3,r3,1
   22c1c:	00803fc4 	movi	r2,255
   22c20:	18800326 	beq	r3,r2,22c30 <__truncdfsf2+0x98>
   22c24:	300c91ba 	slli	r6,r6,6
   22c28:	300cd27a 	srli	r6,r6,9
   22c2c:	00000206 	br	22c38 <__truncdfsf2+0xa0>
   22c30:	00ffffc4 	movi	r3,-1
   22c34:	000d883a 	mov	r6,zero
   22c38:	18c03fcc 	andi	r3,r3,255
   22c3c:	180895fa 	slli	r4,r3,23
   22c40:	00c02034 	movhi	r3,128
   22c44:	280a97fa 	slli	r5,r5,31
   22c48:	18ffffc4 	addi	r3,r3,-1
   22c4c:	30c6703a 	and	r3,r6,r3
   22c50:	1906b03a 	or	r3,r3,r4
   22c54:	1944b03a 	or	r2,r3,r5
   22c58:	f800283a 	ret
   22c5c:	40000b1e 	bne	r8,zero,22c8c <__truncdfsf2+0xf4>
   22c60:	388cb03a 	or	r6,r7,r2
   22c64:	0007883a 	mov	r3,zero
   22c68:	30000426 	beq	r6,zero,22c7c <__truncdfsf2+0xe4>
   22c6c:	01800144 	movi	r6,5
   22c70:	00803fc4 	movi	r2,255
   22c74:	300cd0fa 	srli	r6,r6,3
   22c78:	18800a26 	beq	r3,r2,22ca4 <__truncdfsf2+0x10c>
   22c7c:	00802034 	movhi	r2,128
   22c80:	10bfffc4 	addi	r2,r2,-1
   22c84:	308c703a 	and	r6,r6,r2
   22c88:	003feb06 	br	22c38 <_gp+0xfffe9168>
   22c8c:	3888b03a 	or	r4,r7,r2
   22c90:	203fe726 	beq	r4,zero,22c30 <_gp+0xfffe9160>
   22c94:	380c90fa 	slli	r6,r7,3
   22c98:	00c03fc4 	movi	r3,255
   22c9c:	31808034 	orhi	r6,r6,512
   22ca0:	003fd506 	br	22bf8 <_gp+0xfffe9128>
   22ca4:	303fe226 	beq	r6,zero,22c30 <_gp+0xfffe9160>
   22ca8:	00802034 	movhi	r2,128
   22cac:	31801034 	orhi	r6,r6,64
   22cb0:	10bfffc4 	addi	r2,r2,-1
   22cb4:	00ffffc4 	movi	r3,-1
   22cb8:	308c703a 	and	r6,r6,r2
   22cbc:	003fde06 	br	22c38 <_gp+0xfffe9168>
   22cc0:	013ffa44 	movi	r4,-23
   22cc4:	19000e16 	blt	r3,r4,22d00 <__truncdfsf2+0x168>
   22cc8:	01000784 	movi	r4,30
   22ccc:	20c9c83a 	sub	r4,r4,r3
   22cd0:	018007c4 	movi	r6,31
   22cd4:	39c02034 	orhi	r7,r7,128
   22cd8:	31000b16 	blt	r6,r4,22d08 <__truncdfsf2+0x170>
   22cdc:	423f2084 	addi	r8,r8,-894
   22ce0:	120c983a 	sll	r6,r2,r8
   22ce4:	3a0e983a 	sll	r7,r7,r8
   22ce8:	1104d83a 	srl	r2,r2,r4
   22cec:	300cc03a 	cmpne	r6,r6,zero
   22cf0:	31ceb03a 	or	r7,r6,r7
   22cf4:	388cb03a 	or	r6,r7,r2
   22cf8:	0007883a 	mov	r3,zero
   22cfc:	003fbe06 	br	22bf8 <_gp+0xfffe9128>
   22d00:	0007883a 	mov	r3,zero
   22d04:	003fd906 	br	22c6c <_gp+0xfffe919c>
   22d08:	01bfff84 	movi	r6,-2
   22d0c:	30cdc83a 	sub	r6,r6,r3
   22d10:	00c00804 	movi	r3,32
   22d14:	398cd83a 	srl	r6,r7,r6
   22d18:	20c00726 	beq	r4,r3,22d38 <__truncdfsf2+0x1a0>
   22d1c:	423f2884 	addi	r8,r8,-862
   22d20:	3a0e983a 	sll	r7,r7,r8
   22d24:	3884b03a 	or	r2,r7,r2
   22d28:	1004c03a 	cmpne	r2,r2,zero
   22d2c:	118cb03a 	or	r6,r2,r6
   22d30:	0007883a 	mov	r3,zero
   22d34:	003fb006 	br	22bf8 <_gp+0xfffe9128>
   22d38:	000f883a 	mov	r7,zero
   22d3c:	003ff906 	br	22d24 <_gp+0xfffe9254>

00022d40 <__clzsi2>:
   22d40:	00bfffd4 	movui	r2,65535
   22d44:	11000536 	bltu	r2,r4,22d5c <__clzsi2+0x1c>
   22d48:	00803fc4 	movi	r2,255
   22d4c:	11000f36 	bltu	r2,r4,22d8c <__clzsi2+0x4c>
   22d50:	00800804 	movi	r2,32
   22d54:	0007883a 	mov	r3,zero
   22d58:	00000506 	br	22d70 <__clzsi2+0x30>
   22d5c:	00804034 	movhi	r2,256
   22d60:	10bfffc4 	addi	r2,r2,-1
   22d64:	11000c2e 	bgeu	r2,r4,22d98 <__clzsi2+0x58>
   22d68:	00800204 	movi	r2,8
   22d6c:	00c00604 	movi	r3,24
   22d70:	20c8d83a 	srl	r4,r4,r3
   22d74:	00c000f4 	movhi	r3,3
   22d78:	18ff4ac4 	addi	r3,r3,-725
   22d7c:	1909883a 	add	r4,r3,r4
   22d80:	20c00003 	ldbu	r3,0(r4)
   22d84:	10c5c83a 	sub	r2,r2,r3
   22d88:	f800283a 	ret
   22d8c:	00800604 	movi	r2,24
   22d90:	00c00204 	movi	r3,8
   22d94:	003ff606 	br	22d70 <_gp+0xfffe92a0>
   22d98:	00800404 	movi	r2,16
   22d9c:	1007883a 	mov	r3,r2
   22da0:	003ff306 	br	22d70 <_gp+0xfffe92a0>

00022da4 <__fixunsdfsi>:
   22da4:	defffd04 	addi	sp,sp,-12
   22da8:	000d883a 	mov	r6,zero
   22dac:	01d07834 	movhi	r7,16864
   22db0:	dc400115 	stw	r17,4(sp)
   22db4:	dc000015 	stw	r16,0(sp)
   22db8:	dfc00215 	stw	ra,8(sp)
   22dbc:	2023883a 	mov	r17,r4
   22dc0:	2821883a 	mov	r16,r5
   22dc4:	0022e180 	call	22e18 <__gedf2>
   22dc8:	1000080e 	bge	r2,zero,22dec <__fixunsdfsi+0x48>
   22dcc:	8809883a 	mov	r4,r17
   22dd0:	800b883a 	mov	r5,r16
   22dd4:	0022ef40 	call	22ef4 <__fixdfsi>
   22dd8:	dfc00217 	ldw	ra,8(sp)
   22ddc:	dc400117 	ldw	r17,4(sp)
   22de0:	dc000017 	ldw	r16,0(sp)
   22de4:	dec00304 	addi	sp,sp,12
   22de8:	f800283a 	ret
   22dec:	000d883a 	mov	r6,zero
   22df0:	01d07834 	movhi	r7,16864
   22df4:	8809883a 	mov	r4,r17
   22df8:	800b883a 	mov	r5,r16
   22dfc:	00220e40 	call	220e4 <__subdf3>
   22e00:	180b883a 	mov	r5,r3
   22e04:	1009883a 	mov	r4,r2
   22e08:	0022ef40 	call	22ef4 <__fixdfsi>
   22e0c:	00e00034 	movhi	r3,32768
   22e10:	10c5883a 	add	r2,r2,r3
   22e14:	003ff006 	br	22dd8 <_gp+0xfffe9308>

00022e18 <__gedf2>:
   22e18:	2804d53a 	srli	r2,r5,20
   22e1c:	3806d53a 	srli	r3,r7,20
   22e20:	02000434 	movhi	r8,16
   22e24:	423fffc4 	addi	r8,r8,-1
   22e28:	1081ffcc 	andi	r2,r2,2047
   22e2c:	0241ffc4 	movi	r9,2047
   22e30:	2a14703a 	and	r10,r5,r8
   22e34:	18c1ffcc 	andi	r3,r3,2047
   22e38:	3a10703a 	and	r8,r7,r8
   22e3c:	280ad7fa 	srli	r5,r5,31
   22e40:	380ed7fa 	srli	r7,r7,31
   22e44:	12401d26 	beq	r2,r9,22ebc <__gedf2+0xa4>
   22e48:	0241ffc4 	movi	r9,2047
   22e4c:	1a401226 	beq	r3,r9,22e98 <__gedf2+0x80>
   22e50:	1000081e 	bne	r2,zero,22e74 <__gedf2+0x5c>
   22e54:	2296b03a 	or	r11,r4,r10
   22e58:	5813003a 	cmpeq	r9,r11,zero
   22e5c:	1800091e 	bne	r3,zero,22e84 <__gedf2+0x6c>
   22e60:	3218b03a 	or	r12,r6,r8
   22e64:	6000071e 	bne	r12,zero,22e84 <__gedf2+0x6c>
   22e68:	0005883a 	mov	r2,zero
   22e6c:	5800101e 	bne	r11,zero,22eb0 <__gedf2+0x98>
   22e70:	f800283a 	ret
   22e74:	18000c1e 	bne	r3,zero,22ea8 <__gedf2+0x90>
   22e78:	3212b03a 	or	r9,r6,r8
   22e7c:	48000c26 	beq	r9,zero,22eb0 <__gedf2+0x98>
   22e80:	0013883a 	mov	r9,zero
   22e84:	39c03fcc 	andi	r7,r7,255
   22e88:	48000826 	beq	r9,zero,22eac <__gedf2+0x94>
   22e8c:	38000926 	beq	r7,zero,22eb4 <__gedf2+0x9c>
   22e90:	00800044 	movi	r2,1
   22e94:	f800283a 	ret
   22e98:	3212b03a 	or	r9,r6,r8
   22e9c:	483fec26 	beq	r9,zero,22e50 <_gp+0xfffe9380>
   22ea0:	00bfff84 	movi	r2,-2
   22ea4:	f800283a 	ret
   22ea8:	39c03fcc 	andi	r7,r7,255
   22eac:	29c00626 	beq	r5,r7,22ec8 <__gedf2+0xb0>
   22eb0:	283ff726 	beq	r5,zero,22e90 <_gp+0xfffe93c0>
   22eb4:	00bfffc4 	movi	r2,-1
   22eb8:	f800283a 	ret
   22ebc:	2292b03a 	or	r9,r4,r10
   22ec0:	483fe126 	beq	r9,zero,22e48 <_gp+0xfffe9378>
   22ec4:	003ff606 	br	22ea0 <_gp+0xfffe93d0>
   22ec8:	18bff916 	blt	r3,r2,22eb0 <_gp+0xfffe93e0>
   22ecc:	10c00316 	blt	r2,r3,22edc <__gedf2+0xc4>
   22ed0:	42bff736 	bltu	r8,r10,22eb0 <_gp+0xfffe93e0>
   22ed4:	52000326 	beq	r10,r8,22ee4 <__gedf2+0xcc>
   22ed8:	5200042e 	bgeu	r10,r8,22eec <__gedf2+0xd4>
   22edc:	283fec1e 	bne	r5,zero,22e90 <_gp+0xfffe93c0>
   22ee0:	003ff406 	br	22eb4 <_gp+0xfffe93e4>
   22ee4:	313ff236 	bltu	r6,r4,22eb0 <_gp+0xfffe93e0>
   22ee8:	21bffc36 	bltu	r4,r6,22edc <_gp+0xfffe940c>
   22eec:	0005883a 	mov	r2,zero
   22ef0:	f800283a 	ret

00022ef4 <__fixdfsi>:
   22ef4:	280cd53a 	srli	r6,r5,20
   22ef8:	00c00434 	movhi	r3,16
   22efc:	18ffffc4 	addi	r3,r3,-1
   22f00:	3181ffcc 	andi	r6,r6,2047
   22f04:	01c0ff84 	movi	r7,1022
   22f08:	28c6703a 	and	r3,r5,r3
   22f0c:	280ad7fa 	srli	r5,r5,31
   22f10:	3980120e 	bge	r7,r6,22f5c <__fixdfsi+0x68>
   22f14:	00810744 	movi	r2,1053
   22f18:	11800c16 	blt	r2,r6,22f4c <__fixdfsi+0x58>
   22f1c:	00810cc4 	movi	r2,1075
   22f20:	1185c83a 	sub	r2,r2,r6
   22f24:	01c007c4 	movi	r7,31
   22f28:	18c00434 	orhi	r3,r3,16
   22f2c:	38800d16 	blt	r7,r2,22f64 <__fixdfsi+0x70>
   22f30:	31befb44 	addi	r6,r6,-1043
   22f34:	2084d83a 	srl	r2,r4,r2
   22f38:	1986983a 	sll	r3,r3,r6
   22f3c:	1884b03a 	or	r2,r3,r2
   22f40:	28000726 	beq	r5,zero,22f60 <__fixdfsi+0x6c>
   22f44:	0085c83a 	sub	r2,zero,r2
   22f48:	f800283a 	ret
   22f4c:	00a00034 	movhi	r2,32768
   22f50:	10bfffc4 	addi	r2,r2,-1
   22f54:	2885883a 	add	r2,r5,r2
   22f58:	f800283a 	ret
   22f5c:	0005883a 	mov	r2,zero
   22f60:	f800283a 	ret
   22f64:	008104c4 	movi	r2,1043
   22f68:	1185c83a 	sub	r2,r2,r6
   22f6c:	1884d83a 	srl	r2,r3,r2
   22f70:	003ff306 	br	22f40 <_gp+0xfffe9470>

00022f74 <_puts_r>:
   22f74:	defff604 	addi	sp,sp,-40
   22f78:	dc000715 	stw	r16,28(sp)
   22f7c:	2021883a 	mov	r16,r4
   22f80:	2809883a 	mov	r4,r5
   22f84:	dc400815 	stw	r17,32(sp)
   22f88:	dfc00915 	stw	ra,36(sp)
   22f8c:	2823883a 	mov	r17,r5
   22f90:	00232040 	call	23204 <strlen>
   22f94:	10c00044 	addi	r3,r2,1
   22f98:	d8800115 	stw	r2,4(sp)
   22f9c:	008000f4 	movhi	r2,3
   22fa0:	10bf8b04 	addi	r2,r2,-468
   22fa4:	d8800215 	stw	r2,8(sp)
   22fa8:	00800044 	movi	r2,1
   22fac:	d8800315 	stw	r2,12(sp)
   22fb0:	00800084 	movi	r2,2
   22fb4:	dc400015 	stw	r17,0(sp)
   22fb8:	d8c00615 	stw	r3,24(sp)
   22fbc:	dec00415 	stw	sp,16(sp)
   22fc0:	d8800515 	stw	r2,20(sp)
   22fc4:	80000226 	beq	r16,zero,22fd0 <_puts_r+0x5c>
   22fc8:	80800e17 	ldw	r2,56(r16)
   22fcc:	10001426 	beq	r2,zero,23020 <_puts_r+0xac>
   22fd0:	81400217 	ldw	r5,8(r16)
   22fd4:	2880030b 	ldhu	r2,12(r5)
   22fd8:	10c8000c 	andi	r3,r2,8192
   22fdc:	1800061e 	bne	r3,zero,22ff8 <_puts_r+0x84>
   22fe0:	29001917 	ldw	r4,100(r5)
   22fe4:	00f7ffc4 	movi	r3,-8193
   22fe8:	10880014 	ori	r2,r2,8192
   22fec:	20c6703a 	and	r3,r4,r3
   22ff0:	2880030d 	sth	r2,12(r5)
   22ff4:	28c01915 	stw	r3,100(r5)
   22ff8:	d9800404 	addi	r6,sp,16
   22ffc:	8009883a 	mov	r4,r16
   23000:	002709c0 	call	2709c <__sfvwrite_r>
   23004:	1000091e 	bne	r2,zero,2302c <_puts_r+0xb8>
   23008:	00800284 	movi	r2,10
   2300c:	dfc00917 	ldw	ra,36(sp)
   23010:	dc400817 	ldw	r17,32(sp)
   23014:	dc000717 	ldw	r16,28(sp)
   23018:	dec00a04 	addi	sp,sp,40
   2301c:	f800283a 	ret
   23020:	8009883a 	mov	r4,r16
   23024:	002704c0 	call	2704c <__sinit>
   23028:	003fe906 	br	22fd0 <_gp+0xfffe9500>
   2302c:	00bfffc4 	movi	r2,-1
   23030:	003ff606 	br	2300c <_gp+0xfffe953c>

00023034 <puts>:
   23034:	008000f4 	movhi	r2,3
   23038:	1086b704 	addi	r2,r2,6876
   2303c:	200b883a 	mov	r5,r4
   23040:	11000017 	ldw	r4,0(r2)
   23044:	0022f741 	jmpi	22f74 <_puts_r>

00023048 <_snprintf_r>:
   23048:	30003116 	blt	r6,zero,23110 <_snprintf_r+0xc8>
   2304c:	deffe404 	addi	sp,sp,-112
   23050:	00c08204 	movi	r3,520
   23054:	dc001a15 	stw	r16,104(sp)
   23058:	3005883a 	mov	r2,r6
   2305c:	dfc01b15 	stw	ra,108(sp)
   23060:	d8c0030d 	sth	r3,12(sp)
   23064:	d9400015 	stw	r5,0(sp)
   23068:	d9400415 	stw	r5,16(sp)
   2306c:	380d883a 	mov	r6,r7
   23070:	2021883a 	mov	r16,r4
   23074:	10001026 	beq	r2,zero,230b8 <_snprintf_r+0x70>
   23078:	10bfffc4 	addi	r2,r2,-1
   2307c:	d8800215 	stw	r2,8(sp)
   23080:	d8800515 	stw	r2,20(sp)
   23084:	d9c01c04 	addi	r7,sp,112
   23088:	00bfffc4 	movi	r2,-1
   2308c:	d80b883a 	mov	r5,sp
   23090:	d880038d 	sth	r2,14(sp)
   23094:	002329c0 	call	2329c <___svfprintf_internal_r>
   23098:	00ffffc4 	movi	r3,-1
   2309c:	10c01316 	blt	r2,r3,230ec <_snprintf_r+0xa4>
   230a0:	d8c00017 	ldw	r3,0(sp)
   230a4:	18000005 	stb	zero,0(r3)
   230a8:	dfc01b17 	ldw	ra,108(sp)
   230ac:	dc001a17 	ldw	r16,104(sp)
   230b0:	dec01c04 	addi	sp,sp,112
   230b4:	f800283a 	ret
   230b8:	00bfffc4 	movi	r2,-1
   230bc:	d9c01c04 	addi	r7,sp,112
   230c0:	d80b883a 	mov	r5,sp
   230c4:	d8000215 	stw	zero,8(sp)
   230c8:	d8000515 	stw	zero,20(sp)
   230cc:	d880038d 	sth	r2,14(sp)
   230d0:	002329c0 	call	2329c <___svfprintf_internal_r>
   230d4:	00ffffc4 	movi	r3,-1
   230d8:	10c00716 	blt	r2,r3,230f8 <_snprintf_r+0xb0>
   230dc:	dfc01b17 	ldw	ra,108(sp)
   230e0:	dc001a17 	ldw	r16,104(sp)
   230e4:	dec01c04 	addi	sp,sp,112
   230e8:	f800283a 	ret
   230ec:	00c022c4 	movi	r3,139
   230f0:	80c00015 	stw	r3,0(r16)
   230f4:	003fea06 	br	230a0 <_gp+0xfffe95d0>
   230f8:	00c022c4 	movi	r3,139
   230fc:	80c00015 	stw	r3,0(r16)
   23100:	dfc01b17 	ldw	ra,108(sp)
   23104:	dc001a17 	ldw	r16,104(sp)
   23108:	dec01c04 	addi	sp,sp,112
   2310c:	f800283a 	ret
   23110:	008022c4 	movi	r2,139
   23114:	20800015 	stw	r2,0(r4)
   23118:	00bfffc4 	movi	r2,-1
   2311c:	f800283a 	ret

00023120 <snprintf>:
   23120:	deffe304 	addi	sp,sp,-116
   23124:	dfc01b15 	stw	ra,108(sp)
   23128:	dc001a15 	stw	r16,104(sp)
   2312c:	d9c01c15 	stw	r7,112(sp)
   23130:	008000f4 	movhi	r2,3
   23134:	1086b704 	addi	r2,r2,6876
   23138:	14000017 	ldw	r16,0(r2)
   2313c:	28002d16 	blt	r5,zero,231f4 <snprintf+0xd4>
   23140:	00808204 	movi	r2,520
   23144:	d880030d 	sth	r2,12(sp)
   23148:	d9000015 	stw	r4,0(sp)
   2314c:	d9000415 	stw	r4,16(sp)
   23150:	28001126 	beq	r5,zero,23198 <snprintf+0x78>
   23154:	28bfffc4 	addi	r2,r5,-1
   23158:	d8800215 	stw	r2,8(sp)
   2315c:	d8800515 	stw	r2,20(sp)
   23160:	d9c01c04 	addi	r7,sp,112
   23164:	00bfffc4 	movi	r2,-1
   23168:	d80b883a 	mov	r5,sp
   2316c:	8009883a 	mov	r4,r16
   23170:	d880038d 	sth	r2,14(sp)
   23174:	002329c0 	call	2329c <___svfprintf_internal_r>
   23178:	00ffffc4 	movi	r3,-1
   2317c:	10c01416 	blt	r2,r3,231d0 <snprintf+0xb0>
   23180:	d8c00017 	ldw	r3,0(sp)
   23184:	18000005 	stb	zero,0(r3)
   23188:	dfc01b17 	ldw	ra,108(sp)
   2318c:	dc001a17 	ldw	r16,104(sp)
   23190:	dec01d04 	addi	sp,sp,116
   23194:	f800283a 	ret
   23198:	00bfffc4 	movi	r2,-1
   2319c:	d9c01c04 	addi	r7,sp,112
   231a0:	d80b883a 	mov	r5,sp
   231a4:	8009883a 	mov	r4,r16
   231a8:	d8000215 	stw	zero,8(sp)
   231ac:	d8000515 	stw	zero,20(sp)
   231b0:	d880038d 	sth	r2,14(sp)
   231b4:	002329c0 	call	2329c <___svfprintf_internal_r>
   231b8:	00ffffc4 	movi	r3,-1
   231bc:	10c00716 	blt	r2,r3,231dc <snprintf+0xbc>
   231c0:	dfc01b17 	ldw	ra,108(sp)
   231c4:	dc001a17 	ldw	r16,104(sp)
   231c8:	dec01d04 	addi	sp,sp,116
   231cc:	f800283a 	ret
   231d0:	00c022c4 	movi	r3,139
   231d4:	80c00015 	stw	r3,0(r16)
   231d8:	003fe906 	br	23180 <_gp+0xfffe96b0>
   231dc:	00c022c4 	movi	r3,139
   231e0:	80c00015 	stw	r3,0(r16)
   231e4:	dfc01b17 	ldw	ra,108(sp)
   231e8:	dc001a17 	ldw	r16,104(sp)
   231ec:	dec01d04 	addi	sp,sp,116
   231f0:	f800283a 	ret
   231f4:	008022c4 	movi	r2,139
   231f8:	80800015 	stw	r2,0(r16)
   231fc:	00bfffc4 	movi	r2,-1
   23200:	003fef06 	br	231c0 <_gp+0xfffe96f0>

00023204 <strlen>:
   23204:	208000cc 	andi	r2,r4,3
   23208:	10002026 	beq	r2,zero,2328c <strlen+0x88>
   2320c:	20800007 	ldb	r2,0(r4)
   23210:	10002026 	beq	r2,zero,23294 <strlen+0x90>
   23214:	2005883a 	mov	r2,r4
   23218:	00000206 	br	23224 <strlen+0x20>
   2321c:	10c00007 	ldb	r3,0(r2)
   23220:	18001826 	beq	r3,zero,23284 <strlen+0x80>
   23224:	10800044 	addi	r2,r2,1
   23228:	10c000cc 	andi	r3,r2,3
   2322c:	183ffb1e 	bne	r3,zero,2321c <_gp+0xfffe974c>
   23230:	10c00017 	ldw	r3,0(r2)
   23234:	01ffbff4 	movhi	r7,65279
   23238:	39ffbfc4 	addi	r7,r7,-257
   2323c:	00ca303a 	nor	r5,zero,r3
   23240:	01a02074 	movhi	r6,32897
   23244:	19c7883a 	add	r3,r3,r7
   23248:	31a02004 	addi	r6,r6,-32640
   2324c:	1946703a 	and	r3,r3,r5
   23250:	1986703a 	and	r3,r3,r6
   23254:	1800091e 	bne	r3,zero,2327c <strlen+0x78>
   23258:	10800104 	addi	r2,r2,4
   2325c:	10c00017 	ldw	r3,0(r2)
   23260:	19cb883a 	add	r5,r3,r7
   23264:	00c6303a 	nor	r3,zero,r3
   23268:	28c6703a 	and	r3,r5,r3
   2326c:	1986703a 	and	r3,r3,r6
   23270:	183ff926 	beq	r3,zero,23258 <_gp+0xfffe9788>
   23274:	00000106 	br	2327c <strlen+0x78>
   23278:	10800044 	addi	r2,r2,1
   2327c:	10c00007 	ldb	r3,0(r2)
   23280:	183ffd1e 	bne	r3,zero,23278 <_gp+0xfffe97a8>
   23284:	1105c83a 	sub	r2,r2,r4
   23288:	f800283a 	ret
   2328c:	2005883a 	mov	r2,r4
   23290:	003fe706 	br	23230 <_gp+0xfffe9760>
   23294:	0005883a 	mov	r2,zero
   23298:	f800283a 	ret

0002329c <___svfprintf_internal_r>:
   2329c:	deffb704 	addi	sp,sp,-292
   232a0:	dfc04815 	stw	ra,288(sp)
   232a4:	ddc04615 	stw	r23,280(sp)
   232a8:	d9402c15 	stw	r5,176(sp)
   232ac:	d9003915 	stw	r4,228(sp)
   232b0:	302f883a 	mov	r23,r6
   232b4:	d9c02d15 	stw	r7,180(sp)
   232b8:	df004715 	stw	fp,284(sp)
   232bc:	dd804515 	stw	r22,276(sp)
   232c0:	dd404415 	stw	r21,272(sp)
   232c4:	dd004315 	stw	r20,268(sp)
   232c8:	dcc04215 	stw	r19,264(sp)
   232cc:	dc804115 	stw	r18,260(sp)
   232d0:	dc404015 	stw	r17,256(sp)
   232d4:	dc003f15 	stw	r16,252(sp)
   232d8:	002778c0 	call	2778c <_localeconv_r>
   232dc:	10800017 	ldw	r2,0(r2)
   232e0:	1009883a 	mov	r4,r2
   232e4:	d8803415 	stw	r2,208(sp)
   232e8:	00232040 	call	23204 <strlen>
   232ec:	d8c02c17 	ldw	r3,176(sp)
   232f0:	d8803815 	stw	r2,224(sp)
   232f4:	1880030b 	ldhu	r2,12(r3)
   232f8:	1080200c 	andi	r2,r2,128
   232fc:	10000226 	beq	r2,zero,23308 <___svfprintf_internal_r+0x6c>
   23300:	18800417 	ldw	r2,16(r3)
   23304:	10067f26 	beq	r2,zero,24d04 <___svfprintf_internal_r+0x1a68>
   23308:	dcc03917 	ldw	r19,228(sp)
   2330c:	d8c00404 	addi	r3,sp,16
   23310:	054000f4 	movhi	r21,3
   23314:	d9001e04 	addi	r4,sp,120
   23318:	ad7f9c84 	addi	r21,r21,-398
   2331c:	d8c01e15 	stw	r3,120(sp)
   23320:	d8002015 	stw	zero,128(sp)
   23324:	d8001f15 	stw	zero,124(sp)
   23328:	d8003315 	stw	zero,204(sp)
   2332c:	d8003615 	stw	zero,216(sp)
   23330:	d8003715 	stw	zero,220(sp)
   23334:	1811883a 	mov	r8,r3
   23338:	d8003a15 	stw	zero,232(sp)
   2333c:	d8003b15 	stw	zero,236(sp)
   23340:	d8002f15 	stw	zero,188(sp)
   23344:	d9002815 	stw	r4,160(sp)
   23348:	b8800007 	ldb	r2,0(r23)
   2334c:	10026726 	beq	r2,zero,23cec <___svfprintf_internal_r+0xa50>
   23350:	00c00944 	movi	r3,37
   23354:	b821883a 	mov	r16,r23
   23358:	10c0021e 	bne	r2,r3,23364 <___svfprintf_internal_r+0xc8>
   2335c:	00001406 	br	233b0 <___svfprintf_internal_r+0x114>
   23360:	10c00326 	beq	r2,r3,23370 <___svfprintf_internal_r+0xd4>
   23364:	84000044 	addi	r16,r16,1
   23368:	80800007 	ldb	r2,0(r16)
   2336c:	103ffc1e 	bne	r2,zero,23360 <_gp+0xfffe9890>
   23370:	85e3c83a 	sub	r17,r16,r23
   23374:	88000e26 	beq	r17,zero,233b0 <___svfprintf_internal_r+0x114>
   23378:	d8c02017 	ldw	r3,128(sp)
   2337c:	d8801f17 	ldw	r2,124(sp)
   23380:	45c00015 	stw	r23,0(r8)
   23384:	1c47883a 	add	r3,r3,r17
   23388:	10800044 	addi	r2,r2,1
   2338c:	d8c02015 	stw	r3,128(sp)
   23390:	44400115 	stw	r17,4(r8)
   23394:	d8801f15 	stw	r2,124(sp)
   23398:	00c001c4 	movi	r3,7
   2339c:	18809716 	blt	r3,r2,235fc <___svfprintf_internal_r+0x360>
   233a0:	42000204 	addi	r8,r8,8
   233a4:	d9402f17 	ldw	r5,188(sp)
   233a8:	2c4b883a 	add	r5,r5,r17
   233ac:	d9402f15 	stw	r5,188(sp)
   233b0:	80800007 	ldb	r2,0(r16)
   233b4:	10009826 	beq	r2,zero,23618 <___svfprintf_internal_r+0x37c>
   233b8:	84400047 	ldb	r17,1(r16)
   233bc:	00bfffc4 	movi	r2,-1
   233c0:	85c00044 	addi	r23,r16,1
   233c4:	d8002785 	stb	zero,158(sp)
   233c8:	0007883a 	mov	r3,zero
   233cc:	000f883a 	mov	r7,zero
   233d0:	d8802915 	stw	r2,164(sp)
   233d4:	d8003115 	stw	zero,196(sp)
   233d8:	0025883a 	mov	r18,zero
   233dc:	01401604 	movi	r5,88
   233e0:	01800244 	movi	r6,9
   233e4:	02800a84 	movi	r10,42
   233e8:	02401b04 	movi	r9,108
   233ec:	bdc00044 	addi	r23,r23,1
   233f0:	88bff804 	addi	r2,r17,-32
   233f4:	2882f036 	bltu	r5,r2,23fb8 <___svfprintf_internal_r+0xd1c>
   233f8:	100490ba 	slli	r2,r2,2
   233fc:	010000b4 	movhi	r4,2
   23400:	210d0404 	addi	r4,r4,13328
   23404:	1105883a 	add	r2,r2,r4
   23408:	10800017 	ldw	r2,0(r2)
   2340c:	1000683a 	jmp	r2
   23410:	00023f20 	cmpeqi	zero,zero,2300
   23414:	00023fb8 	rdprs	zero,zero,2302
   23418:	00023fb8 	rdprs	zero,zero,2302
   2341c:	00023f14 	movui	zero,2300
   23420:	00023fb8 	rdprs	zero,zero,2302
   23424:	00023fb8 	rdprs	zero,zero,2302
   23428:	00023fb8 	rdprs	zero,zero,2302
   2342c:	00023fb8 	rdprs	zero,zero,2302
   23430:	00023fb8 	rdprs	zero,zero,2302
   23434:	00023fb8 	rdprs	zero,zero,2302
   23438:	00023674 	movhi	zero,2265
   2343c:	00023e50 	cmplti	zero,zero,2297
   23440:	00023fb8 	rdprs	zero,zero,2302
   23444:	00023584 	movi	zero,2262
   23448:	0002369c 	xori	zero,zero,2266
   2344c:	00023fb8 	rdprs	zero,zero,2302
   23450:	00023710 	cmplti	zero,zero,2268
   23454:	000236dc 	xori	zero,zero,2267
   23458:	000236dc 	xori	zero,zero,2267
   2345c:	000236dc 	xori	zero,zero,2267
   23460:	000236dc 	xori	zero,zero,2267
   23464:	000236dc 	xori	zero,zero,2267
   23468:	000236dc 	xori	zero,zero,2267
   2346c:	000236dc 	xori	zero,zero,2267
   23470:	000236dc 	xori	zero,zero,2267
   23474:	000236dc 	xori	zero,zero,2267
   23478:	00023fb8 	rdprs	zero,zero,2302
   2347c:	00023fb8 	rdprs	zero,zero,2302
   23480:	00023fb8 	rdprs	zero,zero,2302
   23484:	00023fb8 	rdprs	zero,zero,2302
   23488:	00023fb8 	rdprs	zero,zero,2302
   2348c:	00023fb8 	rdprs	zero,zero,2302
   23490:	00023fb8 	rdprs	zero,zero,2302
   23494:	00023fb8 	rdprs	zero,zero,2302
   23498:	00023fb8 	rdprs	zero,zero,2302
   2349c:	00023fb8 	rdprs	zero,zero,2302
   234a0:	000237c8 	cmpgei	zero,zero,2271
   234a4:	0002371c 	xori	zero,zero,2268
   234a8:	00023fb8 	rdprs	zero,zero,2302
   234ac:	0002371c 	xori	zero,zero,2268
   234b0:	00023fb8 	rdprs	zero,zero,2302
   234b4:	00023fb8 	rdprs	zero,zero,2302
   234b8:	00023fb8 	rdprs	zero,zero,2302
   234bc:	00023fb8 	rdprs	zero,zero,2302
   234c0:	000237bc 	xorhi	zero,zero,2270
   234c4:	00023fb8 	rdprs	zero,zero,2302
   234c8:	00023fb8 	rdprs	zero,zero,2302
   234cc:	00023884 	movi	zero,2274
   234d0:	00023fb8 	rdprs	zero,zero,2302
   234d4:	00023fb8 	rdprs	zero,zero,2302
   234d8:	00023fb8 	rdprs	zero,zero,2302
   234dc:	00023fb8 	rdprs	zero,zero,2302
   234e0:	00023fb8 	rdprs	zero,zero,2302
   234e4:	00023cf4 	movhi	zero,2291
   234e8:	00023fb8 	rdprs	zero,zero,2302
   234ec:	00023fb8 	rdprs	zero,zero,2302
   234f0:	00023d54 	movui	zero,2293
   234f4:	00023fb8 	rdprs	zero,zero,2302
   234f8:	00023fb8 	rdprs	zero,zero,2302
   234fc:	00023fb8 	rdprs	zero,zero,2302
   23500:	00023fb8 	rdprs	zero,zero,2302
   23504:	00023fb8 	rdprs	zero,zero,2302
   23508:	00023fb8 	rdprs	zero,zero,2302
   2350c:	00023fb8 	rdprs	zero,zero,2302
   23510:	00023fb8 	rdprs	zero,zero,2302
   23514:	00023fb8 	rdprs	zero,zero,2302
   23518:	00023fb8 	rdprs	zero,zero,2302
   2351c:	00023e04 	movi	zero,2296
   23520:	00023f40 	call	23f4 <__reset-0x1dc0c>
   23524:	0002371c 	xori	zero,zero,2268
   23528:	0002371c 	xori	zero,zero,2268
   2352c:	0002371c 	xori	zero,zero,2268
   23530:	00023f94 	movui	zero,2302
   23534:	00023f40 	call	23f4 <__reset-0x1dc0c>
   23538:	00023fb8 	rdprs	zero,zero,2302
   2353c:	00023fb8 	rdprs	zero,zero,2302
   23540:	00023f50 	cmplti	zero,zero,2301
   23544:	00023fb8 	rdprs	zero,zero,2302
   23548:	00023f60 	cmpeqi	zero,zero,2301
   2354c:	00023e40 	call	23e4 <__reset-0x1dc1c>
   23550:	00023590 	cmplti	zero,zero,2262
   23554:	00023e60 	cmpeqi	zero,zero,2297
   23558:	00023fb8 	rdprs	zero,zero,2302
   2355c:	00023e6c 	andhi	zero,zero,2297
   23560:	00023fb8 	rdprs	zero,zero,2302
   23564:	00023ec8 	cmpgei	zero,zero,2299
   23568:	00023fb8 	rdprs	zero,zero,2302
   2356c:	00023fb8 	rdprs	zero,zero,2302
   23570:	00023ed8 	cmpnei	zero,zero,2299
   23574:	d9003117 	ldw	r4,196(sp)
   23578:	d8802d15 	stw	r2,180(sp)
   2357c:	0109c83a 	sub	r4,zero,r4
   23580:	d9003115 	stw	r4,196(sp)
   23584:	94800114 	ori	r18,r18,4
   23588:	bc400007 	ldb	r17,0(r23)
   2358c:	003f9706 	br	233ec <_gp+0xfffe991c>
   23590:	00800c04 	movi	r2,48
   23594:	d9002d17 	ldw	r4,180(sp)
   23598:	d9402917 	ldw	r5,164(sp)
   2359c:	d8802705 	stb	r2,156(sp)
   235a0:	00801e04 	movi	r2,120
   235a4:	d8802745 	stb	r2,157(sp)
   235a8:	d8002785 	stb	zero,158(sp)
   235ac:	20c00104 	addi	r3,r4,4
   235b0:	25000017 	ldw	r20,0(r4)
   235b4:	002d883a 	mov	r22,zero
   235b8:	90800094 	ori	r2,r18,2
   235bc:	28028616 	blt	r5,zero,23fd8 <___svfprintf_internal_r+0xd3c>
   235c0:	00bfdfc4 	movi	r2,-129
   235c4:	90a4703a 	and	r18,r18,r2
   235c8:	d8c02d15 	stw	r3,180(sp)
   235cc:	94800094 	ori	r18,r18,2
   235d0:	a002731e 	bne	r20,zero,23fa0 <___svfprintf_internal_r+0xd04>
   235d4:	008000f4 	movhi	r2,3
   235d8:	10bf9504 	addi	r2,r2,-428
   235dc:	d8803a15 	stw	r2,232(sp)
   235e0:	04401e04 	movi	r17,120
   235e4:	d8c02917 	ldw	r3,164(sp)
   235e8:	0039883a 	mov	fp,zero
   235ec:	1801d526 	beq	r3,zero,23d44 <___svfprintf_internal_r+0xaa8>
   235f0:	0029883a 	mov	r20,zero
   235f4:	002d883a 	mov	r22,zero
   235f8:	0001f106 	br	23dc0 <___svfprintf_internal_r+0xb24>
   235fc:	d9402c17 	ldw	r5,176(sp)
   23600:	d9801e04 	addi	r6,sp,120
   23604:	9809883a 	mov	r4,r19
   23608:	0029cb80 	call	29cb8 <__ssprint_r>
   2360c:	1000081e 	bne	r2,zero,23630 <___svfprintf_internal_r+0x394>
   23610:	da000404 	addi	r8,sp,16
   23614:	003f6306 	br	233a4 <_gp+0xfffe98d4>
   23618:	d8802017 	ldw	r2,128(sp)
   2361c:	10000426 	beq	r2,zero,23630 <___svfprintf_internal_r+0x394>
   23620:	d9402c17 	ldw	r5,176(sp)
   23624:	d9003917 	ldw	r4,228(sp)
   23628:	d9801e04 	addi	r6,sp,120
   2362c:	0029cb80 	call	29cb8 <__ssprint_r>
   23630:	d8802c17 	ldw	r2,176(sp)
   23634:	10c0030b 	ldhu	r3,12(r2)
   23638:	d8802f17 	ldw	r2,188(sp)
   2363c:	18c0100c 	andi	r3,r3,64
   23640:	1805f51e 	bne	r3,zero,24e18 <___svfprintf_internal_r+0x1b7c>
   23644:	dfc04817 	ldw	ra,288(sp)
   23648:	df004717 	ldw	fp,284(sp)
   2364c:	ddc04617 	ldw	r23,280(sp)
   23650:	dd804517 	ldw	r22,276(sp)
   23654:	dd404417 	ldw	r21,272(sp)
   23658:	dd004317 	ldw	r20,268(sp)
   2365c:	dcc04217 	ldw	r19,264(sp)
   23660:	dc804117 	ldw	r18,260(sp)
   23664:	dc404017 	ldw	r17,256(sp)
   23668:	dc003f17 	ldw	r16,252(sp)
   2366c:	dec04904 	addi	sp,sp,292
   23670:	f800283a 	ret
   23674:	d8802d17 	ldw	r2,180(sp)
   23678:	d9002d17 	ldw	r4,180(sp)
   2367c:	10800017 	ldw	r2,0(r2)
   23680:	d8803115 	stw	r2,196(sp)
   23684:	20800104 	addi	r2,r4,4
   23688:	d9003117 	ldw	r4,196(sp)
   2368c:	203fb916 	blt	r4,zero,23574 <_gp+0xfffe9aa4>
   23690:	d8802d15 	stw	r2,180(sp)
   23694:	bc400007 	ldb	r17,0(r23)
   23698:	003f5406 	br	233ec <_gp+0xfffe991c>
   2369c:	bc400007 	ldb	r17,0(r23)
   236a0:	bac00044 	addi	r11,r23,1
   236a4:	8a873926 	beq	r17,r10,2538c <___svfprintf_internal_r+0x20f0>
   236a8:	88bff404 	addi	r2,r17,-48
   236ac:	0009883a 	mov	r4,zero
   236b0:	30868836 	bltu	r6,r2,250d4 <___svfprintf_internal_r+0x1e38>
   236b4:	5c400007 	ldb	r17,0(r11)
   236b8:	210002a4 	muli	r4,r4,10
   236bc:	5dc00044 	addi	r23,r11,1
   236c0:	b817883a 	mov	r11,r23
   236c4:	2089883a 	add	r4,r4,r2
   236c8:	88bff404 	addi	r2,r17,-48
   236cc:	30bff92e 	bgeu	r6,r2,236b4 <_gp+0xfffe9be4>
   236d0:	2005d716 	blt	r4,zero,24e30 <___svfprintf_internal_r+0x1b94>
   236d4:	d9002915 	stw	r4,164(sp)
   236d8:	003f4506 	br	233f0 <_gp+0xfffe9920>
   236dc:	b809883a 	mov	r4,r23
   236e0:	d8003115 	stw	zero,196(sp)
   236e4:	88bff404 	addi	r2,r17,-48
   236e8:	0017883a 	mov	r11,zero
   236ec:	24400007 	ldb	r17,0(r4)
   236f0:	5ac002a4 	muli	r11,r11,10
   236f4:	bdc00044 	addi	r23,r23,1
   236f8:	b809883a 	mov	r4,r23
   236fc:	12d7883a 	add	r11,r2,r11
   23700:	88bff404 	addi	r2,r17,-48
   23704:	30bff92e 	bgeu	r6,r2,236ec <_gp+0xfffe9c1c>
   23708:	dac03115 	stw	r11,196(sp)
   2370c:	003f3806 	br	233f0 <_gp+0xfffe9920>
   23710:	94802014 	ori	r18,r18,128
   23714:	bc400007 	ldb	r17,0(r23)
   23718:	003f3406 	br	233ec <_gp+0xfffe991c>
   2371c:	18c03fcc 	andi	r3,r3,255
   23720:	1807471e 	bne	r3,zero,25440 <___svfprintf_internal_r+0x21a4>
   23724:	9080020c 	andi	r2,r18,8
   23728:	10047d26 	beq	r2,zero,24920 <___svfprintf_internal_r+0x1684>
   2372c:	d8c02d17 	ldw	r3,180(sp)
   23730:	d9002d17 	ldw	r4,180(sp)
   23734:	d9402d17 	ldw	r5,180(sp)
   23738:	18c00017 	ldw	r3,0(r3)
   2373c:	21000117 	ldw	r4,4(r4)
   23740:	29400204 	addi	r5,r5,8
   23744:	d8c03615 	stw	r3,216(sp)
   23748:	d9003715 	stw	r4,220(sp)
   2374c:	d9402d15 	stw	r5,180(sp)
   23750:	d9003617 	ldw	r4,216(sp)
   23754:	d9403717 	ldw	r5,220(sp)
   23758:	da003e15 	stw	r8,248(sp)
   2375c:	04000044 	movi	r16,1
   23760:	00299d80 	call	299d8 <__fpclassifyd>
   23764:	da003e17 	ldw	r8,248(sp)
   23768:	14044b1e 	bne	r2,r16,24898 <___svfprintf_internal_r+0x15fc>
   2376c:	d9003617 	ldw	r4,216(sp)
   23770:	d9403717 	ldw	r5,220(sp)
   23774:	000d883a 	mov	r6,zero
   23778:	000f883a 	mov	r7,zero
   2377c:	002d4700 	call	2d470 <__ledf2>
   23780:	da003e17 	ldw	r8,248(sp)
   23784:	1005f316 	blt	r2,zero,24f54 <___svfprintf_internal_r+0x1cb8>
   23788:	df002783 	ldbu	fp,158(sp)
   2378c:	008011c4 	movi	r2,71
   23790:	1445590e 	bge	r2,r17,24cf8 <___svfprintf_internal_r+0x1a5c>
   23794:	040000f4 	movhi	r16,3
   23798:	843f8d04 	addi	r16,r16,-460
   2379c:	00c000c4 	movi	r3,3
   237a0:	00bfdfc4 	movi	r2,-129
   237a4:	d8c02a15 	stw	r3,168(sp)
   237a8:	90a4703a 	and	r18,r18,r2
   237ac:	d8c02e15 	stw	r3,184(sp)
   237b0:	d8002915 	stw	zero,164(sp)
   237b4:	d8003215 	stw	zero,200(sp)
   237b8:	00006606 	br	23954 <___svfprintf_internal_r+0x6b8>
   237bc:	94800214 	ori	r18,r18,8
   237c0:	bc400007 	ldb	r17,0(r23)
   237c4:	003f0906 	br	233ec <_gp+0xfffe991c>
   237c8:	18c03fcc 	andi	r3,r3,255
   237cc:	1807181e 	bne	r3,zero,25430 <___svfprintf_internal_r+0x2194>
   237d0:	94800414 	ori	r18,r18,16
   237d4:	9080080c 	andi	r2,r18,32
   237d8:	10039626 	beq	r2,zero,24634 <___svfprintf_internal_r+0x1398>
   237dc:	d9402d17 	ldw	r5,180(sp)
   237e0:	28800117 	ldw	r2,4(r5)
   237e4:	2d000017 	ldw	r20,0(r5)
   237e8:	29400204 	addi	r5,r5,8
   237ec:	d9402d15 	stw	r5,180(sp)
   237f0:	102d883a 	mov	r22,r2
   237f4:	10039816 	blt	r2,zero,24658 <___svfprintf_internal_r+0x13bc>
   237f8:	d9402917 	ldw	r5,164(sp)
   237fc:	df002783 	ldbu	fp,158(sp)
   23800:	2803ab16 	blt	r5,zero,246b0 <___svfprintf_internal_r+0x1414>
   23804:	00ffdfc4 	movi	r3,-129
   23808:	a584b03a 	or	r2,r20,r22
   2380c:	90e4703a 	and	r18,r18,r3
   23810:	10014a26 	beq	r2,zero,23d3c <___svfprintf_internal_r+0xaa0>
   23814:	b0034b26 	beq	r22,zero,24544 <___svfprintf_internal_r+0x12a8>
   23818:	dc402a15 	stw	r17,168(sp)
   2381c:	dc001e04 	addi	r16,sp,120
   23820:	b023883a 	mov	r17,r22
   23824:	402d883a 	mov	r22,r8
   23828:	a009883a 	mov	r4,r20
   2382c:	880b883a 	mov	r5,r17
   23830:	01800284 	movi	r6,10
   23834:	000f883a 	mov	r7,zero
   23838:	002c4140 	call	2c414 <__umoddi3>
   2383c:	10800c04 	addi	r2,r2,48
   23840:	843fffc4 	addi	r16,r16,-1
   23844:	a009883a 	mov	r4,r20
   23848:	880b883a 	mov	r5,r17
   2384c:	80800005 	stb	r2,0(r16)
   23850:	01800284 	movi	r6,10
   23854:	000f883a 	mov	r7,zero
   23858:	002be9c0 	call	2be9c <__udivdi3>
   2385c:	1029883a 	mov	r20,r2
   23860:	10c4b03a 	or	r2,r2,r3
   23864:	1823883a 	mov	r17,r3
   23868:	103fef1e 	bne	r2,zero,23828 <_gp+0xfffe9d58>
   2386c:	d8c02817 	ldw	r3,160(sp)
   23870:	dc402a17 	ldw	r17,168(sp)
   23874:	b011883a 	mov	r8,r22
   23878:	1c07c83a 	sub	r3,r3,r16
   2387c:	d8c02e15 	stw	r3,184(sp)
   23880:	00002e06 	br	2393c <___svfprintf_internal_r+0x6a0>
   23884:	18c03fcc 	andi	r3,r3,255
   23888:	1806e71e 	bne	r3,zero,25428 <___svfprintf_internal_r+0x218c>
   2388c:	94800414 	ori	r18,r18,16
   23890:	9080080c 	andi	r2,r18,32
   23894:	1002d426 	beq	r2,zero,243e8 <___svfprintf_internal_r+0x114c>
   23898:	d9402d17 	ldw	r5,180(sp)
   2389c:	d8c02917 	ldw	r3,164(sp)
   238a0:	d8002785 	stb	zero,158(sp)
   238a4:	28800204 	addi	r2,r5,8
   238a8:	2d000017 	ldw	r20,0(r5)
   238ac:	2d800117 	ldw	r22,4(r5)
   238b0:	18041516 	blt	r3,zero,24908 <___svfprintf_internal_r+0x166c>
   238b4:	013fdfc4 	movi	r4,-129
   238b8:	a586b03a 	or	r3,r20,r22
   238bc:	d8802d15 	stw	r2,180(sp)
   238c0:	9124703a 	and	r18,r18,r4
   238c4:	1802d51e 	bne	r3,zero,2441c <___svfprintf_internal_r+0x1180>
   238c8:	d9402917 	ldw	r5,164(sp)
   238cc:	0039883a 	mov	fp,zero
   238d0:	2806be26 	beq	r5,zero,253cc <___svfprintf_internal_r+0x2130>
   238d4:	0029883a 	mov	r20,zero
   238d8:	002d883a 	mov	r22,zero
   238dc:	dc001e04 	addi	r16,sp,120
   238e0:	a006d0fa 	srli	r3,r20,3
   238e4:	b008977a 	slli	r4,r22,29
   238e8:	b02cd0fa 	srli	r22,r22,3
   238ec:	a50001cc 	andi	r20,r20,7
   238f0:	a0800c04 	addi	r2,r20,48
   238f4:	843fffc4 	addi	r16,r16,-1
   238f8:	20e8b03a 	or	r20,r4,r3
   238fc:	80800005 	stb	r2,0(r16)
   23900:	a586b03a 	or	r3,r20,r22
   23904:	183ff61e 	bne	r3,zero,238e0 <_gp+0xfffe9e10>
   23908:	90c0004c 	andi	r3,r18,1
   2390c:	18013926 	beq	r3,zero,23df4 <___svfprintf_internal_r+0xb58>
   23910:	10803fcc 	andi	r2,r2,255
   23914:	1080201c 	xori	r2,r2,128
   23918:	10bfe004 	addi	r2,r2,-128
   2391c:	00c00c04 	movi	r3,48
   23920:	10c13426 	beq	r2,r3,23df4 <___svfprintf_internal_r+0xb58>
   23924:	80ffffc5 	stb	r3,-1(r16)
   23928:	d8c02817 	ldw	r3,160(sp)
   2392c:	80bfffc4 	addi	r2,r16,-1
   23930:	1021883a 	mov	r16,r2
   23934:	1887c83a 	sub	r3,r3,r2
   23938:	d8c02e15 	stw	r3,184(sp)
   2393c:	d8802e17 	ldw	r2,184(sp)
   23940:	d9002917 	ldw	r4,164(sp)
   23944:	1100010e 	bge	r2,r4,2394c <___svfprintf_internal_r+0x6b0>
   23948:	2005883a 	mov	r2,r4
   2394c:	d8802a15 	stw	r2,168(sp)
   23950:	d8003215 	stw	zero,200(sp)
   23954:	e7003fcc 	andi	fp,fp,255
   23958:	e700201c 	xori	fp,fp,128
   2395c:	e73fe004 	addi	fp,fp,-128
   23960:	e0000326 	beq	fp,zero,23970 <___svfprintf_internal_r+0x6d4>
   23964:	d8c02a17 	ldw	r3,168(sp)
   23968:	18c00044 	addi	r3,r3,1
   2396c:	d8c02a15 	stw	r3,168(sp)
   23970:	90c0008c 	andi	r3,r18,2
   23974:	d8c02b15 	stw	r3,172(sp)
   23978:	18000326 	beq	r3,zero,23988 <___svfprintf_internal_r+0x6ec>
   2397c:	d8c02a17 	ldw	r3,168(sp)
   23980:	18c00084 	addi	r3,r3,2
   23984:	d8c02a15 	stw	r3,168(sp)
   23988:	90c0210c 	andi	r3,r18,132
   2398c:	d8c03015 	stw	r3,192(sp)
   23990:	1801a11e 	bne	r3,zero,24018 <___svfprintf_internal_r+0xd7c>
   23994:	d9003117 	ldw	r4,196(sp)
   23998:	d8c02a17 	ldw	r3,168(sp)
   2399c:	20e9c83a 	sub	r20,r4,r3
   239a0:	05019d0e 	bge	zero,r20,24018 <___svfprintf_internal_r+0xd7c>
   239a4:	02400404 	movi	r9,16
   239a8:	d8c02017 	ldw	r3,128(sp)
   239ac:	d8801f17 	ldw	r2,124(sp)
   239b0:	4d051b0e 	bge	r9,r20,24e20 <___svfprintf_internal_r+0x1b84>
   239b4:	014000f4 	movhi	r5,3
   239b8:	297fa084 	addi	r5,r5,-382
   239bc:	dc403c15 	stw	r17,240(sp)
   239c0:	d9403515 	stw	r5,212(sp)
   239c4:	a023883a 	mov	r17,r20
   239c8:	482d883a 	mov	r22,r9
   239cc:	9029883a 	mov	r20,r18
   239d0:	070001c4 	movi	fp,7
   239d4:	8025883a 	mov	r18,r16
   239d8:	dc002c17 	ldw	r16,176(sp)
   239dc:	00000306 	br	239ec <___svfprintf_internal_r+0x750>
   239e0:	8c7ffc04 	addi	r17,r17,-16
   239e4:	42000204 	addi	r8,r8,8
   239e8:	b440130e 	bge	r22,r17,23a38 <___svfprintf_internal_r+0x79c>
   239ec:	010000f4 	movhi	r4,3
   239f0:	18c00404 	addi	r3,r3,16
   239f4:	10800044 	addi	r2,r2,1
   239f8:	213fa084 	addi	r4,r4,-382
   239fc:	41000015 	stw	r4,0(r8)
   23a00:	45800115 	stw	r22,4(r8)
   23a04:	d8c02015 	stw	r3,128(sp)
   23a08:	d8801f15 	stw	r2,124(sp)
   23a0c:	e0bff40e 	bge	fp,r2,239e0 <_gp+0xfffe9f10>
   23a10:	d9801e04 	addi	r6,sp,120
   23a14:	800b883a 	mov	r5,r16
   23a18:	9809883a 	mov	r4,r19
   23a1c:	0029cb80 	call	29cb8 <__ssprint_r>
   23a20:	103f031e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   23a24:	8c7ffc04 	addi	r17,r17,-16
   23a28:	d8c02017 	ldw	r3,128(sp)
   23a2c:	d8801f17 	ldw	r2,124(sp)
   23a30:	da000404 	addi	r8,sp,16
   23a34:	b47fed16 	blt	r22,r17,239ec <_gp+0xfffe9f1c>
   23a38:	9021883a 	mov	r16,r18
   23a3c:	a025883a 	mov	r18,r20
   23a40:	8829883a 	mov	r20,r17
   23a44:	dc403c17 	ldw	r17,240(sp)
   23a48:	d9403517 	ldw	r5,212(sp)
   23a4c:	a0c7883a 	add	r3,r20,r3
   23a50:	10800044 	addi	r2,r2,1
   23a54:	41400015 	stw	r5,0(r8)
   23a58:	45000115 	stw	r20,4(r8)
   23a5c:	d8c02015 	stw	r3,128(sp)
   23a60:	d8801f15 	stw	r2,124(sp)
   23a64:	010001c4 	movi	r4,7
   23a68:	20829f16 	blt	r4,r2,244e8 <___svfprintf_internal_r+0x124c>
   23a6c:	df002787 	ldb	fp,158(sp)
   23a70:	42000204 	addi	r8,r8,8
   23a74:	e0000c26 	beq	fp,zero,23aa8 <___svfprintf_internal_r+0x80c>
   23a78:	d8801f17 	ldw	r2,124(sp)
   23a7c:	d9002784 	addi	r4,sp,158
   23a80:	18c00044 	addi	r3,r3,1
   23a84:	10800044 	addi	r2,r2,1
   23a88:	41000015 	stw	r4,0(r8)
   23a8c:	01000044 	movi	r4,1
   23a90:	41000115 	stw	r4,4(r8)
   23a94:	d8c02015 	stw	r3,128(sp)
   23a98:	d8801f15 	stw	r2,124(sp)
   23a9c:	010001c4 	movi	r4,7
   23aa0:	20823816 	blt	r4,r2,24384 <___svfprintf_internal_r+0x10e8>
   23aa4:	42000204 	addi	r8,r8,8
   23aa8:	d8802b17 	ldw	r2,172(sp)
   23aac:	10000c26 	beq	r2,zero,23ae0 <___svfprintf_internal_r+0x844>
   23ab0:	d8801f17 	ldw	r2,124(sp)
   23ab4:	d9002704 	addi	r4,sp,156
   23ab8:	18c00084 	addi	r3,r3,2
   23abc:	10800044 	addi	r2,r2,1
   23ac0:	41000015 	stw	r4,0(r8)
   23ac4:	01000084 	movi	r4,2
   23ac8:	41000115 	stw	r4,4(r8)
   23acc:	d8c02015 	stw	r3,128(sp)
   23ad0:	d8801f15 	stw	r2,124(sp)
   23ad4:	010001c4 	movi	r4,7
   23ad8:	20823216 	blt	r4,r2,243a4 <___svfprintf_internal_r+0x1108>
   23adc:	42000204 	addi	r8,r8,8
   23ae0:	d9003017 	ldw	r4,192(sp)
   23ae4:	00802004 	movi	r2,128
   23ae8:	20819726 	beq	r4,r2,24148 <___svfprintf_internal_r+0xeac>
   23aec:	d9402917 	ldw	r5,164(sp)
   23af0:	d8802e17 	ldw	r2,184(sp)
   23af4:	28adc83a 	sub	r22,r5,r2
   23af8:	05802f0e 	bge	zero,r22,23bb8 <___svfprintf_internal_r+0x91c>
   23afc:	07000404 	movi	fp,16
   23b00:	d8801f17 	ldw	r2,124(sp)
   23b04:	e583c00e 	bge	fp,r22,24a08 <___svfprintf_internal_r+0x176c>
   23b08:	014000f4 	movhi	r5,3
   23b0c:	297f9c84 	addi	r5,r5,-398
   23b10:	dc402915 	stw	r17,164(sp)
   23b14:	d9402b15 	stw	r5,172(sp)
   23b18:	b023883a 	mov	r17,r22
   23b1c:	050001c4 	movi	r20,7
   23b20:	902d883a 	mov	r22,r18
   23b24:	8025883a 	mov	r18,r16
   23b28:	dc002c17 	ldw	r16,176(sp)
   23b2c:	00000306 	br	23b3c <___svfprintf_internal_r+0x8a0>
   23b30:	8c7ffc04 	addi	r17,r17,-16
   23b34:	42000204 	addi	r8,r8,8
   23b38:	e440110e 	bge	fp,r17,23b80 <___svfprintf_internal_r+0x8e4>
   23b3c:	18c00404 	addi	r3,r3,16
   23b40:	10800044 	addi	r2,r2,1
   23b44:	45400015 	stw	r21,0(r8)
   23b48:	47000115 	stw	fp,4(r8)
   23b4c:	d8c02015 	stw	r3,128(sp)
   23b50:	d8801f15 	stw	r2,124(sp)
   23b54:	a0bff60e 	bge	r20,r2,23b30 <_gp+0xfffea060>
   23b58:	d9801e04 	addi	r6,sp,120
   23b5c:	800b883a 	mov	r5,r16
   23b60:	9809883a 	mov	r4,r19
   23b64:	0029cb80 	call	29cb8 <__ssprint_r>
   23b68:	103eb11e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   23b6c:	8c7ffc04 	addi	r17,r17,-16
   23b70:	d8c02017 	ldw	r3,128(sp)
   23b74:	d8801f17 	ldw	r2,124(sp)
   23b78:	da000404 	addi	r8,sp,16
   23b7c:	e47fef16 	blt	fp,r17,23b3c <_gp+0xfffea06c>
   23b80:	9021883a 	mov	r16,r18
   23b84:	b025883a 	mov	r18,r22
   23b88:	882d883a 	mov	r22,r17
   23b8c:	dc402917 	ldw	r17,164(sp)
   23b90:	d9002b17 	ldw	r4,172(sp)
   23b94:	1d87883a 	add	r3,r3,r22
   23b98:	10800044 	addi	r2,r2,1
   23b9c:	41000015 	stw	r4,0(r8)
   23ba0:	45800115 	stw	r22,4(r8)
   23ba4:	d8c02015 	stw	r3,128(sp)
   23ba8:	d8801f15 	stw	r2,124(sp)
   23bac:	010001c4 	movi	r4,7
   23bb0:	2081ec16 	blt	r4,r2,24364 <___svfprintf_internal_r+0x10c8>
   23bb4:	42000204 	addi	r8,r8,8
   23bb8:	9080400c 	andi	r2,r18,256
   23bbc:	1001181e 	bne	r2,zero,24020 <___svfprintf_internal_r+0xd84>
   23bc0:	d9402e17 	ldw	r5,184(sp)
   23bc4:	d8801f17 	ldw	r2,124(sp)
   23bc8:	44000015 	stw	r16,0(r8)
   23bcc:	1947883a 	add	r3,r3,r5
   23bd0:	10800044 	addi	r2,r2,1
   23bd4:	41400115 	stw	r5,4(r8)
   23bd8:	d8c02015 	stw	r3,128(sp)
   23bdc:	d8801f15 	stw	r2,124(sp)
   23be0:	010001c4 	movi	r4,7
   23be4:	2081d116 	blt	r4,r2,2432c <___svfprintf_internal_r+0x1090>
   23be8:	42000204 	addi	r8,r8,8
   23bec:	9480010c 	andi	r18,r18,4
   23bf0:	90003226 	beq	r18,zero,23cbc <___svfprintf_internal_r+0xa20>
   23bf4:	d9403117 	ldw	r5,196(sp)
   23bf8:	d8802a17 	ldw	r2,168(sp)
   23bfc:	28a1c83a 	sub	r16,r5,r2
   23c00:	04002e0e 	bge	zero,r16,23cbc <___svfprintf_internal_r+0xa20>
   23c04:	04400404 	movi	r17,16
   23c08:	d8801f17 	ldw	r2,124(sp)
   23c0c:	8c04b90e 	bge	r17,r16,24ef4 <___svfprintf_internal_r+0x1c58>
   23c10:	014000f4 	movhi	r5,3
   23c14:	297fa084 	addi	r5,r5,-382
   23c18:	d9403515 	stw	r5,212(sp)
   23c1c:	048001c4 	movi	r18,7
   23c20:	dd002c17 	ldw	r20,176(sp)
   23c24:	00000306 	br	23c34 <___svfprintf_internal_r+0x998>
   23c28:	843ffc04 	addi	r16,r16,-16
   23c2c:	42000204 	addi	r8,r8,8
   23c30:	8c00130e 	bge	r17,r16,23c80 <___svfprintf_internal_r+0x9e4>
   23c34:	010000f4 	movhi	r4,3
   23c38:	18c00404 	addi	r3,r3,16
   23c3c:	10800044 	addi	r2,r2,1
   23c40:	213fa084 	addi	r4,r4,-382
   23c44:	41000015 	stw	r4,0(r8)
   23c48:	44400115 	stw	r17,4(r8)
   23c4c:	d8c02015 	stw	r3,128(sp)
   23c50:	d8801f15 	stw	r2,124(sp)
   23c54:	90bff40e 	bge	r18,r2,23c28 <_gp+0xfffea158>
   23c58:	d9801e04 	addi	r6,sp,120
   23c5c:	a00b883a 	mov	r5,r20
   23c60:	9809883a 	mov	r4,r19
   23c64:	0029cb80 	call	29cb8 <__ssprint_r>
   23c68:	103e711e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   23c6c:	843ffc04 	addi	r16,r16,-16
   23c70:	d8c02017 	ldw	r3,128(sp)
   23c74:	d8801f17 	ldw	r2,124(sp)
   23c78:	da000404 	addi	r8,sp,16
   23c7c:	8c3fed16 	blt	r17,r16,23c34 <_gp+0xfffea164>
   23c80:	d9403517 	ldw	r5,212(sp)
   23c84:	1c07883a 	add	r3,r3,r16
   23c88:	10800044 	addi	r2,r2,1
   23c8c:	41400015 	stw	r5,0(r8)
   23c90:	44000115 	stw	r16,4(r8)
   23c94:	d8c02015 	stw	r3,128(sp)
   23c98:	d8801f15 	stw	r2,124(sp)
   23c9c:	010001c4 	movi	r4,7
   23ca0:	2080060e 	bge	r4,r2,23cbc <___svfprintf_internal_r+0xa20>
   23ca4:	d9402c17 	ldw	r5,176(sp)
   23ca8:	d9801e04 	addi	r6,sp,120
   23cac:	9809883a 	mov	r4,r19
   23cb0:	0029cb80 	call	29cb8 <__ssprint_r>
   23cb4:	103e5e1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   23cb8:	d8c02017 	ldw	r3,128(sp)
   23cbc:	d8803117 	ldw	r2,196(sp)
   23cc0:	d9002a17 	ldw	r4,168(sp)
   23cc4:	1100010e 	bge	r2,r4,23ccc <___svfprintf_internal_r+0xa30>
   23cc8:	2005883a 	mov	r2,r4
   23ccc:	d9402f17 	ldw	r5,188(sp)
   23cd0:	288b883a 	add	r5,r5,r2
   23cd4:	d9402f15 	stw	r5,188(sp)
   23cd8:	18019c1e 	bne	r3,zero,2434c <___svfprintf_internal_r+0x10b0>
   23cdc:	b8800007 	ldb	r2,0(r23)
   23ce0:	d8001f15 	stw	zero,124(sp)
   23ce4:	da000404 	addi	r8,sp,16
   23ce8:	103d991e 	bne	r2,zero,23350 <_gp+0xfffe9880>
   23cec:	b821883a 	mov	r16,r23
   23cf0:	003daf06 	br	233b0 <_gp+0xfffe98e0>
   23cf4:	18c03fcc 	andi	r3,r3,255
   23cf8:	1805c71e 	bne	r3,zero,25418 <___svfprintf_internal_r+0x217c>
   23cfc:	94800414 	ori	r18,r18,16
   23d00:	9080080c 	andi	r2,r18,32
   23d04:	10020126 	beq	r2,zero,2450c <___svfprintf_internal_r+0x1270>
   23d08:	d8802d17 	ldw	r2,180(sp)
   23d0c:	d9002917 	ldw	r4,164(sp)
   23d10:	d8002785 	stb	zero,158(sp)
   23d14:	10c00204 	addi	r3,r2,8
   23d18:	15000017 	ldw	r20,0(r2)
   23d1c:	15800117 	ldw	r22,4(r2)
   23d20:	20038e16 	blt	r4,zero,24b5c <___svfprintf_internal_r+0x18c0>
   23d24:	013fdfc4 	movi	r4,-129
   23d28:	a584b03a 	or	r2,r20,r22
   23d2c:	d8c02d15 	stw	r3,180(sp)
   23d30:	9124703a 	and	r18,r18,r4
   23d34:	0039883a 	mov	fp,zero
   23d38:	103eb61e 	bne	r2,zero,23814 <_gp+0xfffe9d44>
   23d3c:	d8802917 	ldw	r2,164(sp)
   23d40:	1002c81e 	bne	r2,zero,24864 <___svfprintf_internal_r+0x15c8>
   23d44:	d8002915 	stw	zero,164(sp)
   23d48:	d8002e15 	stw	zero,184(sp)
   23d4c:	dc001e04 	addi	r16,sp,120
   23d50:	003efa06 	br	2393c <_gp+0xfffe9e6c>
   23d54:	18c03fcc 	andi	r3,r3,255
   23d58:	1805ad1e 	bne	r3,zero,25410 <___svfprintf_internal_r+0x2174>
   23d5c:	014000f4 	movhi	r5,3
   23d60:	297f9004 	addi	r5,r5,-448
   23d64:	d9403a15 	stw	r5,232(sp)
   23d68:	9080080c 	andi	r2,r18,32
   23d6c:	10006126 	beq	r2,zero,23ef4 <___svfprintf_internal_r+0xc58>
   23d70:	d8802d17 	ldw	r2,180(sp)
   23d74:	15000017 	ldw	r20,0(r2)
   23d78:	15800117 	ldw	r22,4(r2)
   23d7c:	10800204 	addi	r2,r2,8
   23d80:	d8802d15 	stw	r2,180(sp)
   23d84:	9080004c 	andi	r2,r18,1
   23d88:	10018e26 	beq	r2,zero,243c4 <___svfprintf_internal_r+0x1128>
   23d8c:	a584b03a 	or	r2,r20,r22
   23d90:	10030926 	beq	r2,zero,249b8 <___svfprintf_internal_r+0x171c>
   23d94:	d8c02917 	ldw	r3,164(sp)
   23d98:	00800c04 	movi	r2,48
   23d9c:	d8802705 	stb	r2,156(sp)
   23da0:	dc402745 	stb	r17,157(sp)
   23da4:	d8002785 	stb	zero,158(sp)
   23da8:	90800094 	ori	r2,r18,2
   23dac:	18048716 	blt	r3,zero,24fcc <___svfprintf_internal_r+0x1d30>
   23db0:	00bfdfc4 	movi	r2,-129
   23db4:	90a4703a 	and	r18,r18,r2
   23db8:	94800094 	ori	r18,r18,2
   23dbc:	0039883a 	mov	fp,zero
   23dc0:	d9003a17 	ldw	r4,232(sp)
   23dc4:	dc001e04 	addi	r16,sp,120
   23dc8:	a08003cc 	andi	r2,r20,15
   23dcc:	b006973a 	slli	r3,r22,28
   23dd0:	2085883a 	add	r2,r4,r2
   23dd4:	a028d13a 	srli	r20,r20,4
   23dd8:	10800003 	ldbu	r2,0(r2)
   23ddc:	b02cd13a 	srli	r22,r22,4
   23de0:	843fffc4 	addi	r16,r16,-1
   23de4:	1d28b03a 	or	r20,r3,r20
   23de8:	80800005 	stb	r2,0(r16)
   23dec:	a584b03a 	or	r2,r20,r22
   23df0:	103ff51e 	bne	r2,zero,23dc8 <_gp+0xfffea2f8>
   23df4:	d8c02817 	ldw	r3,160(sp)
   23df8:	1c07c83a 	sub	r3,r3,r16
   23dfc:	d8c02e15 	stw	r3,184(sp)
   23e00:	003ece06 	br	2393c <_gp+0xfffe9e6c>
   23e04:	d8c02d17 	ldw	r3,180(sp)
   23e08:	d9002d17 	ldw	r4,180(sp)
   23e0c:	d8002785 	stb	zero,158(sp)
   23e10:	18800017 	ldw	r2,0(r3)
   23e14:	21000104 	addi	r4,r4,4
   23e18:	00c00044 	movi	r3,1
   23e1c:	d8c02a15 	stw	r3,168(sp)
   23e20:	d8801405 	stb	r2,80(sp)
   23e24:	d9002d15 	stw	r4,180(sp)
   23e28:	d8c02e15 	stw	r3,184(sp)
   23e2c:	d8002915 	stw	zero,164(sp)
   23e30:	d8003215 	stw	zero,200(sp)
   23e34:	dc001404 	addi	r16,sp,80
   23e38:	0039883a 	mov	fp,zero
   23e3c:	003ecc06 	br	23970 <_gp+0xfffe9ea0>
   23e40:	18c03fcc 	andi	r3,r3,255
   23e44:	183e9226 	beq	r3,zero,23890 <_gp+0xfffe9dc0>
   23e48:	d9c02785 	stb	r7,158(sp)
   23e4c:	003e9006 	br	23890 <_gp+0xfffe9dc0>
   23e50:	00c00044 	movi	r3,1
   23e54:	01c00ac4 	movi	r7,43
   23e58:	bc400007 	ldb	r17,0(r23)
   23e5c:	003d6306 	br	233ec <_gp+0xfffe991c>
   23e60:	94800814 	ori	r18,r18,32
   23e64:	bc400007 	ldb	r17,0(r23)
   23e68:	003d6006 	br	233ec <_gp+0xfffe991c>
   23e6c:	d8c02d17 	ldw	r3,180(sp)
   23e70:	d8002785 	stb	zero,158(sp)
   23e74:	1c000017 	ldw	r16,0(r3)
   23e78:	1d000104 	addi	r20,r3,4
   23e7c:	80040f26 	beq	r16,zero,24ebc <___svfprintf_internal_r+0x1c20>
   23e80:	d9002917 	ldw	r4,164(sp)
   23e84:	2003dc16 	blt	r4,zero,24df8 <___svfprintf_internal_r+0x1b5c>
   23e88:	200d883a 	mov	r6,r4
   23e8c:	000b883a 	mov	r5,zero
   23e90:	8009883a 	mov	r4,r16
   23e94:	da003e15 	stw	r8,248(sp)
   23e98:	0027fc80 	call	27fc8 <memchr>
   23e9c:	da003e17 	ldw	r8,248(sp)
   23ea0:	10045826 	beq	r2,zero,25004 <___svfprintf_internal_r+0x1d68>
   23ea4:	1405c83a 	sub	r2,r2,r16
   23ea8:	d8802e15 	stw	r2,184(sp)
   23eac:	1003d816 	blt	r2,zero,24e10 <___svfprintf_internal_r+0x1b74>
   23eb0:	df002783 	ldbu	fp,158(sp)
   23eb4:	d8802a15 	stw	r2,168(sp)
   23eb8:	dd002d15 	stw	r20,180(sp)
   23ebc:	d8002915 	stw	zero,164(sp)
   23ec0:	d8003215 	stw	zero,200(sp)
   23ec4:	003ea306 	br	23954 <_gp+0xfffe9e84>
   23ec8:	18c03fcc 	andi	r3,r3,255
   23ecc:	183f8c26 	beq	r3,zero,23d00 <_gp+0xfffea230>
   23ed0:	d9c02785 	stb	r7,158(sp)
   23ed4:	003f8a06 	br	23d00 <_gp+0xfffea230>
   23ed8:	18c03fcc 	andi	r3,r3,255
   23edc:	1805631e 	bne	r3,zero,2546c <___svfprintf_internal_r+0x21d0>
   23ee0:	014000f4 	movhi	r5,3
   23ee4:	297f9504 	addi	r5,r5,-428
   23ee8:	d9403a15 	stw	r5,232(sp)
   23eec:	9080080c 	andi	r2,r18,32
   23ef0:	103f9f1e 	bne	r2,zero,23d70 <_gp+0xfffea2a0>
   23ef4:	9080040c 	andi	r2,r18,16
   23ef8:	10029c26 	beq	r2,zero,2496c <___svfprintf_internal_r+0x16d0>
   23efc:	d8c02d17 	ldw	r3,180(sp)
   23f00:	002d883a 	mov	r22,zero
   23f04:	1d000017 	ldw	r20,0(r3)
   23f08:	18c00104 	addi	r3,r3,4
   23f0c:	d8c02d15 	stw	r3,180(sp)
   23f10:	003f9c06 	br	23d84 <_gp+0xfffea2b4>
   23f14:	94800054 	ori	r18,r18,1
   23f18:	bc400007 	ldb	r17,0(r23)
   23f1c:	003d3306 	br	233ec <_gp+0xfffe991c>
   23f20:	38803fcc 	andi	r2,r7,255
   23f24:	1080201c 	xori	r2,r2,128
   23f28:	10bfe004 	addi	r2,r2,-128
   23f2c:	1002971e 	bne	r2,zero,2498c <___svfprintf_internal_r+0x16f0>
   23f30:	00c00044 	movi	r3,1
   23f34:	01c00804 	movi	r7,32
   23f38:	bc400007 	ldb	r17,0(r23)
   23f3c:	003d2b06 	br	233ec <_gp+0xfffe991c>
   23f40:	18c03fcc 	andi	r3,r3,255
   23f44:	183e2326 	beq	r3,zero,237d4 <_gp+0xfffe9d04>
   23f48:	d9c02785 	stb	r7,158(sp)
   23f4c:	003e2106 	br	237d4 <_gp+0xfffe9d04>
   23f50:	bc400007 	ldb	r17,0(r23)
   23f54:	8a430426 	beq	r17,r9,24b68 <___svfprintf_internal_r+0x18cc>
   23f58:	94800414 	ori	r18,r18,16
   23f5c:	003d2306 	br	233ec <_gp+0xfffe991c>
   23f60:	18c03fcc 	andi	r3,r3,255
   23f64:	18053f1e 	bne	r3,zero,25464 <___svfprintf_internal_r+0x21c8>
   23f68:	9080080c 	andi	r2,r18,32
   23f6c:	10028926 	beq	r2,zero,24994 <___svfprintf_internal_r+0x16f8>
   23f70:	d9402d17 	ldw	r5,180(sp)
   23f74:	d9002f17 	ldw	r4,188(sp)
   23f78:	28800017 	ldw	r2,0(r5)
   23f7c:	2007d7fa 	srai	r3,r4,31
   23f80:	29400104 	addi	r5,r5,4
   23f84:	d9402d15 	stw	r5,180(sp)
   23f88:	11000015 	stw	r4,0(r2)
   23f8c:	10c00115 	stw	r3,4(r2)
   23f90:	003ced06 	br	23348 <_gp+0xfffe9878>
   23f94:	94801014 	ori	r18,r18,64
   23f98:	bc400007 	ldb	r17,0(r23)
   23f9c:	003d1306 	br	233ec <_gp+0xfffe991c>
   23fa0:	010000f4 	movhi	r4,3
   23fa4:	213f9504 	addi	r4,r4,-428
   23fa8:	0039883a 	mov	fp,zero
   23fac:	d9003a15 	stw	r4,232(sp)
   23fb0:	04401e04 	movi	r17,120
   23fb4:	003f8206 	br	23dc0 <_gp+0xfffea2f0>
   23fb8:	18c03fcc 	andi	r3,r3,255
   23fbc:	1805221e 	bne	r3,zero,25448 <___svfprintf_internal_r+0x21ac>
   23fc0:	883d9526 	beq	r17,zero,23618 <_gp+0xfffe9b48>
   23fc4:	00c00044 	movi	r3,1
   23fc8:	d8c02a15 	stw	r3,168(sp)
   23fcc:	dc401405 	stb	r17,80(sp)
   23fd0:	d8002785 	stb	zero,158(sp)
   23fd4:	003f9406 	br	23e28 <_gp+0xfffea358>
   23fd8:	010000f4 	movhi	r4,3
   23fdc:	213f9504 	addi	r4,r4,-428
   23fe0:	d9003a15 	stw	r4,232(sp)
   23fe4:	d8c02d15 	stw	r3,180(sp)
   23fe8:	1025883a 	mov	r18,r2
   23fec:	04401e04 	movi	r17,120
   23ff0:	a584b03a 	or	r2,r20,r22
   23ff4:	1000fa1e 	bne	r2,zero,243e0 <___svfprintf_internal_r+0x1144>
   23ff8:	0039883a 	mov	fp,zero
   23ffc:	00800084 	movi	r2,2
   24000:	10803fcc 	andi	r2,r2,255
   24004:	00c00044 	movi	r3,1
   24008:	10c21626 	beq	r2,r3,24864 <___svfprintf_internal_r+0x15c8>
   2400c:	00c00084 	movi	r3,2
   24010:	10fe301e 	bne	r2,r3,238d4 <_gp+0xfffe9e04>
   24014:	003d7606 	br	235f0 <_gp+0xfffe9b20>
   24018:	d8c02017 	ldw	r3,128(sp)
   2401c:	003e9506 	br	23a74 <_gp+0xfffe9fa4>
   24020:	00801944 	movi	r2,101
   24024:	14407c0e 	bge	r2,r17,24218 <___svfprintf_internal_r+0xf7c>
   24028:	d9003617 	ldw	r4,216(sp)
   2402c:	d9403717 	ldw	r5,220(sp)
   24030:	000d883a 	mov	r6,zero
   24034:	000f883a 	mov	r7,zero
   24038:	d8c03d15 	stw	r3,244(sp)
   2403c:	da003e15 	stw	r8,248(sp)
   24040:	002d3e80 	call	2d3e8 <__eqdf2>
   24044:	d8c03d17 	ldw	r3,244(sp)
   24048:	da003e17 	ldw	r8,248(sp)
   2404c:	1000f51e 	bne	r2,zero,24424 <___svfprintf_internal_r+0x1188>
   24050:	d8801f17 	ldw	r2,124(sp)
   24054:	010000f4 	movhi	r4,3
   24058:	213f9c04 	addi	r4,r4,-400
   2405c:	18c00044 	addi	r3,r3,1
   24060:	10800044 	addi	r2,r2,1
   24064:	41000015 	stw	r4,0(r8)
   24068:	01000044 	movi	r4,1
   2406c:	41000115 	stw	r4,4(r8)
   24070:	d8c02015 	stw	r3,128(sp)
   24074:	d8801f15 	stw	r2,124(sp)
   24078:	010001c4 	movi	r4,7
   2407c:	20826616 	blt	r4,r2,24a18 <___svfprintf_internal_r+0x177c>
   24080:	42000204 	addi	r8,r8,8
   24084:	d8802617 	ldw	r2,152(sp)
   24088:	d9403317 	ldw	r5,204(sp)
   2408c:	11400216 	blt	r2,r5,24098 <___svfprintf_internal_r+0xdfc>
   24090:	9080004c 	andi	r2,r18,1
   24094:	103ed526 	beq	r2,zero,23bec <_gp+0xfffea11c>
   24098:	d8803817 	ldw	r2,224(sp)
   2409c:	d9003417 	ldw	r4,208(sp)
   240a0:	d9403817 	ldw	r5,224(sp)
   240a4:	1887883a 	add	r3,r3,r2
   240a8:	d8801f17 	ldw	r2,124(sp)
   240ac:	41000015 	stw	r4,0(r8)
   240b0:	41400115 	stw	r5,4(r8)
   240b4:	10800044 	addi	r2,r2,1
   240b8:	d8c02015 	stw	r3,128(sp)
   240bc:	d8801f15 	stw	r2,124(sp)
   240c0:	010001c4 	movi	r4,7
   240c4:	2082af16 	blt	r4,r2,24b84 <___svfprintf_internal_r+0x18e8>
   240c8:	42000204 	addi	r8,r8,8
   240cc:	d8803317 	ldw	r2,204(sp)
   240d0:	143fffc4 	addi	r16,r2,-1
   240d4:	043ec50e 	bge	zero,r16,23bec <_gp+0xfffea11c>
   240d8:	04400404 	movi	r17,16
   240dc:	d8801f17 	ldw	r2,124(sp)
   240e0:	8c00860e 	bge	r17,r16,242fc <___svfprintf_internal_r+0x1060>
   240e4:	014000f4 	movhi	r5,3
   240e8:	297f9c84 	addi	r5,r5,-398
   240ec:	d9402b15 	stw	r5,172(sp)
   240f0:	058001c4 	movi	r22,7
   240f4:	dd002c17 	ldw	r20,176(sp)
   240f8:	00000306 	br	24108 <___svfprintf_internal_r+0xe6c>
   240fc:	42000204 	addi	r8,r8,8
   24100:	843ffc04 	addi	r16,r16,-16
   24104:	8c00800e 	bge	r17,r16,24308 <___svfprintf_internal_r+0x106c>
   24108:	18c00404 	addi	r3,r3,16
   2410c:	10800044 	addi	r2,r2,1
   24110:	45400015 	stw	r21,0(r8)
   24114:	44400115 	stw	r17,4(r8)
   24118:	d8c02015 	stw	r3,128(sp)
   2411c:	d8801f15 	stw	r2,124(sp)
   24120:	b0bff60e 	bge	r22,r2,240fc <_gp+0xfffea62c>
   24124:	d9801e04 	addi	r6,sp,120
   24128:	a00b883a 	mov	r5,r20
   2412c:	9809883a 	mov	r4,r19
   24130:	0029cb80 	call	29cb8 <__ssprint_r>
   24134:	103d3e1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24138:	d8c02017 	ldw	r3,128(sp)
   2413c:	d8801f17 	ldw	r2,124(sp)
   24140:	da000404 	addi	r8,sp,16
   24144:	003fee06 	br	24100 <_gp+0xfffea630>
   24148:	d9403117 	ldw	r5,196(sp)
   2414c:	d8802a17 	ldw	r2,168(sp)
   24150:	28adc83a 	sub	r22,r5,r2
   24154:	05be650e 	bge	zero,r22,23aec <_gp+0xfffea01c>
   24158:	07000404 	movi	fp,16
   2415c:	d8801f17 	ldw	r2,124(sp)
   24160:	e583a20e 	bge	fp,r22,24fec <___svfprintf_internal_r+0x1d50>
   24164:	014000f4 	movhi	r5,3
   24168:	297f9c84 	addi	r5,r5,-398
   2416c:	dc403015 	stw	r17,192(sp)
   24170:	d9402b15 	stw	r5,172(sp)
   24174:	b023883a 	mov	r17,r22
   24178:	050001c4 	movi	r20,7
   2417c:	902d883a 	mov	r22,r18
   24180:	8025883a 	mov	r18,r16
   24184:	dc002c17 	ldw	r16,176(sp)
   24188:	00000306 	br	24198 <___svfprintf_internal_r+0xefc>
   2418c:	8c7ffc04 	addi	r17,r17,-16
   24190:	42000204 	addi	r8,r8,8
   24194:	e440110e 	bge	fp,r17,241dc <___svfprintf_internal_r+0xf40>
   24198:	18c00404 	addi	r3,r3,16
   2419c:	10800044 	addi	r2,r2,1
   241a0:	45400015 	stw	r21,0(r8)
   241a4:	47000115 	stw	fp,4(r8)
   241a8:	d8c02015 	stw	r3,128(sp)
   241ac:	d8801f15 	stw	r2,124(sp)
   241b0:	a0bff60e 	bge	r20,r2,2418c <_gp+0xfffea6bc>
   241b4:	d9801e04 	addi	r6,sp,120
   241b8:	800b883a 	mov	r5,r16
   241bc:	9809883a 	mov	r4,r19
   241c0:	0029cb80 	call	29cb8 <__ssprint_r>
   241c4:	103d1a1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   241c8:	8c7ffc04 	addi	r17,r17,-16
   241cc:	d8c02017 	ldw	r3,128(sp)
   241d0:	d8801f17 	ldw	r2,124(sp)
   241d4:	da000404 	addi	r8,sp,16
   241d8:	e47fef16 	blt	fp,r17,24198 <_gp+0xfffea6c8>
   241dc:	9021883a 	mov	r16,r18
   241e0:	b025883a 	mov	r18,r22
   241e4:	882d883a 	mov	r22,r17
   241e8:	dc403017 	ldw	r17,192(sp)
   241ec:	d9002b17 	ldw	r4,172(sp)
   241f0:	1d87883a 	add	r3,r3,r22
   241f4:	10800044 	addi	r2,r2,1
   241f8:	41000015 	stw	r4,0(r8)
   241fc:	45800115 	stw	r22,4(r8)
   24200:	d8c02015 	stw	r3,128(sp)
   24204:	d8801f15 	stw	r2,124(sp)
   24208:	010001c4 	movi	r4,7
   2420c:	20819a16 	blt	r4,r2,24878 <___svfprintf_internal_r+0x15dc>
   24210:	42000204 	addi	r8,r8,8
   24214:	003e3506 	br	23aec <_gp+0xfffea01c>
   24218:	d9403317 	ldw	r5,204(sp)
   2421c:	00800044 	movi	r2,1
   24220:	18c00044 	addi	r3,r3,1
   24224:	1141710e 	bge	r2,r5,247ec <___svfprintf_internal_r+0x1550>
   24228:	dc401f17 	ldw	r17,124(sp)
   2422c:	00800044 	movi	r2,1
   24230:	40800115 	stw	r2,4(r8)
   24234:	8c400044 	addi	r17,r17,1
   24238:	44000015 	stw	r16,0(r8)
   2423c:	d8c02015 	stw	r3,128(sp)
   24240:	dc401f15 	stw	r17,124(sp)
   24244:	008001c4 	movi	r2,7
   24248:	14417416 	blt	r2,r17,2481c <___svfprintf_internal_r+0x1580>
   2424c:	42000204 	addi	r8,r8,8
   24250:	d8803817 	ldw	r2,224(sp)
   24254:	d9003417 	ldw	r4,208(sp)
   24258:	8c400044 	addi	r17,r17,1
   2425c:	10c7883a 	add	r3,r2,r3
   24260:	40800115 	stw	r2,4(r8)
   24264:	41000015 	stw	r4,0(r8)
   24268:	d8c02015 	stw	r3,128(sp)
   2426c:	dc401f15 	stw	r17,124(sp)
   24270:	008001c4 	movi	r2,7
   24274:	14417216 	blt	r2,r17,24840 <___svfprintf_internal_r+0x15a4>
   24278:	45800204 	addi	r22,r8,8
   2427c:	d9003617 	ldw	r4,216(sp)
   24280:	d9403717 	ldw	r5,220(sp)
   24284:	000d883a 	mov	r6,zero
   24288:	000f883a 	mov	r7,zero
   2428c:	d8c03d15 	stw	r3,244(sp)
   24290:	002d3e80 	call	2d3e8 <__eqdf2>
   24294:	d8c03d17 	ldw	r3,244(sp)
   24298:	1000b326 	beq	r2,zero,24568 <___svfprintf_internal_r+0x12cc>
   2429c:	d9403317 	ldw	r5,204(sp)
   242a0:	84000044 	addi	r16,r16,1
   242a4:	8c400044 	addi	r17,r17,1
   242a8:	28bfffc4 	addi	r2,r5,-1
   242ac:	1887883a 	add	r3,r3,r2
   242b0:	b0800115 	stw	r2,4(r22)
   242b4:	b4000015 	stw	r16,0(r22)
   242b8:	d8c02015 	stw	r3,128(sp)
   242bc:	dc401f15 	stw	r17,124(sp)
   242c0:	008001c4 	movi	r2,7
   242c4:	1440d216 	blt	r2,r17,24610 <___svfprintf_internal_r+0x1374>
   242c8:	b5800204 	addi	r22,r22,8
   242cc:	d9003b17 	ldw	r4,236(sp)
   242d0:	df0022c4 	addi	fp,sp,139
   242d4:	8c400044 	addi	r17,r17,1
   242d8:	20c7883a 	add	r3,r4,r3
   242dc:	b7000015 	stw	fp,0(r22)
   242e0:	b1000115 	stw	r4,4(r22)
   242e4:	d8c02015 	stw	r3,128(sp)
   242e8:	dc401f15 	stw	r17,124(sp)
   242ec:	008001c4 	movi	r2,7
   242f0:	14400e16 	blt	r2,r17,2432c <___svfprintf_internal_r+0x1090>
   242f4:	b2000204 	addi	r8,r22,8
   242f8:	003e3c06 	br	23bec <_gp+0xfffea11c>
   242fc:	010000f4 	movhi	r4,3
   24300:	213f9c84 	addi	r4,r4,-398
   24304:	d9002b15 	stw	r4,172(sp)
   24308:	d9002b17 	ldw	r4,172(sp)
   2430c:	1c07883a 	add	r3,r3,r16
   24310:	44000115 	stw	r16,4(r8)
   24314:	41000015 	stw	r4,0(r8)
   24318:	10800044 	addi	r2,r2,1
   2431c:	d8c02015 	stw	r3,128(sp)
   24320:	d8801f15 	stw	r2,124(sp)
   24324:	010001c4 	movi	r4,7
   24328:	20be2f0e 	bge	r4,r2,23be8 <_gp+0xfffea118>
   2432c:	d9402c17 	ldw	r5,176(sp)
   24330:	d9801e04 	addi	r6,sp,120
   24334:	9809883a 	mov	r4,r19
   24338:	0029cb80 	call	29cb8 <__ssprint_r>
   2433c:	103cbc1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24340:	d8c02017 	ldw	r3,128(sp)
   24344:	da000404 	addi	r8,sp,16
   24348:	003e2806 	br	23bec <_gp+0xfffea11c>
   2434c:	d9402c17 	ldw	r5,176(sp)
   24350:	d9801e04 	addi	r6,sp,120
   24354:	9809883a 	mov	r4,r19
   24358:	0029cb80 	call	29cb8 <__ssprint_r>
   2435c:	103e5f26 	beq	r2,zero,23cdc <_gp+0xfffea20c>
   24360:	003cb306 	br	23630 <_gp+0xfffe9b60>
   24364:	d9402c17 	ldw	r5,176(sp)
   24368:	d9801e04 	addi	r6,sp,120
   2436c:	9809883a 	mov	r4,r19
   24370:	0029cb80 	call	29cb8 <__ssprint_r>
   24374:	103cae1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24378:	d8c02017 	ldw	r3,128(sp)
   2437c:	da000404 	addi	r8,sp,16
   24380:	003e0d06 	br	23bb8 <_gp+0xfffea0e8>
   24384:	d9402c17 	ldw	r5,176(sp)
   24388:	d9801e04 	addi	r6,sp,120
   2438c:	9809883a 	mov	r4,r19
   24390:	0029cb80 	call	29cb8 <__ssprint_r>
   24394:	103ca61e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24398:	d8c02017 	ldw	r3,128(sp)
   2439c:	da000404 	addi	r8,sp,16
   243a0:	003dc106 	br	23aa8 <_gp+0xfffe9fd8>
   243a4:	d9402c17 	ldw	r5,176(sp)
   243a8:	d9801e04 	addi	r6,sp,120
   243ac:	9809883a 	mov	r4,r19
   243b0:	0029cb80 	call	29cb8 <__ssprint_r>
   243b4:	103c9e1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   243b8:	d8c02017 	ldw	r3,128(sp)
   243bc:	da000404 	addi	r8,sp,16
   243c0:	003dc706 	br	23ae0 <_gp+0xfffea010>
   243c4:	d8802917 	ldw	r2,164(sp)
   243c8:	d8002785 	stb	zero,158(sp)
   243cc:	103f0816 	blt	r2,zero,23ff0 <_gp+0xfffea520>
   243d0:	00ffdfc4 	movi	r3,-129
   243d4:	a584b03a 	or	r2,r20,r22
   243d8:	90e4703a 	and	r18,r18,r3
   243dc:	103c8126 	beq	r2,zero,235e4 <_gp+0xfffe9b14>
   243e0:	0039883a 	mov	fp,zero
   243e4:	003e7606 	br	23dc0 <_gp+0xfffea2f0>
   243e8:	9080040c 	andi	r2,r18,16
   243ec:	10013d26 	beq	r2,zero,248e4 <___svfprintf_internal_r+0x1648>
   243f0:	d9002d17 	ldw	r4,180(sp)
   243f4:	d9402917 	ldw	r5,164(sp)
   243f8:	d8002785 	stb	zero,158(sp)
   243fc:	20800104 	addi	r2,r4,4
   24400:	25000017 	ldw	r20,0(r4)
   24404:	002d883a 	mov	r22,zero
   24408:	28013f16 	blt	r5,zero,24908 <___svfprintf_internal_r+0x166c>
   2440c:	00ffdfc4 	movi	r3,-129
   24410:	d8802d15 	stw	r2,180(sp)
   24414:	90e4703a 	and	r18,r18,r3
   24418:	a03d2b26 	beq	r20,zero,238c8 <_gp+0xfffe9df8>
   2441c:	0039883a 	mov	fp,zero
   24420:	003d2e06 	br	238dc <_gp+0xfffe9e0c>
   24424:	dc402617 	ldw	r17,152(sp)
   24428:	0441830e 	bge	zero,r17,24a38 <___svfprintf_internal_r+0x179c>
   2442c:	dc403217 	ldw	r17,200(sp)
   24430:	d8803317 	ldw	r2,204(sp)
   24434:	1440010e 	bge	r2,r17,2443c <___svfprintf_internal_r+0x11a0>
   24438:	1023883a 	mov	r17,r2
   2443c:	04400a0e 	bge	zero,r17,24468 <___svfprintf_internal_r+0x11cc>
   24440:	d8801f17 	ldw	r2,124(sp)
   24444:	1c47883a 	add	r3,r3,r17
   24448:	44000015 	stw	r16,0(r8)
   2444c:	10800044 	addi	r2,r2,1
   24450:	44400115 	stw	r17,4(r8)
   24454:	d8c02015 	stw	r3,128(sp)
   24458:	d8801f15 	stw	r2,124(sp)
   2445c:	010001c4 	movi	r4,7
   24460:	20827516 	blt	r4,r2,24e38 <___svfprintf_internal_r+0x1b9c>
   24464:	42000204 	addi	r8,r8,8
   24468:	88027b16 	blt	r17,zero,24e58 <___svfprintf_internal_r+0x1bbc>
   2446c:	d9003217 	ldw	r4,200(sp)
   24470:	2463c83a 	sub	r17,r4,r17
   24474:	0440990e 	bge	zero,r17,246dc <___svfprintf_internal_r+0x1440>
   24478:	05800404 	movi	r22,16
   2447c:	d8801f17 	ldw	r2,124(sp)
   24480:	b441530e 	bge	r22,r17,249d0 <___svfprintf_internal_r+0x1734>
   24484:	010000f4 	movhi	r4,3
   24488:	213f9c84 	addi	r4,r4,-398
   2448c:	d9002b15 	stw	r4,172(sp)
   24490:	070001c4 	movi	fp,7
   24494:	dd002c17 	ldw	r20,176(sp)
   24498:	00000306 	br	244a8 <___svfprintf_internal_r+0x120c>
   2449c:	42000204 	addi	r8,r8,8
   244a0:	8c7ffc04 	addi	r17,r17,-16
   244a4:	b4414d0e 	bge	r22,r17,249dc <___svfprintf_internal_r+0x1740>
   244a8:	18c00404 	addi	r3,r3,16
   244ac:	10800044 	addi	r2,r2,1
   244b0:	45400015 	stw	r21,0(r8)
   244b4:	45800115 	stw	r22,4(r8)
   244b8:	d8c02015 	stw	r3,128(sp)
   244bc:	d8801f15 	stw	r2,124(sp)
   244c0:	e0bff60e 	bge	fp,r2,2449c <_gp+0xfffea9cc>
   244c4:	d9801e04 	addi	r6,sp,120
   244c8:	a00b883a 	mov	r5,r20
   244cc:	9809883a 	mov	r4,r19
   244d0:	0029cb80 	call	29cb8 <__ssprint_r>
   244d4:	103c561e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   244d8:	d8c02017 	ldw	r3,128(sp)
   244dc:	d8801f17 	ldw	r2,124(sp)
   244e0:	da000404 	addi	r8,sp,16
   244e4:	003fee06 	br	244a0 <_gp+0xfffea9d0>
   244e8:	d9402c17 	ldw	r5,176(sp)
   244ec:	d9801e04 	addi	r6,sp,120
   244f0:	9809883a 	mov	r4,r19
   244f4:	0029cb80 	call	29cb8 <__ssprint_r>
   244f8:	103c4d1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   244fc:	d8c02017 	ldw	r3,128(sp)
   24500:	df002787 	ldb	fp,158(sp)
   24504:	da000404 	addi	r8,sp,16
   24508:	003d5a06 	br	23a74 <_gp+0xfffe9fa4>
   2450c:	9080040c 	andi	r2,r18,16
   24510:	10005c26 	beq	r2,zero,24684 <___svfprintf_internal_r+0x13e8>
   24514:	d9402d17 	ldw	r5,180(sp)
   24518:	d8c02917 	ldw	r3,164(sp)
   2451c:	d8002785 	stb	zero,158(sp)
   24520:	28800104 	addi	r2,r5,4
   24524:	2d000017 	ldw	r20,0(r5)
   24528:	002d883a 	mov	r22,zero
   2452c:	18005e16 	blt	r3,zero,246a8 <___svfprintf_internal_r+0x140c>
   24530:	00ffdfc4 	movi	r3,-129
   24534:	d8802d15 	stw	r2,180(sp)
   24538:	90e4703a 	and	r18,r18,r3
   2453c:	0039883a 	mov	fp,zero
   24540:	a03dfe26 	beq	r20,zero,23d3c <_gp+0xfffea26c>
   24544:	00800244 	movi	r2,9
   24548:	153cb336 	bltu	r2,r20,23818 <_gp+0xfffe9d48>
   2454c:	a5000c04 	addi	r20,r20,48
   24550:	dc001dc4 	addi	r16,sp,119
   24554:	dd001dc5 	stb	r20,119(sp)
   24558:	d8c02817 	ldw	r3,160(sp)
   2455c:	1c07c83a 	sub	r3,r3,r16
   24560:	d8c02e15 	stw	r3,184(sp)
   24564:	003cf506 	br	2393c <_gp+0xfffe9e6c>
   24568:	d8803317 	ldw	r2,204(sp)
   2456c:	143fffc4 	addi	r16,r2,-1
   24570:	043f560e 	bge	zero,r16,242cc <_gp+0xfffea7fc>
   24574:	07000404 	movi	fp,16
   24578:	e403530e 	bge	fp,r16,252c8 <___svfprintf_internal_r+0x202c>
   2457c:	014000f4 	movhi	r5,3
   24580:	297f9c84 	addi	r5,r5,-398
   24584:	d9402b15 	stw	r5,172(sp)
   24588:	01c001c4 	movi	r7,7
   2458c:	dd002c17 	ldw	r20,176(sp)
   24590:	00000306 	br	245a0 <___svfprintf_internal_r+0x1304>
   24594:	843ffc04 	addi	r16,r16,-16
   24598:	b5800204 	addi	r22,r22,8
   2459c:	e400130e 	bge	fp,r16,245ec <___svfprintf_internal_r+0x1350>
   245a0:	18c00404 	addi	r3,r3,16
   245a4:	8c400044 	addi	r17,r17,1
   245a8:	b5400015 	stw	r21,0(r22)
   245ac:	b7000115 	stw	fp,4(r22)
   245b0:	d8c02015 	stw	r3,128(sp)
   245b4:	dc401f15 	stw	r17,124(sp)
   245b8:	3c7ff60e 	bge	r7,r17,24594 <_gp+0xfffeaac4>
   245bc:	d9801e04 	addi	r6,sp,120
   245c0:	a00b883a 	mov	r5,r20
   245c4:	9809883a 	mov	r4,r19
   245c8:	d9c03d15 	stw	r7,244(sp)
   245cc:	0029cb80 	call	29cb8 <__ssprint_r>
   245d0:	d9c03d17 	ldw	r7,244(sp)
   245d4:	103c161e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   245d8:	843ffc04 	addi	r16,r16,-16
   245dc:	d8c02017 	ldw	r3,128(sp)
   245e0:	dc401f17 	ldw	r17,124(sp)
   245e4:	dd800404 	addi	r22,sp,16
   245e8:	e43fed16 	blt	fp,r16,245a0 <_gp+0xfffeaad0>
   245ec:	d8802b17 	ldw	r2,172(sp)
   245f0:	1c07883a 	add	r3,r3,r16
   245f4:	8c400044 	addi	r17,r17,1
   245f8:	b0800015 	stw	r2,0(r22)
   245fc:	b4000115 	stw	r16,4(r22)
   24600:	d8c02015 	stw	r3,128(sp)
   24604:	dc401f15 	stw	r17,124(sp)
   24608:	008001c4 	movi	r2,7
   2460c:	147f2e0e 	bge	r2,r17,242c8 <_gp+0xfffea7f8>
   24610:	d9402c17 	ldw	r5,176(sp)
   24614:	d9801e04 	addi	r6,sp,120
   24618:	9809883a 	mov	r4,r19
   2461c:	0029cb80 	call	29cb8 <__ssprint_r>
   24620:	103c031e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24624:	d8c02017 	ldw	r3,128(sp)
   24628:	dc401f17 	ldw	r17,124(sp)
   2462c:	dd800404 	addi	r22,sp,16
   24630:	003f2606 	br	242cc <_gp+0xfffea7fc>
   24634:	9080040c 	andi	r2,r18,16
   24638:	1000c326 	beq	r2,zero,24948 <___svfprintf_internal_r+0x16ac>
   2463c:	d8802d17 	ldw	r2,180(sp)
   24640:	15000017 	ldw	r20,0(r2)
   24644:	10800104 	addi	r2,r2,4
   24648:	d8802d15 	stw	r2,180(sp)
   2464c:	a02dd7fa 	srai	r22,r20,31
   24650:	b005883a 	mov	r2,r22
   24654:	103c680e 	bge	r2,zero,237f8 <_gp+0xfffe9d28>
   24658:	0529c83a 	sub	r20,zero,r20
   2465c:	a004c03a 	cmpne	r2,r20,zero
   24660:	05adc83a 	sub	r22,zero,r22
   24664:	b0adc83a 	sub	r22,r22,r2
   24668:	d8802917 	ldw	r2,164(sp)
   2466c:	07000b44 	movi	fp,45
   24670:	df002785 	stb	fp,158(sp)
   24674:	10022e16 	blt	r2,zero,24f30 <___svfprintf_internal_r+0x1c94>
   24678:	00bfdfc4 	movi	r2,-129
   2467c:	90a4703a 	and	r18,r18,r2
   24680:	003c6406 	br	23814 <_gp+0xfffe9d44>
   24684:	9080100c 	andi	r2,r18,64
   24688:	d8002785 	stb	zero,158(sp)
   2468c:	10012526 	beq	r2,zero,24b24 <___svfprintf_internal_r+0x1888>
   24690:	d9002d17 	ldw	r4,180(sp)
   24694:	d9402917 	ldw	r5,164(sp)
   24698:	002d883a 	mov	r22,zero
   2469c:	20800104 	addi	r2,r4,4
   246a0:	2500000b 	ldhu	r20,0(r4)
   246a4:	283fa20e 	bge	r5,zero,24530 <_gp+0xfffeaa60>
   246a8:	d8802d15 	stw	r2,180(sp)
   246ac:	0039883a 	mov	fp,zero
   246b0:	a584b03a 	or	r2,r20,r22
   246b4:	103c571e 	bne	r2,zero,23814 <_gp+0xfffe9d44>
   246b8:	00800044 	movi	r2,1
   246bc:	003e5006 	br	24000 <_gp+0xfffea530>
   246c0:	d9402c17 	ldw	r5,176(sp)
   246c4:	d9801e04 	addi	r6,sp,120
   246c8:	9809883a 	mov	r4,r19
   246cc:	0029cb80 	call	29cb8 <__ssprint_r>
   246d0:	103bd71e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   246d4:	d8c02017 	ldw	r3,128(sp)
   246d8:	da000404 	addi	r8,sp,16
   246dc:	d9003217 	ldw	r4,200(sp)
   246e0:	d8802617 	ldw	r2,152(sp)
   246e4:	d9403317 	ldw	r5,204(sp)
   246e8:	8123883a 	add	r17,r16,r4
   246ec:	11400216 	blt	r2,r5,246f8 <___svfprintf_internal_r+0x145c>
   246f0:	9100004c 	andi	r4,r18,1
   246f4:	20000d26 	beq	r4,zero,2472c <___svfprintf_internal_r+0x1490>
   246f8:	d9003817 	ldw	r4,224(sp)
   246fc:	d9403417 	ldw	r5,208(sp)
   24700:	1907883a 	add	r3,r3,r4
   24704:	d9001f17 	ldw	r4,124(sp)
   24708:	41400015 	stw	r5,0(r8)
   2470c:	d9403817 	ldw	r5,224(sp)
   24710:	21000044 	addi	r4,r4,1
   24714:	d8c02015 	stw	r3,128(sp)
   24718:	41400115 	stw	r5,4(r8)
   2471c:	d9001f15 	stw	r4,124(sp)
   24720:	014001c4 	movi	r5,7
   24724:	2901dc16 	blt	r5,r4,24e98 <___svfprintf_internal_r+0x1bfc>
   24728:	42000204 	addi	r8,r8,8
   2472c:	d9003317 	ldw	r4,204(sp)
   24730:	8121883a 	add	r16,r16,r4
   24734:	2085c83a 	sub	r2,r4,r2
   24738:	8461c83a 	sub	r16,r16,r17
   2473c:	1400010e 	bge	r2,r16,24744 <___svfprintf_internal_r+0x14a8>
   24740:	1021883a 	mov	r16,r2
   24744:	04000a0e 	bge	zero,r16,24770 <___svfprintf_internal_r+0x14d4>
   24748:	d9001f17 	ldw	r4,124(sp)
   2474c:	1c07883a 	add	r3,r3,r16
   24750:	44400015 	stw	r17,0(r8)
   24754:	21000044 	addi	r4,r4,1
   24758:	44000115 	stw	r16,4(r8)
   2475c:	d8c02015 	stw	r3,128(sp)
   24760:	d9001f15 	stw	r4,124(sp)
   24764:	014001c4 	movi	r5,7
   24768:	2901e616 	blt	r5,r4,24f04 <___svfprintf_internal_r+0x1c68>
   2476c:	42000204 	addi	r8,r8,8
   24770:	8001f616 	blt	r16,zero,24f4c <___svfprintf_internal_r+0x1cb0>
   24774:	1421c83a 	sub	r16,r2,r16
   24778:	043d1c0e 	bge	zero,r16,23bec <_gp+0xfffea11c>
   2477c:	04400404 	movi	r17,16
   24780:	d8801f17 	ldw	r2,124(sp)
   24784:	8c3edd0e 	bge	r17,r16,242fc <_gp+0xfffea82c>
   24788:	014000f4 	movhi	r5,3
   2478c:	297f9c84 	addi	r5,r5,-398
   24790:	d9402b15 	stw	r5,172(sp)
   24794:	058001c4 	movi	r22,7
   24798:	dd002c17 	ldw	r20,176(sp)
   2479c:	00000306 	br	247ac <___svfprintf_internal_r+0x1510>
   247a0:	42000204 	addi	r8,r8,8
   247a4:	843ffc04 	addi	r16,r16,-16
   247a8:	8c3ed70e 	bge	r17,r16,24308 <_gp+0xfffea838>
   247ac:	18c00404 	addi	r3,r3,16
   247b0:	10800044 	addi	r2,r2,1
   247b4:	45400015 	stw	r21,0(r8)
   247b8:	44400115 	stw	r17,4(r8)
   247bc:	d8c02015 	stw	r3,128(sp)
   247c0:	d8801f15 	stw	r2,124(sp)
   247c4:	b0bff60e 	bge	r22,r2,247a0 <_gp+0xfffeacd0>
   247c8:	d9801e04 	addi	r6,sp,120
   247cc:	a00b883a 	mov	r5,r20
   247d0:	9809883a 	mov	r4,r19
   247d4:	0029cb80 	call	29cb8 <__ssprint_r>
   247d8:	103b951e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   247dc:	d8c02017 	ldw	r3,128(sp)
   247e0:	d8801f17 	ldw	r2,124(sp)
   247e4:	da000404 	addi	r8,sp,16
   247e8:	003fee06 	br	247a4 <_gp+0xfffeacd4>
   247ec:	9088703a 	and	r4,r18,r2
   247f0:	203e8d1e 	bne	r4,zero,24228 <_gp+0xfffea758>
   247f4:	dc401f17 	ldw	r17,124(sp)
   247f8:	40800115 	stw	r2,4(r8)
   247fc:	44000015 	stw	r16,0(r8)
   24800:	8c400044 	addi	r17,r17,1
   24804:	d8c02015 	stw	r3,128(sp)
   24808:	dc401f15 	stw	r17,124(sp)
   2480c:	008001c4 	movi	r2,7
   24810:	147f7f16 	blt	r2,r17,24610 <_gp+0xfffeab40>
   24814:	45800204 	addi	r22,r8,8
   24818:	003eac06 	br	242cc <_gp+0xfffea7fc>
   2481c:	d9402c17 	ldw	r5,176(sp)
   24820:	d9801e04 	addi	r6,sp,120
   24824:	9809883a 	mov	r4,r19
   24828:	0029cb80 	call	29cb8 <__ssprint_r>
   2482c:	103b801e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24830:	d8c02017 	ldw	r3,128(sp)
   24834:	dc401f17 	ldw	r17,124(sp)
   24838:	da000404 	addi	r8,sp,16
   2483c:	003e8406 	br	24250 <_gp+0xfffea780>
   24840:	d9402c17 	ldw	r5,176(sp)
   24844:	d9801e04 	addi	r6,sp,120
   24848:	9809883a 	mov	r4,r19
   2484c:	0029cb80 	call	29cb8 <__ssprint_r>
   24850:	103b771e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24854:	d8c02017 	ldw	r3,128(sp)
   24858:	dc401f17 	ldw	r17,124(sp)
   2485c:	dd800404 	addi	r22,sp,16
   24860:	003e8606 	br	2427c <_gp+0xfffea7ac>
   24864:	0029883a 	mov	r20,zero
   24868:	a5000c04 	addi	r20,r20,48
   2486c:	dc001dc4 	addi	r16,sp,119
   24870:	dd001dc5 	stb	r20,119(sp)
   24874:	003f3806 	br	24558 <_gp+0xfffeaa88>
   24878:	d9402c17 	ldw	r5,176(sp)
   2487c:	d9801e04 	addi	r6,sp,120
   24880:	9809883a 	mov	r4,r19
   24884:	0029cb80 	call	29cb8 <__ssprint_r>
   24888:	103b691e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   2488c:	d8c02017 	ldw	r3,128(sp)
   24890:	da000404 	addi	r8,sp,16
   24894:	003c9506 	br	23aec <_gp+0xfffea01c>
   24898:	d9003617 	ldw	r4,216(sp)
   2489c:	d9403717 	ldw	r5,220(sp)
   248a0:	da003e15 	stw	r8,248(sp)
   248a4:	00299d80 	call	299d8 <__fpclassifyd>
   248a8:	da003e17 	ldw	r8,248(sp)
   248ac:	1000bd1e 	bne	r2,zero,24ba4 <___svfprintf_internal_r+0x1908>
   248b0:	008011c4 	movi	r2,71
   248b4:	14411e0e 	bge	r2,r17,24d30 <___svfprintf_internal_r+0x1a94>
   248b8:	040000f4 	movhi	r16,3
   248bc:	843f8f04 	addi	r16,r16,-452
   248c0:	00c000c4 	movi	r3,3
   248c4:	00bfdfc4 	movi	r2,-129
   248c8:	d8c02a15 	stw	r3,168(sp)
   248cc:	90a4703a 	and	r18,r18,r2
   248d0:	df002783 	ldbu	fp,158(sp)
   248d4:	d8c02e15 	stw	r3,184(sp)
   248d8:	d8002915 	stw	zero,164(sp)
   248dc:	d8003215 	stw	zero,200(sp)
   248e0:	003c1c06 	br	23954 <_gp+0xfffe9e84>
   248e4:	9080100c 	andi	r2,r18,64
   248e8:	d8002785 	stb	zero,158(sp)
   248ec:	10009426 	beq	r2,zero,24b40 <___svfprintf_internal_r+0x18a4>
   248f0:	d8c02d17 	ldw	r3,180(sp)
   248f4:	d9002917 	ldw	r4,164(sp)
   248f8:	002d883a 	mov	r22,zero
   248fc:	18800104 	addi	r2,r3,4
   24900:	1d00000b 	ldhu	r20,0(r3)
   24904:	203ec10e 	bge	r4,zero,2440c <_gp+0xfffea93c>
   24908:	a586b03a 	or	r3,r20,r22
   2490c:	d8802d15 	stw	r2,180(sp)
   24910:	183ec21e 	bne	r3,zero,2441c <_gp+0xfffea94c>
   24914:	0039883a 	mov	fp,zero
   24918:	0005883a 	mov	r2,zero
   2491c:	003db806 	br	24000 <_gp+0xfffea530>
   24920:	d8802d17 	ldw	r2,180(sp)
   24924:	d8c02d17 	ldw	r3,180(sp)
   24928:	d9002d17 	ldw	r4,180(sp)
   2492c:	10800017 	ldw	r2,0(r2)
   24930:	18c00117 	ldw	r3,4(r3)
   24934:	21000204 	addi	r4,r4,8
   24938:	d8803615 	stw	r2,216(sp)
   2493c:	d8c03715 	stw	r3,220(sp)
   24940:	d9002d15 	stw	r4,180(sp)
   24944:	003b8206 	br	23750 <_gp+0xfffe9c80>
   24948:	9080100c 	andi	r2,r18,64
   2494c:	10010726 	beq	r2,zero,24d6c <___svfprintf_internal_r+0x1ad0>
   24950:	d8c02d17 	ldw	r3,180(sp)
   24954:	1d00000f 	ldh	r20,0(r3)
   24958:	18c00104 	addi	r3,r3,4
   2495c:	d8c02d15 	stw	r3,180(sp)
   24960:	a02dd7fa 	srai	r22,r20,31
   24964:	b005883a 	mov	r2,r22
   24968:	003ba206 	br	237f4 <_gp+0xfffe9d24>
   2496c:	9080100c 	andi	r2,r18,64
   24970:	10010526 	beq	r2,zero,24d88 <___svfprintf_internal_r+0x1aec>
   24974:	d9002d17 	ldw	r4,180(sp)
   24978:	002d883a 	mov	r22,zero
   2497c:	2500000b 	ldhu	r20,0(r4)
   24980:	21000104 	addi	r4,r4,4
   24984:	d9002d15 	stw	r4,180(sp)
   24988:	003cfe06 	br	23d84 <_gp+0xfffea2b4>
   2498c:	bc400007 	ldb	r17,0(r23)
   24990:	003a9606 	br	233ec <_gp+0xfffe991c>
   24994:	9080040c 	andi	r2,r18,16
   24998:	10010126 	beq	r2,zero,24da0 <___svfprintf_internal_r+0x1b04>
   2499c:	d9402d17 	ldw	r5,180(sp)
   249a0:	d8c02f17 	ldw	r3,188(sp)
   249a4:	28800017 	ldw	r2,0(r5)
   249a8:	29400104 	addi	r5,r5,4
   249ac:	d9402d15 	stw	r5,180(sp)
   249b0:	10c00015 	stw	r3,0(r2)
   249b4:	003a6406 	br	23348 <_gp+0xfffe9878>
   249b8:	d9002917 	ldw	r4,164(sp)
   249bc:	d8002785 	stb	zero,158(sp)
   249c0:	203d8d16 	blt	r4,zero,23ff8 <_gp+0xfffea528>
   249c4:	00bfdfc4 	movi	r2,-129
   249c8:	90a4703a 	and	r18,r18,r2
   249cc:	003b0506 	br	235e4 <_gp+0xfffe9b14>
   249d0:	014000f4 	movhi	r5,3
   249d4:	297f9c84 	addi	r5,r5,-398
   249d8:	d9402b15 	stw	r5,172(sp)
   249dc:	d9402b17 	ldw	r5,172(sp)
   249e0:	1c47883a 	add	r3,r3,r17
   249e4:	10800044 	addi	r2,r2,1
   249e8:	41400015 	stw	r5,0(r8)
   249ec:	44400115 	stw	r17,4(r8)
   249f0:	d8c02015 	stw	r3,128(sp)
   249f4:	d8801f15 	stw	r2,124(sp)
   249f8:	010001c4 	movi	r4,7
   249fc:	20bf3016 	blt	r4,r2,246c0 <_gp+0xfffeabf0>
   24a00:	42000204 	addi	r8,r8,8
   24a04:	003f3506 	br	246dc <_gp+0xfffeac0c>
   24a08:	010000f4 	movhi	r4,3
   24a0c:	213f9c84 	addi	r4,r4,-398
   24a10:	d9002b15 	stw	r4,172(sp)
   24a14:	003c5e06 	br	23b90 <_gp+0xfffea0c0>
   24a18:	d9402c17 	ldw	r5,176(sp)
   24a1c:	d9801e04 	addi	r6,sp,120
   24a20:	9809883a 	mov	r4,r19
   24a24:	0029cb80 	call	29cb8 <__ssprint_r>
   24a28:	103b011e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24a2c:	d8c02017 	ldw	r3,128(sp)
   24a30:	da000404 	addi	r8,sp,16
   24a34:	003d9306 	br	24084 <_gp+0xfffea5b4>
   24a38:	d8801f17 	ldw	r2,124(sp)
   24a3c:	014000f4 	movhi	r5,3
   24a40:	01000044 	movi	r4,1
   24a44:	18c00044 	addi	r3,r3,1
   24a48:	10800044 	addi	r2,r2,1
   24a4c:	297f9c04 	addi	r5,r5,-400
   24a50:	41000115 	stw	r4,4(r8)
   24a54:	41400015 	stw	r5,0(r8)
   24a58:	d8c02015 	stw	r3,128(sp)
   24a5c:	d8801f15 	stw	r2,124(sp)
   24a60:	010001c4 	movi	r4,7
   24a64:	2080b516 	blt	r4,r2,24d3c <___svfprintf_internal_r+0x1aa0>
   24a68:	42000204 	addi	r8,r8,8
   24a6c:	8800041e 	bne	r17,zero,24a80 <___svfprintf_internal_r+0x17e4>
   24a70:	d8803317 	ldw	r2,204(sp)
   24a74:	1000021e 	bne	r2,zero,24a80 <___svfprintf_internal_r+0x17e4>
   24a78:	9080004c 	andi	r2,r18,1
   24a7c:	103c5b26 	beq	r2,zero,23bec <_gp+0xfffea11c>
   24a80:	d9003817 	ldw	r4,224(sp)
   24a84:	d8801f17 	ldw	r2,124(sp)
   24a88:	d9403417 	ldw	r5,208(sp)
   24a8c:	20c7883a 	add	r3,r4,r3
   24a90:	10800044 	addi	r2,r2,1
   24a94:	41000115 	stw	r4,4(r8)
   24a98:	41400015 	stw	r5,0(r8)
   24a9c:	d8c02015 	stw	r3,128(sp)
   24aa0:	d8801f15 	stw	r2,124(sp)
   24aa4:	010001c4 	movi	r4,7
   24aa8:	20818016 	blt	r4,r2,250ac <___svfprintf_internal_r+0x1e10>
   24aac:	42000204 	addi	r8,r8,8
   24ab0:	0463c83a 	sub	r17,zero,r17
   24ab4:	0440cb0e 	bge	zero,r17,24de4 <___svfprintf_internal_r+0x1b48>
   24ab8:	05800404 	movi	r22,16
   24abc:	b440e80e 	bge	r22,r17,24e60 <___svfprintf_internal_r+0x1bc4>
   24ac0:	014000f4 	movhi	r5,3
   24ac4:	297f9c84 	addi	r5,r5,-398
   24ac8:	d9402b15 	stw	r5,172(sp)
   24acc:	070001c4 	movi	fp,7
   24ad0:	dd002c17 	ldw	r20,176(sp)
   24ad4:	00000306 	br	24ae4 <___svfprintf_internal_r+0x1848>
   24ad8:	42000204 	addi	r8,r8,8
   24adc:	8c7ffc04 	addi	r17,r17,-16
   24ae0:	b440e20e 	bge	r22,r17,24e6c <___svfprintf_internal_r+0x1bd0>
   24ae4:	18c00404 	addi	r3,r3,16
   24ae8:	10800044 	addi	r2,r2,1
   24aec:	45400015 	stw	r21,0(r8)
   24af0:	45800115 	stw	r22,4(r8)
   24af4:	d8c02015 	stw	r3,128(sp)
   24af8:	d8801f15 	stw	r2,124(sp)
   24afc:	e0bff60e 	bge	fp,r2,24ad8 <_gp+0xfffeb008>
   24b00:	d9801e04 	addi	r6,sp,120
   24b04:	a00b883a 	mov	r5,r20
   24b08:	9809883a 	mov	r4,r19
   24b0c:	0029cb80 	call	29cb8 <__ssprint_r>
   24b10:	103ac71e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24b14:	d8c02017 	ldw	r3,128(sp)
   24b18:	d8801f17 	ldw	r2,124(sp)
   24b1c:	da000404 	addi	r8,sp,16
   24b20:	003fee06 	br	24adc <_gp+0xfffeb00c>
   24b24:	d8c02d17 	ldw	r3,180(sp)
   24b28:	d9002917 	ldw	r4,164(sp)
   24b2c:	002d883a 	mov	r22,zero
   24b30:	18800104 	addi	r2,r3,4
   24b34:	1d000017 	ldw	r20,0(r3)
   24b38:	203e7d0e 	bge	r4,zero,24530 <_gp+0xfffeaa60>
   24b3c:	003eda06 	br	246a8 <_gp+0xfffeabd8>
   24b40:	d9402d17 	ldw	r5,180(sp)
   24b44:	d8c02917 	ldw	r3,164(sp)
   24b48:	002d883a 	mov	r22,zero
   24b4c:	28800104 	addi	r2,r5,4
   24b50:	2d000017 	ldw	r20,0(r5)
   24b54:	183e2d0e 	bge	r3,zero,2440c <_gp+0xfffea93c>
   24b58:	003f6b06 	br	24908 <_gp+0xfffeae38>
   24b5c:	d8c02d15 	stw	r3,180(sp)
   24b60:	0039883a 	mov	fp,zero
   24b64:	003ed206 	br	246b0 <_gp+0xfffeabe0>
   24b68:	bc400043 	ldbu	r17,1(r23)
   24b6c:	94800814 	ori	r18,r18,32
   24b70:	bdc00044 	addi	r23,r23,1
   24b74:	8c403fcc 	andi	r17,r17,255
   24b78:	8c40201c 	xori	r17,r17,128
   24b7c:	8c7fe004 	addi	r17,r17,-128
   24b80:	003a1a06 	br	233ec <_gp+0xfffe991c>
   24b84:	d9402c17 	ldw	r5,176(sp)
   24b88:	d9801e04 	addi	r6,sp,120
   24b8c:	9809883a 	mov	r4,r19
   24b90:	0029cb80 	call	29cb8 <__ssprint_r>
   24b94:	103aa61e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24b98:	d8c02017 	ldw	r3,128(sp)
   24b9c:	da000404 	addi	r8,sp,16
   24ba0:	003d4a06 	br	240cc <_gp+0xfffea5fc>
   24ba4:	d9002917 	ldw	r4,164(sp)
   24ba8:	05bff7c4 	movi	r22,-33
   24bac:	00bfffc4 	movi	r2,-1
   24bb0:	8dac703a 	and	r22,r17,r22
   24bb4:	20806a26 	beq	r4,r2,24d60 <___svfprintf_internal_r+0x1ac4>
   24bb8:	008011c4 	movi	r2,71
   24bbc:	b0813726 	beq	r22,r2,2509c <___svfprintf_internal_r+0x1e00>
   24bc0:	d9003717 	ldw	r4,220(sp)
   24bc4:	90c04014 	ori	r3,r18,256
   24bc8:	d8c02b15 	stw	r3,172(sp)
   24bcc:	20015d16 	blt	r4,zero,25144 <___svfprintf_internal_r+0x1ea8>
   24bd0:	dd003717 	ldw	r20,220(sp)
   24bd4:	d8002a05 	stb	zero,168(sp)
   24bd8:	00801984 	movi	r2,102
   24bdc:	88814026 	beq	r17,r2,250e0 <___svfprintf_internal_r+0x1e44>
   24be0:	00801184 	movi	r2,70
   24be4:	88817126 	beq	r17,r2,251ac <___svfprintf_internal_r+0x1f10>
   24be8:	00801144 	movi	r2,69
   24bec:	b0816226 	beq	r22,r2,25178 <___svfprintf_internal_r+0x1edc>
   24bf0:	d8c02917 	ldw	r3,164(sp)
   24bf4:	d8802104 	addi	r2,sp,132
   24bf8:	d8800315 	stw	r2,12(sp)
   24bfc:	d9403617 	ldw	r5,216(sp)
   24c00:	d8802504 	addi	r2,sp,148
   24c04:	d8800215 	stw	r2,8(sp)
   24c08:	d8802604 	addi	r2,sp,152
   24c0c:	d8c00015 	stw	r3,0(sp)
   24c10:	d8800115 	stw	r2,4(sp)
   24c14:	01c00084 	movi	r7,2
   24c18:	a00d883a 	mov	r6,r20
   24c1c:	9809883a 	mov	r4,r19
   24c20:	d8c03d15 	stw	r3,244(sp)
   24c24:	da003e15 	stw	r8,248(sp)
   24c28:	00256740 	call	25674 <_dtoa_r>
   24c2c:	1021883a 	mov	r16,r2
   24c30:	008019c4 	movi	r2,103
   24c34:	d8c03d17 	ldw	r3,244(sp)
   24c38:	da003e17 	ldw	r8,248(sp)
   24c3c:	8880e726 	beq	r17,r2,24fdc <___svfprintf_internal_r+0x1d40>
   24c40:	008011c4 	movi	r2,71
   24c44:	8880d426 	beq	r17,r2,24f98 <___svfprintf_internal_r+0x1cfc>
   24c48:	80f9883a 	add	fp,r16,r3
   24c4c:	d9003617 	ldw	r4,216(sp)
   24c50:	000d883a 	mov	r6,zero
   24c54:	000f883a 	mov	r7,zero
   24c58:	a00b883a 	mov	r5,r20
   24c5c:	da003e15 	stw	r8,248(sp)
   24c60:	002d3e80 	call	2d3e8 <__eqdf2>
   24c64:	da003e17 	ldw	r8,248(sp)
   24c68:	1000e426 	beq	r2,zero,24ffc <___svfprintf_internal_r+0x1d60>
   24c6c:	d8802117 	ldw	r2,132(sp)
   24c70:	1700062e 	bgeu	r2,fp,24c8c <___svfprintf_internal_r+0x19f0>
   24c74:	01000c04 	movi	r4,48
   24c78:	10c00044 	addi	r3,r2,1
   24c7c:	d8c02115 	stw	r3,132(sp)
   24c80:	11000005 	stb	r4,0(r2)
   24c84:	d8802117 	ldw	r2,132(sp)
   24c88:	173ffb36 	bltu	r2,fp,24c78 <_gp+0xfffeb1a8>
   24c8c:	1405c83a 	sub	r2,r2,r16
   24c90:	d8803315 	stw	r2,204(sp)
   24c94:	008011c4 	movi	r2,71
   24c98:	b080c526 	beq	r22,r2,24fb0 <___svfprintf_internal_r+0x1d14>
   24c9c:	00801944 	movi	r2,101
   24ca0:	1441d90e 	bge	r2,r17,25408 <___svfprintf_internal_r+0x216c>
   24ca4:	d8c02617 	ldw	r3,152(sp)
   24ca8:	00801984 	movi	r2,102
   24cac:	d8c03215 	stw	r3,200(sp)
   24cb0:	88813426 	beq	r17,r2,25184 <___svfprintf_internal_r+0x1ee8>
   24cb4:	d8c03217 	ldw	r3,200(sp)
   24cb8:	d9003317 	ldw	r4,204(sp)
   24cbc:	19012516 	blt	r3,r4,25154 <___svfprintf_internal_r+0x1eb8>
   24cc0:	9480004c 	andi	r18,r18,1
   24cc4:	9001841e 	bne	r18,zero,252d8 <___svfprintf_internal_r+0x203c>
   24cc8:	1805883a 	mov	r2,r3
   24ccc:	1801cc16 	blt	r3,zero,25400 <___svfprintf_internal_r+0x2164>
   24cd0:	d8c03217 	ldw	r3,200(sp)
   24cd4:	044019c4 	movi	r17,103
   24cd8:	d8c02e15 	stw	r3,184(sp)
   24cdc:	df002a07 	ldb	fp,168(sp)
   24ce0:	e000a61e 	bne	fp,zero,24f7c <___svfprintf_internal_r+0x1ce0>
   24ce4:	df002783 	ldbu	fp,158(sp)
   24ce8:	d8802a15 	stw	r2,168(sp)
   24cec:	dc802b17 	ldw	r18,172(sp)
   24cf0:	d8002915 	stw	zero,164(sp)
   24cf4:	003b1706 	br	23954 <_gp+0xfffe9e84>
   24cf8:	040000f4 	movhi	r16,3
   24cfc:	843f8c04 	addi	r16,r16,-464
   24d00:	003aa606 	br	2379c <_gp+0xfffe9ccc>
   24d04:	d9003917 	ldw	r4,228(sp)
   24d08:	04001004 	movi	r16,64
   24d0c:	800b883a 	mov	r5,r16
   24d10:	00277bc0 	call	277bc <_malloc_r>
   24d14:	d9002c17 	ldw	r4,176(sp)
   24d18:	20800015 	stw	r2,0(r4)
   24d1c:	20800415 	stw	r2,16(r4)
   24d20:	1001cb26 	beq	r2,zero,25450 <___svfprintf_internal_r+0x21b4>
   24d24:	d8802c17 	ldw	r2,176(sp)
   24d28:	14000515 	stw	r16,20(r2)
   24d2c:	00397606 	br	23308 <_gp+0xfffe9838>
   24d30:	040000f4 	movhi	r16,3
   24d34:	843f8e04 	addi	r16,r16,-456
   24d38:	003ee106 	br	248c0 <_gp+0xfffeadf0>
   24d3c:	d9402c17 	ldw	r5,176(sp)
   24d40:	d9801e04 	addi	r6,sp,120
   24d44:	9809883a 	mov	r4,r19
   24d48:	0029cb80 	call	29cb8 <__ssprint_r>
   24d4c:	103a381e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24d50:	dc402617 	ldw	r17,152(sp)
   24d54:	d8c02017 	ldw	r3,128(sp)
   24d58:	da000404 	addi	r8,sp,16
   24d5c:	003f4306 	br	24a6c <_gp+0xfffeaf9c>
   24d60:	01400184 	movi	r5,6
   24d64:	d9402915 	stw	r5,164(sp)
   24d68:	003f9506 	br	24bc0 <_gp+0xfffeb0f0>
   24d6c:	d9002d17 	ldw	r4,180(sp)
   24d70:	25000017 	ldw	r20,0(r4)
   24d74:	21000104 	addi	r4,r4,4
   24d78:	d9002d15 	stw	r4,180(sp)
   24d7c:	a02dd7fa 	srai	r22,r20,31
   24d80:	b005883a 	mov	r2,r22
   24d84:	003a9b06 	br	237f4 <_gp+0xfffe9d24>
   24d88:	d9402d17 	ldw	r5,180(sp)
   24d8c:	002d883a 	mov	r22,zero
   24d90:	2d000017 	ldw	r20,0(r5)
   24d94:	29400104 	addi	r5,r5,4
   24d98:	d9402d15 	stw	r5,180(sp)
   24d9c:	003bf906 	br	23d84 <_gp+0xfffea2b4>
   24da0:	9480100c 	andi	r18,r18,64
   24da4:	90006e26 	beq	r18,zero,24f60 <___svfprintf_internal_r+0x1cc4>
   24da8:	d9002d17 	ldw	r4,180(sp)
   24dac:	d9402f17 	ldw	r5,188(sp)
   24db0:	20800017 	ldw	r2,0(r4)
   24db4:	21000104 	addi	r4,r4,4
   24db8:	d9002d15 	stw	r4,180(sp)
   24dbc:	1140000d 	sth	r5,0(r2)
   24dc0:	00396106 	br	23348 <_gp+0xfffe9878>
   24dc4:	d9402c17 	ldw	r5,176(sp)
   24dc8:	d9801e04 	addi	r6,sp,120
   24dcc:	9809883a 	mov	r4,r19
   24dd0:	0029cb80 	call	29cb8 <__ssprint_r>
   24dd4:	103a161e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24dd8:	d8c02017 	ldw	r3,128(sp)
   24ddc:	d8801f17 	ldw	r2,124(sp)
   24de0:	da000404 	addi	r8,sp,16
   24de4:	d9403317 	ldw	r5,204(sp)
   24de8:	10800044 	addi	r2,r2,1
   24dec:	44000015 	stw	r16,0(r8)
   24df0:	28c7883a 	add	r3,r5,r3
   24df4:	003b7706 	br	23bd4 <_gp+0xfffea104>
   24df8:	8009883a 	mov	r4,r16
   24dfc:	da003e15 	stw	r8,248(sp)
   24e00:	00232040 	call	23204 <strlen>
   24e04:	d8802e15 	stw	r2,184(sp)
   24e08:	da003e17 	ldw	r8,248(sp)
   24e0c:	103c280e 	bge	r2,zero,23eb0 <_gp+0xfffea3e0>
   24e10:	0005883a 	mov	r2,zero
   24e14:	003c2606 	br	23eb0 <_gp+0xfffea3e0>
   24e18:	00bfffc4 	movi	r2,-1
   24e1c:	003a0906 	br	23644 <_gp+0xfffe9b74>
   24e20:	010000f4 	movhi	r4,3
   24e24:	213fa084 	addi	r4,r4,-382
   24e28:	d9003515 	stw	r4,212(sp)
   24e2c:	003b0606 	br	23a48 <_gp+0xfffe9f78>
   24e30:	013fffc4 	movi	r4,-1
   24e34:	003a2706 	br	236d4 <_gp+0xfffe9c04>
   24e38:	d9402c17 	ldw	r5,176(sp)
   24e3c:	d9801e04 	addi	r6,sp,120
   24e40:	9809883a 	mov	r4,r19
   24e44:	0029cb80 	call	29cb8 <__ssprint_r>
   24e48:	1039f91e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24e4c:	d8c02017 	ldw	r3,128(sp)
   24e50:	da000404 	addi	r8,sp,16
   24e54:	003d8406 	br	24468 <_gp+0xfffea998>
   24e58:	0023883a 	mov	r17,zero
   24e5c:	003d8306 	br	2446c <_gp+0xfffea99c>
   24e60:	010000f4 	movhi	r4,3
   24e64:	213f9c84 	addi	r4,r4,-398
   24e68:	d9002b15 	stw	r4,172(sp)
   24e6c:	d9002b17 	ldw	r4,172(sp)
   24e70:	1c47883a 	add	r3,r3,r17
   24e74:	10800044 	addi	r2,r2,1
   24e78:	41000015 	stw	r4,0(r8)
   24e7c:	44400115 	stw	r17,4(r8)
   24e80:	d8c02015 	stw	r3,128(sp)
   24e84:	d8801f15 	stw	r2,124(sp)
   24e88:	010001c4 	movi	r4,7
   24e8c:	20bfcd16 	blt	r4,r2,24dc4 <_gp+0xfffeb2f4>
   24e90:	42000204 	addi	r8,r8,8
   24e94:	003fd306 	br	24de4 <_gp+0xfffeb314>
   24e98:	d9402c17 	ldw	r5,176(sp)
   24e9c:	d9801e04 	addi	r6,sp,120
   24ea0:	9809883a 	mov	r4,r19
   24ea4:	0029cb80 	call	29cb8 <__ssprint_r>
   24ea8:	1039e11e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24eac:	d8802617 	ldw	r2,152(sp)
   24eb0:	d8c02017 	ldw	r3,128(sp)
   24eb4:	da000404 	addi	r8,sp,16
   24eb8:	003e1c06 	br	2472c <_gp+0xfffeac5c>
   24ebc:	d8802917 	ldw	r2,164(sp)
   24ec0:	00c00184 	movi	r3,6
   24ec4:	1880012e 	bgeu	r3,r2,24ecc <___svfprintf_internal_r+0x1c30>
   24ec8:	1805883a 	mov	r2,r3
   24ecc:	d8802e15 	stw	r2,184(sp)
   24ed0:	1000f316 	blt	r2,zero,252a0 <___svfprintf_internal_r+0x2004>
   24ed4:	040000f4 	movhi	r16,3
   24ed8:	d8802a15 	stw	r2,168(sp)
   24edc:	dd002d15 	stw	r20,180(sp)
   24ee0:	d8002915 	stw	zero,164(sp)
   24ee4:	d8003215 	stw	zero,200(sp)
   24ee8:	843f9a04 	addi	r16,r16,-408
   24eec:	0039883a 	mov	fp,zero
   24ef0:	003a9f06 	br	23970 <_gp+0xfffe9ea0>
   24ef4:	010000f4 	movhi	r4,3
   24ef8:	213fa084 	addi	r4,r4,-382
   24efc:	d9003515 	stw	r4,212(sp)
   24f00:	003b5f06 	br	23c80 <_gp+0xfffea1b0>
   24f04:	d9402c17 	ldw	r5,176(sp)
   24f08:	d9801e04 	addi	r6,sp,120
   24f0c:	9809883a 	mov	r4,r19
   24f10:	0029cb80 	call	29cb8 <__ssprint_r>
   24f14:	1039c61e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   24f18:	d8802617 	ldw	r2,152(sp)
   24f1c:	d9403317 	ldw	r5,204(sp)
   24f20:	d8c02017 	ldw	r3,128(sp)
   24f24:	da000404 	addi	r8,sp,16
   24f28:	2885c83a 	sub	r2,r5,r2
   24f2c:	003e1006 	br	24770 <_gp+0xfffeaca0>
   24f30:	00800044 	movi	r2,1
   24f34:	10803fcc 	andi	r2,r2,255
   24f38:	00c00044 	movi	r3,1
   24f3c:	10fa3526 	beq	r2,r3,23814 <_gp+0xfffe9d44>
   24f40:	00c00084 	movi	r3,2
   24f44:	10fb9e26 	beq	r2,r3,23dc0 <_gp+0xfffea2f0>
   24f48:	003a6406 	br	238dc <_gp+0xfffe9e0c>
   24f4c:	0021883a 	mov	r16,zero
   24f50:	003e0806 	br	24774 <_gp+0xfffeaca4>
   24f54:	07000b44 	movi	fp,45
   24f58:	df002785 	stb	fp,158(sp)
   24f5c:	003a0b06 	br	2378c <_gp+0xfffe9cbc>
   24f60:	d8c02d17 	ldw	r3,180(sp)
   24f64:	d9002f17 	ldw	r4,188(sp)
   24f68:	18800017 	ldw	r2,0(r3)
   24f6c:	18c00104 	addi	r3,r3,4
   24f70:	d8c02d15 	stw	r3,180(sp)
   24f74:	11000015 	stw	r4,0(r2)
   24f78:	0038f306 	br	23348 <_gp+0xfffe9878>
   24f7c:	00c00b44 	movi	r3,45
   24f80:	d8c02785 	stb	r3,158(sp)
   24f84:	d8802a15 	stw	r2,168(sp)
   24f88:	dc802b17 	ldw	r18,172(sp)
   24f8c:	d8002915 	stw	zero,164(sp)
   24f90:	07000b44 	movi	fp,45
   24f94:	003a7306 	br	23964 <_gp+0xfffe9e94>
   24f98:	9080004c 	andi	r2,r18,1
   24f9c:	1000941e 	bne	r2,zero,251f0 <___svfprintf_internal_r+0x1f54>
   24fa0:	d8802117 	ldw	r2,132(sp)
   24fa4:	1405c83a 	sub	r2,r2,r16
   24fa8:	d8803315 	stw	r2,204(sp)
   24fac:	b441161e 	bne	r22,r17,25408 <___svfprintf_internal_r+0x216c>
   24fb0:	dd802617 	ldw	r22,152(sp)
   24fb4:	00bfff44 	movi	r2,-3
   24fb8:	b0801a16 	blt	r22,r2,25024 <___svfprintf_internal_r+0x1d88>
   24fbc:	d9402917 	ldw	r5,164(sp)
   24fc0:	2d801816 	blt	r5,r22,25024 <___svfprintf_internal_r+0x1d88>
   24fc4:	dd803215 	stw	r22,200(sp)
   24fc8:	003f3a06 	br	24cb4 <_gp+0xfffeb1e4>
   24fcc:	1025883a 	mov	r18,r2
   24fd0:	0039883a 	mov	fp,zero
   24fd4:	00800084 	movi	r2,2
   24fd8:	003fd606 	br	24f34 <_gp+0xfffeb464>
   24fdc:	9080004c 	andi	r2,r18,1
   24fe0:	103f191e 	bne	r2,zero,24c48 <_gp+0xfffeb178>
   24fe4:	d8802117 	ldw	r2,132(sp)
   24fe8:	003f2806 	br	24c8c <_gp+0xfffeb1bc>
   24fec:	010000f4 	movhi	r4,3
   24ff0:	213f9c84 	addi	r4,r4,-398
   24ff4:	d9002b15 	stw	r4,172(sp)
   24ff8:	003c7c06 	br	241ec <_gp+0xfffea71c>
   24ffc:	e005883a 	mov	r2,fp
   25000:	003f2206 	br	24c8c <_gp+0xfffeb1bc>
   25004:	d9402917 	ldw	r5,164(sp)
   25008:	df002783 	ldbu	fp,158(sp)
   2500c:	dd002d15 	stw	r20,180(sp)
   25010:	d9402a15 	stw	r5,168(sp)
   25014:	d9402e15 	stw	r5,184(sp)
   25018:	d8002915 	stw	zero,164(sp)
   2501c:	d8003215 	stw	zero,200(sp)
   25020:	003a4c06 	br	23954 <_gp+0xfffe9e84>
   25024:	8c7fff84 	addi	r17,r17,-2
   25028:	b5bfffc4 	addi	r22,r22,-1
   2502c:	dd802615 	stw	r22,152(sp)
   25030:	dc4022c5 	stb	r17,139(sp)
   25034:	b000c316 	blt	r22,zero,25344 <___svfprintf_internal_r+0x20a8>
   25038:	00800ac4 	movi	r2,43
   2503c:	d8802305 	stb	r2,140(sp)
   25040:	00800244 	movi	r2,9
   25044:	15806e16 	blt	r2,r22,25200 <___svfprintf_internal_r+0x1f64>
   25048:	00800c04 	movi	r2,48
   2504c:	b5800c04 	addi	r22,r22,48
   25050:	d8802345 	stb	r2,141(sp)
   25054:	dd802385 	stb	r22,142(sp)
   25058:	d88023c4 	addi	r2,sp,143
   2505c:	df0022c4 	addi	fp,sp,139
   25060:	d8c03317 	ldw	r3,204(sp)
   25064:	1739c83a 	sub	fp,r2,fp
   25068:	d9003317 	ldw	r4,204(sp)
   2506c:	e0c7883a 	add	r3,fp,r3
   25070:	df003b15 	stw	fp,236(sp)
   25074:	d8c02e15 	stw	r3,184(sp)
   25078:	00800044 	movi	r2,1
   2507c:	1100b70e 	bge	r2,r4,2535c <___svfprintf_internal_r+0x20c0>
   25080:	d8c02e17 	ldw	r3,184(sp)
   25084:	18c00044 	addi	r3,r3,1
   25088:	d8c02e15 	stw	r3,184(sp)
   2508c:	1805883a 	mov	r2,r3
   25090:	1800b016 	blt	r3,zero,25354 <___svfprintf_internal_r+0x20b8>
   25094:	d8003215 	stw	zero,200(sp)
   25098:	003f1006 	br	24cdc <_gp+0xfffeb20c>
   2509c:	d8802917 	ldw	r2,164(sp)
   250a0:	103ec71e 	bne	r2,zero,24bc0 <_gp+0xfffeb0f0>
   250a4:	dc002915 	stw	r16,164(sp)
   250a8:	003ec506 	br	24bc0 <_gp+0xfffeb0f0>
   250ac:	d9402c17 	ldw	r5,176(sp)
   250b0:	d9801e04 	addi	r6,sp,120
   250b4:	9809883a 	mov	r4,r19
   250b8:	0029cb80 	call	29cb8 <__ssprint_r>
   250bc:	10395c1e 	bne	r2,zero,23630 <_gp+0xfffe9b60>
   250c0:	dc402617 	ldw	r17,152(sp)
   250c4:	d8c02017 	ldw	r3,128(sp)
   250c8:	d8801f17 	ldw	r2,124(sp)
   250cc:	da000404 	addi	r8,sp,16
   250d0:	003e7706 	br	24ab0 <_gp+0xfffeafe0>
   250d4:	582f883a 	mov	r23,r11
   250d8:	d8002915 	stw	zero,164(sp)
   250dc:	0038c406 	br	233f0 <_gp+0xfffe9920>
   250e0:	d8c02917 	ldw	r3,164(sp)
   250e4:	d8802104 	addi	r2,sp,132
   250e8:	d8800315 	stw	r2,12(sp)
   250ec:	d9403617 	ldw	r5,216(sp)
   250f0:	d8802504 	addi	r2,sp,148
   250f4:	d8800215 	stw	r2,8(sp)
   250f8:	d8802604 	addi	r2,sp,152
   250fc:	d8c00015 	stw	r3,0(sp)
   25100:	9809883a 	mov	r4,r19
   25104:	d8800115 	stw	r2,4(sp)
   25108:	01c000c4 	movi	r7,3
   2510c:	a00d883a 	mov	r6,r20
   25110:	da003e15 	stw	r8,248(sp)
   25114:	00256740 	call	25674 <_dtoa_r>
   25118:	d9002917 	ldw	r4,164(sp)
   2511c:	da003e17 	ldw	r8,248(sp)
   25120:	1021883a 	mov	r16,r2
   25124:	1139883a 	add	fp,r2,r4
   25128:	2007883a 	mov	r3,r4
   2512c:	81000007 	ldb	r4,0(r16)
   25130:	00800c04 	movi	r2,48
   25134:	20806f26 	beq	r4,r2,252f4 <___svfprintf_internal_r+0x2058>
   25138:	d8c02617 	ldw	r3,152(sp)
   2513c:	e0f9883a 	add	fp,fp,r3
   25140:	003ec206 	br	24c4c <_gp+0xfffeb17c>
   25144:	00c00b44 	movi	r3,45
   25148:	2520003c 	xorhi	r20,r4,32768
   2514c:	d8c02a05 	stb	r3,168(sp)
   25150:	003ea106 	br	24bd8 <_gp+0xfffeb108>
   25154:	d8c03217 	ldw	r3,200(sp)
   25158:	00c0890e 	bge	zero,r3,25380 <___svfprintf_internal_r+0x20e4>
   2515c:	00800044 	movi	r2,1
   25160:	d9003317 	ldw	r4,204(sp)
   25164:	1105883a 	add	r2,r2,r4
   25168:	d8802e15 	stw	r2,184(sp)
   2516c:	10005f16 	blt	r2,zero,252ec <___svfprintf_internal_r+0x2050>
   25170:	044019c4 	movi	r17,103
   25174:	003ed906 	br	24cdc <_gp+0xfffeb20c>
   25178:	d9002917 	ldw	r4,164(sp)
   2517c:	20c00044 	addi	r3,r4,1
   25180:	003e9c06 	br	24bf4 <_gp+0xfffeb124>
   25184:	d9002917 	ldw	r4,164(sp)
   25188:	00c0680e 	bge	zero,r3,2532c <___svfprintf_internal_r+0x2090>
   2518c:	2000461e 	bne	r4,zero,252a8 <___svfprintf_internal_r+0x200c>
   25190:	9480004c 	andi	r18,r18,1
   25194:	9000441e 	bne	r18,zero,252a8 <___svfprintf_internal_r+0x200c>
   25198:	1805883a 	mov	r2,r3
   2519c:	1800a016 	blt	r3,zero,25420 <___svfprintf_internal_r+0x2184>
   251a0:	d8c03217 	ldw	r3,200(sp)
   251a4:	d8c02e15 	stw	r3,184(sp)
   251a8:	003ecc06 	br	24cdc <_gp+0xfffeb20c>
   251ac:	d9402917 	ldw	r5,164(sp)
   251b0:	d8802104 	addi	r2,sp,132
   251b4:	d8800315 	stw	r2,12(sp)
   251b8:	d9400015 	stw	r5,0(sp)
   251bc:	d8802504 	addi	r2,sp,148
   251c0:	d9403617 	ldw	r5,216(sp)
   251c4:	d8800215 	stw	r2,8(sp)
   251c8:	d8802604 	addi	r2,sp,152
   251cc:	d8800115 	stw	r2,4(sp)
   251d0:	01c000c4 	movi	r7,3
   251d4:	a00d883a 	mov	r6,r20
   251d8:	9809883a 	mov	r4,r19
   251dc:	da003e15 	stw	r8,248(sp)
   251e0:	00256740 	call	25674 <_dtoa_r>
   251e4:	d8c02917 	ldw	r3,164(sp)
   251e8:	da003e17 	ldw	r8,248(sp)
   251ec:	1021883a 	mov	r16,r2
   251f0:	00801184 	movi	r2,70
   251f4:	80f9883a 	add	fp,r16,r3
   251f8:	88bfcc26 	beq	r17,r2,2512c <_gp+0xfffeb65c>
   251fc:	003e9306 	br	24c4c <_gp+0xfffeb17c>
   25200:	df0022c4 	addi	fp,sp,139
   25204:	dc002915 	stw	r16,164(sp)
   25208:	9829883a 	mov	r20,r19
   2520c:	e021883a 	mov	r16,fp
   25210:	4027883a 	mov	r19,r8
   25214:	b009883a 	mov	r4,r22
   25218:	01400284 	movi	r5,10
   2521c:	002c9d00 	call	2c9d0 <__modsi3>
   25220:	10800c04 	addi	r2,r2,48
   25224:	843fffc4 	addi	r16,r16,-1
   25228:	b009883a 	mov	r4,r22
   2522c:	01400284 	movi	r5,10
   25230:	80800005 	stb	r2,0(r16)
   25234:	002c94c0 	call	2c94c <__divsi3>
   25238:	102d883a 	mov	r22,r2
   2523c:	00800244 	movi	r2,9
   25240:	15bff416 	blt	r2,r22,25214 <_gp+0xfffeb744>
   25244:	9811883a 	mov	r8,r19
   25248:	b0800c04 	addi	r2,r22,48
   2524c:	a027883a 	mov	r19,r20
   25250:	8029883a 	mov	r20,r16
   25254:	a17fffc4 	addi	r5,r20,-1
   25258:	a0bfffc5 	stb	r2,-1(r20)
   2525c:	dc002917 	ldw	r16,164(sp)
   25260:	2f00752e 	bgeu	r5,fp,25438 <___svfprintf_internal_r+0x219c>
   25264:	d9c02384 	addi	r7,sp,142
   25268:	3d0fc83a 	sub	r7,r7,r20
   2526c:	d9002344 	addi	r4,sp,141
   25270:	e1cf883a 	add	r7,fp,r7
   25274:	00000106 	br	2527c <___svfprintf_internal_r+0x1fe0>
   25278:	28800003 	ldbu	r2,0(r5)
   2527c:	20800005 	stb	r2,0(r4)
   25280:	21000044 	addi	r4,r4,1
   25284:	29400044 	addi	r5,r5,1
   25288:	21fffb1e 	bne	r4,r7,25278 <_gp+0xfffeb7a8>
   2528c:	d8802304 	addi	r2,sp,140
   25290:	1505c83a 	sub	r2,r2,r20
   25294:	d8c02344 	addi	r3,sp,141
   25298:	1885883a 	add	r2,r3,r2
   2529c:	003f7006 	br	25060 <_gp+0xfffeb590>
   252a0:	0005883a 	mov	r2,zero
   252a4:	003f0b06 	br	24ed4 <_gp+0xfffeb404>
   252a8:	d9002917 	ldw	r4,164(sp)
   252ac:	d8c03217 	ldw	r3,200(sp)
   252b0:	20800044 	addi	r2,r4,1
   252b4:	1885883a 	add	r2,r3,r2
   252b8:	d8802e15 	stw	r2,184(sp)
   252bc:	103e870e 	bge	r2,zero,24cdc <_gp+0xfffeb20c>
   252c0:	0005883a 	mov	r2,zero
   252c4:	003e8506 	br	24cdc <_gp+0xfffeb20c>
   252c8:	010000f4 	movhi	r4,3
   252cc:	213f9c84 	addi	r4,r4,-398
   252d0:	d9002b15 	stw	r4,172(sp)
   252d4:	003cc506 	br	245ec <_gp+0xfffeab1c>
   252d8:	d8c03217 	ldw	r3,200(sp)
   252dc:	18c00044 	addi	r3,r3,1
   252e0:	d8c02e15 	stw	r3,184(sp)
   252e4:	1805883a 	mov	r2,r3
   252e8:	183fa10e 	bge	r3,zero,25170 <_gp+0xfffeb6a0>
   252ec:	0005883a 	mov	r2,zero
   252f0:	003f9f06 	br	25170 <_gp+0xfffeb6a0>
   252f4:	d9003617 	ldw	r4,216(sp)
   252f8:	000d883a 	mov	r6,zero
   252fc:	000f883a 	mov	r7,zero
   25300:	a00b883a 	mov	r5,r20
   25304:	d8c03d15 	stw	r3,244(sp)
   25308:	da003e15 	stw	r8,248(sp)
   2530c:	002d3e80 	call	2d3e8 <__eqdf2>
   25310:	d8c03d17 	ldw	r3,244(sp)
   25314:	da003e17 	ldw	r8,248(sp)
   25318:	103f8726 	beq	r2,zero,25138 <_gp+0xfffeb668>
   2531c:	00800044 	movi	r2,1
   25320:	10c7c83a 	sub	r3,r2,r3
   25324:	d8c02615 	stw	r3,152(sp)
   25328:	003f8406 	br	2513c <_gp+0xfffeb66c>
   2532c:	20000e1e 	bne	r4,zero,25368 <___svfprintf_internal_r+0x20cc>
   25330:	9480004c 	andi	r18,r18,1
   25334:	90000c1e 	bne	r18,zero,25368 <___svfprintf_internal_r+0x20cc>
   25338:	00800044 	movi	r2,1
   2533c:	d8802e15 	stw	r2,184(sp)
   25340:	003e6606 	br	24cdc <_gp+0xfffeb20c>
   25344:	00800b44 	movi	r2,45
   25348:	05adc83a 	sub	r22,zero,r22
   2534c:	d8802305 	stb	r2,140(sp)
   25350:	003f3b06 	br	25040 <_gp+0xfffeb570>
   25354:	0005883a 	mov	r2,zero
   25358:	003f4e06 	br	25094 <_gp+0xfffeb5c4>
   2535c:	90a4703a 	and	r18,r18,r2
   25360:	903f4a26 	beq	r18,zero,2508c <_gp+0xfffeb5bc>
   25364:	003f4606 	br	25080 <_gp+0xfffeb5b0>
   25368:	d8c02917 	ldw	r3,164(sp)
   2536c:	18c00084 	addi	r3,r3,2
   25370:	d8c02e15 	stw	r3,184(sp)
   25374:	1805883a 	mov	r2,r3
   25378:	183e580e 	bge	r3,zero,24cdc <_gp+0xfffeb20c>
   2537c:	003fd006 	br	252c0 <_gp+0xfffeb7f0>
   25380:	00800084 	movi	r2,2
   25384:	10c5c83a 	sub	r2,r2,r3
   25388:	003f7506 	br	25160 <_gp+0xfffeb690>
   2538c:	d8802d17 	ldw	r2,180(sp)
   25390:	d9002d17 	ldw	r4,180(sp)
   25394:	bc400043 	ldbu	r17,1(r23)
   25398:	10800017 	ldw	r2,0(r2)
   2539c:	582f883a 	mov	r23,r11
   253a0:	d8802915 	stw	r2,164(sp)
   253a4:	20800104 	addi	r2,r4,4
   253a8:	d9002917 	ldw	r4,164(sp)
   253ac:	d8802d15 	stw	r2,180(sp)
   253b0:	203df00e 	bge	r4,zero,24b74 <_gp+0xfffeb0a4>
   253b4:	8c403fcc 	andi	r17,r17,255
   253b8:	00bfffc4 	movi	r2,-1
   253bc:	8c40201c 	xori	r17,r17,128
   253c0:	d8802915 	stw	r2,164(sp)
   253c4:	8c7fe004 	addi	r17,r17,-128
   253c8:	00380806 	br	233ec <_gp+0xfffe991c>
   253cc:	9080004c 	andi	r2,r18,1
   253d0:	0039883a 	mov	fp,zero
   253d4:	10000726 	beq	r2,zero,253f4 <___svfprintf_internal_r+0x2158>
   253d8:	d8c02817 	ldw	r3,160(sp)
   253dc:	dc001dc4 	addi	r16,sp,119
   253e0:	00800c04 	movi	r2,48
   253e4:	1c07c83a 	sub	r3,r3,r16
   253e8:	d8801dc5 	stb	r2,119(sp)
   253ec:	d8c02e15 	stw	r3,184(sp)
   253f0:	00395206 	br	2393c <_gp+0xfffe9e6c>
   253f4:	d8002e15 	stw	zero,184(sp)
   253f8:	dc001e04 	addi	r16,sp,120
   253fc:	00394f06 	br	2393c <_gp+0xfffe9e6c>
   25400:	0005883a 	mov	r2,zero
   25404:	003e3206 	br	24cd0 <_gp+0xfffeb200>
   25408:	dd802617 	ldw	r22,152(sp)
   2540c:	003f0606 	br	25028 <_gp+0xfffeb558>
   25410:	d9c02785 	stb	r7,158(sp)
   25414:	003a5106 	br	23d5c <_gp+0xfffea28c>
   25418:	d9c02785 	stb	r7,158(sp)
   2541c:	003a3706 	br	23cfc <_gp+0xfffea22c>
   25420:	0005883a 	mov	r2,zero
   25424:	003f5e06 	br	251a0 <_gp+0xfffeb6d0>
   25428:	d9c02785 	stb	r7,158(sp)
   2542c:	00391706 	br	2388c <_gp+0xfffe9dbc>
   25430:	d9c02785 	stb	r7,158(sp)
   25434:	0038e606 	br	237d0 <_gp+0xfffe9d00>
   25438:	d8802344 	addi	r2,sp,141
   2543c:	003f0806 	br	25060 <_gp+0xfffeb590>
   25440:	d9c02785 	stb	r7,158(sp)
   25444:	0038b706 	br	23724 <_gp+0xfffe9c54>
   25448:	d9c02785 	stb	r7,158(sp)
   2544c:	003adc06 	br	23fc0 <_gp+0xfffea4f0>
   25450:	d9403917 	ldw	r5,228(sp)
   25454:	00800304 	movi	r2,12
   25458:	28800015 	stw	r2,0(r5)
   2545c:	00bfffc4 	movi	r2,-1
   25460:	00387806 	br	23644 <_gp+0xfffe9b74>
   25464:	d9c02785 	stb	r7,158(sp)
   25468:	003abf06 	br	23f68 <_gp+0xfffea498>
   2546c:	d9c02785 	stb	r7,158(sp)
   25470:	003a9b06 	br	23ee0 <_gp+0xfffea410>

00025474 <quorem>:
   25474:	defff704 	addi	sp,sp,-36
   25478:	dc800215 	stw	r18,8(sp)
   2547c:	20800417 	ldw	r2,16(r4)
   25480:	2c800417 	ldw	r18,16(r5)
   25484:	dfc00815 	stw	ra,32(sp)
   25488:	ddc00715 	stw	r23,28(sp)
   2548c:	dd800615 	stw	r22,24(sp)
   25490:	dd400515 	stw	r21,20(sp)
   25494:	dd000415 	stw	r20,16(sp)
   25498:	dcc00315 	stw	r19,12(sp)
   2549c:	dc400115 	stw	r17,4(sp)
   254a0:	dc000015 	stw	r16,0(sp)
   254a4:	14807116 	blt	r2,r18,2566c <quorem+0x1f8>
   254a8:	94bfffc4 	addi	r18,r18,-1
   254ac:	94ad883a 	add	r22,r18,r18
   254b0:	b5ad883a 	add	r22,r22,r22
   254b4:	2c400504 	addi	r17,r5,20
   254b8:	8da9883a 	add	r20,r17,r22
   254bc:	25400504 	addi	r21,r4,20
   254c0:	282f883a 	mov	r23,r5
   254c4:	adad883a 	add	r22,r21,r22
   254c8:	a1400017 	ldw	r5,0(r20)
   254cc:	2021883a 	mov	r16,r4
   254d0:	b1000017 	ldw	r4,0(r22)
   254d4:	29400044 	addi	r5,r5,1
   254d8:	002ca440 	call	2ca44 <__udivsi3>
   254dc:	1027883a 	mov	r19,r2
   254e0:	10002c26 	beq	r2,zero,25594 <quorem+0x120>
   254e4:	a813883a 	mov	r9,r21
   254e8:	880b883a 	mov	r5,r17
   254ec:	0009883a 	mov	r4,zero
   254f0:	000d883a 	mov	r6,zero
   254f4:	2a000017 	ldw	r8,0(r5)
   254f8:	49c00017 	ldw	r7,0(r9)
   254fc:	29400104 	addi	r5,r5,4
   25500:	40bfffcc 	andi	r2,r8,65535
   25504:	14c5383a 	mul	r2,r2,r19
   25508:	4010d43a 	srli	r8,r8,16
   2550c:	38ffffcc 	andi	r3,r7,65535
   25510:	1105883a 	add	r2,r2,r4
   25514:	1008d43a 	srli	r4,r2,16
   25518:	44d1383a 	mul	r8,r8,r19
   2551c:	198d883a 	add	r6,r3,r6
   25520:	10ffffcc 	andi	r3,r2,65535
   25524:	30c7c83a 	sub	r3,r6,r3
   25528:	380ed43a 	srli	r7,r7,16
   2552c:	4105883a 	add	r2,r8,r4
   25530:	180dd43a 	srai	r6,r3,16
   25534:	113fffcc 	andi	r4,r2,65535
   25538:	390fc83a 	sub	r7,r7,r4
   2553c:	398d883a 	add	r6,r7,r6
   25540:	300e943a 	slli	r7,r6,16
   25544:	18ffffcc 	andi	r3,r3,65535
   25548:	1008d43a 	srli	r4,r2,16
   2554c:	38ceb03a 	or	r7,r7,r3
   25550:	49c00015 	stw	r7,0(r9)
   25554:	300dd43a 	srai	r6,r6,16
   25558:	4a400104 	addi	r9,r9,4
   2555c:	a17fe52e 	bgeu	r20,r5,254f4 <_gp+0xfffeba24>
   25560:	b0800017 	ldw	r2,0(r22)
   25564:	10000b1e 	bne	r2,zero,25594 <quorem+0x120>
   25568:	b0bfff04 	addi	r2,r22,-4
   2556c:	a880082e 	bgeu	r21,r2,25590 <quorem+0x11c>
   25570:	b0ffff17 	ldw	r3,-4(r22)
   25574:	18000326 	beq	r3,zero,25584 <quorem+0x110>
   25578:	00000506 	br	25590 <quorem+0x11c>
   2557c:	10c00017 	ldw	r3,0(r2)
   25580:	1800031e 	bne	r3,zero,25590 <quorem+0x11c>
   25584:	10bfff04 	addi	r2,r2,-4
   25588:	94bfffc4 	addi	r18,r18,-1
   2558c:	a8bffb36 	bltu	r21,r2,2557c <_gp+0xfffebaac>
   25590:	84800415 	stw	r18,16(r16)
   25594:	b80b883a 	mov	r5,r23
   25598:	8009883a 	mov	r4,r16
   2559c:	0028d400 	call	28d40 <__mcmp>
   255a0:	10002616 	blt	r2,zero,2563c <quorem+0x1c8>
   255a4:	9cc00044 	addi	r19,r19,1
   255a8:	a805883a 	mov	r2,r21
   255ac:	000b883a 	mov	r5,zero
   255b0:	11000017 	ldw	r4,0(r2)
   255b4:	89800017 	ldw	r6,0(r17)
   255b8:	10800104 	addi	r2,r2,4
   255bc:	20ffffcc 	andi	r3,r4,65535
   255c0:	194b883a 	add	r5,r3,r5
   255c4:	30ffffcc 	andi	r3,r6,65535
   255c8:	28c7c83a 	sub	r3,r5,r3
   255cc:	300cd43a 	srli	r6,r6,16
   255d0:	2008d43a 	srli	r4,r4,16
   255d4:	180bd43a 	srai	r5,r3,16
   255d8:	18ffffcc 	andi	r3,r3,65535
   255dc:	2189c83a 	sub	r4,r4,r6
   255e0:	2149883a 	add	r4,r4,r5
   255e4:	200c943a 	slli	r6,r4,16
   255e8:	8c400104 	addi	r17,r17,4
   255ec:	200bd43a 	srai	r5,r4,16
   255f0:	30c6b03a 	or	r3,r6,r3
   255f4:	10ffff15 	stw	r3,-4(r2)
   255f8:	a47fed2e 	bgeu	r20,r17,255b0 <_gp+0xfffebae0>
   255fc:	9485883a 	add	r2,r18,r18
   25600:	1085883a 	add	r2,r2,r2
   25604:	a887883a 	add	r3,r21,r2
   25608:	18800017 	ldw	r2,0(r3)
   2560c:	10000b1e 	bne	r2,zero,2563c <quorem+0x1c8>
   25610:	18bfff04 	addi	r2,r3,-4
   25614:	a880082e 	bgeu	r21,r2,25638 <quorem+0x1c4>
   25618:	18ffff17 	ldw	r3,-4(r3)
   2561c:	18000326 	beq	r3,zero,2562c <quorem+0x1b8>
   25620:	00000506 	br	25638 <quorem+0x1c4>
   25624:	10c00017 	ldw	r3,0(r2)
   25628:	1800031e 	bne	r3,zero,25638 <quorem+0x1c4>
   2562c:	10bfff04 	addi	r2,r2,-4
   25630:	94bfffc4 	addi	r18,r18,-1
   25634:	a8bffb36 	bltu	r21,r2,25624 <_gp+0xfffebb54>
   25638:	84800415 	stw	r18,16(r16)
   2563c:	9805883a 	mov	r2,r19
   25640:	dfc00817 	ldw	ra,32(sp)
   25644:	ddc00717 	ldw	r23,28(sp)
   25648:	dd800617 	ldw	r22,24(sp)
   2564c:	dd400517 	ldw	r21,20(sp)
   25650:	dd000417 	ldw	r20,16(sp)
   25654:	dcc00317 	ldw	r19,12(sp)
   25658:	dc800217 	ldw	r18,8(sp)
   2565c:	dc400117 	ldw	r17,4(sp)
   25660:	dc000017 	ldw	r16,0(sp)
   25664:	dec00904 	addi	sp,sp,36
   25668:	f800283a 	ret
   2566c:	0005883a 	mov	r2,zero
   25670:	003ff306 	br	25640 <_gp+0xfffebb70>

00025674 <_dtoa_r>:
   25674:	20801017 	ldw	r2,64(r4)
   25678:	deffde04 	addi	sp,sp,-136
   2567c:	df002015 	stw	fp,128(sp)
   25680:	dcc01b15 	stw	r19,108(sp)
   25684:	dc801a15 	stw	r18,104(sp)
   25688:	dc401915 	stw	r17,100(sp)
   2568c:	dc001815 	stw	r16,96(sp)
   25690:	dfc02115 	stw	ra,132(sp)
   25694:	ddc01f15 	stw	r23,124(sp)
   25698:	dd801e15 	stw	r22,120(sp)
   2569c:	dd401d15 	stw	r21,116(sp)
   256a0:	dd001c15 	stw	r20,112(sp)
   256a4:	d9c00315 	stw	r7,12(sp)
   256a8:	2039883a 	mov	fp,r4
   256ac:	3023883a 	mov	r17,r6
   256b0:	2825883a 	mov	r18,r5
   256b4:	dc002417 	ldw	r16,144(sp)
   256b8:	3027883a 	mov	r19,r6
   256bc:	10000826 	beq	r2,zero,256e0 <_dtoa_r+0x6c>
   256c0:	21801117 	ldw	r6,68(r4)
   256c4:	00c00044 	movi	r3,1
   256c8:	100b883a 	mov	r5,r2
   256cc:	1986983a 	sll	r3,r3,r6
   256d0:	11800115 	stw	r6,4(r2)
   256d4:	10c00215 	stw	r3,8(r2)
   256d8:	00285200 	call	28520 <_Bfree>
   256dc:	e0001015 	stw	zero,64(fp)
   256e0:	88002e16 	blt	r17,zero,2579c <_dtoa_r+0x128>
   256e4:	80000015 	stw	zero,0(r16)
   256e8:	889ffc2c 	andhi	r2,r17,32752
   256ec:	00dffc34 	movhi	r3,32752
   256f0:	10c01c26 	beq	r2,r3,25764 <_dtoa_r+0xf0>
   256f4:	000d883a 	mov	r6,zero
   256f8:	000f883a 	mov	r7,zero
   256fc:	9009883a 	mov	r4,r18
   25700:	980b883a 	mov	r5,r19
   25704:	002d3e80 	call	2d3e8 <__eqdf2>
   25708:	10002b1e 	bne	r2,zero,257b8 <_dtoa_r+0x144>
   2570c:	d9c02317 	ldw	r7,140(sp)
   25710:	00800044 	movi	r2,1
   25714:	38800015 	stw	r2,0(r7)
   25718:	d8802517 	ldw	r2,148(sp)
   2571c:	10019e26 	beq	r2,zero,25d98 <_dtoa_r+0x724>
   25720:	d8c02517 	ldw	r3,148(sp)
   25724:	008000f4 	movhi	r2,3
   25728:	10bf9c44 	addi	r2,r2,-399
   2572c:	18800015 	stw	r2,0(r3)
   25730:	10bfffc4 	addi	r2,r2,-1
   25734:	dfc02117 	ldw	ra,132(sp)
   25738:	df002017 	ldw	fp,128(sp)
   2573c:	ddc01f17 	ldw	r23,124(sp)
   25740:	dd801e17 	ldw	r22,120(sp)
   25744:	dd401d17 	ldw	r21,116(sp)
   25748:	dd001c17 	ldw	r20,112(sp)
   2574c:	dcc01b17 	ldw	r19,108(sp)
   25750:	dc801a17 	ldw	r18,104(sp)
   25754:	dc401917 	ldw	r17,100(sp)
   25758:	dc001817 	ldw	r16,96(sp)
   2575c:	dec02204 	addi	sp,sp,136
   25760:	f800283a 	ret
   25764:	d8c02317 	ldw	r3,140(sp)
   25768:	0089c3c4 	movi	r2,9999
   2576c:	18800015 	stw	r2,0(r3)
   25770:	90017726 	beq	r18,zero,25d50 <_dtoa_r+0x6dc>
   25774:	008000f4 	movhi	r2,3
   25778:	10bfa804 	addi	r2,r2,-352
   2577c:	d9002517 	ldw	r4,148(sp)
   25780:	203fec26 	beq	r4,zero,25734 <_gp+0xfffebc64>
   25784:	10c000c7 	ldb	r3,3(r2)
   25788:	1801781e 	bne	r3,zero,25d6c <_dtoa_r+0x6f8>
   2578c:	10c000c4 	addi	r3,r2,3
   25790:	d9802517 	ldw	r6,148(sp)
   25794:	30c00015 	stw	r3,0(r6)
   25798:	003fe606 	br	25734 <_gp+0xfffebc64>
   2579c:	04e00034 	movhi	r19,32768
   257a0:	9cffffc4 	addi	r19,r19,-1
   257a4:	00800044 	movi	r2,1
   257a8:	8ce6703a 	and	r19,r17,r19
   257ac:	80800015 	stw	r2,0(r16)
   257b0:	9823883a 	mov	r17,r19
   257b4:	003fcc06 	br	256e8 <_gp+0xfffebc18>
   257b8:	d8800204 	addi	r2,sp,8
   257bc:	d8800015 	stw	r2,0(sp)
   257c0:	d9c00104 	addi	r7,sp,4
   257c4:	900b883a 	mov	r5,r18
   257c8:	980d883a 	mov	r6,r19
   257cc:	e009883a 	mov	r4,fp
   257d0:	8820d53a 	srli	r16,r17,20
   257d4:	002910c0 	call	2910c <__d2b>
   257d8:	d8800915 	stw	r2,36(sp)
   257dc:	8001651e 	bne	r16,zero,25d74 <_dtoa_r+0x700>
   257e0:	dd800217 	ldw	r22,8(sp)
   257e4:	dc000117 	ldw	r16,4(sp)
   257e8:	00800804 	movi	r2,32
   257ec:	b421883a 	add	r16,r22,r16
   257f0:	80c10c84 	addi	r3,r16,1074
   257f4:	10c2d10e 	bge	r2,r3,2633c <_dtoa_r+0xcc8>
   257f8:	00801004 	movi	r2,64
   257fc:	81010484 	addi	r4,r16,1042
   25800:	10c7c83a 	sub	r3,r2,r3
   25804:	9108d83a 	srl	r4,r18,r4
   25808:	88e2983a 	sll	r17,r17,r3
   2580c:	2448b03a 	or	r4,r4,r17
   25810:	00229e00 	call	229e0 <__floatunsidf>
   25814:	017f8434 	movhi	r5,65040
   25818:	01800044 	movi	r6,1
   2581c:	1009883a 	mov	r4,r2
   25820:	194b883a 	add	r5,r3,r5
   25824:	843fffc4 	addi	r16,r16,-1
   25828:	d9801115 	stw	r6,68(sp)
   2582c:	000d883a 	mov	r6,zero
   25830:	01cffe34 	movhi	r7,16376
   25834:	00220e40 	call	220e4 <__subdf3>
   25838:	0198dbf4 	movhi	r6,25455
   2583c:	01cff4f4 	movhi	r7,16339
   25840:	3190d844 	addi	r6,r6,17249
   25844:	39e1e9c4 	addi	r7,r7,-30809
   25848:	1009883a 	mov	r4,r2
   2584c:	180b883a 	mov	r5,r3
   25850:	00219cc0 	call	219cc <__muldf3>
   25854:	01a2d874 	movhi	r6,35681
   25858:	01cff1f4 	movhi	r7,16327
   2585c:	31b22cc4 	addi	r6,r6,-14157
   25860:	39e28a04 	addi	r7,r7,-30168
   25864:	180b883a 	mov	r5,r3
   25868:	1009883a 	mov	r4,r2
   2586c:	00211200 	call	21120 <__adddf3>
   25870:	8009883a 	mov	r4,r16
   25874:	1029883a 	mov	r20,r2
   25878:	1823883a 	mov	r17,r3
   2587c:	002d5640 	call	2d564 <__floatsidf>
   25880:	019427f4 	movhi	r6,20639
   25884:	01cff4f4 	movhi	r7,16339
   25888:	319e7ec4 	addi	r6,r6,31227
   2588c:	39d104c4 	addi	r7,r7,17427
   25890:	1009883a 	mov	r4,r2
   25894:	180b883a 	mov	r5,r3
   25898:	00219cc0 	call	219cc <__muldf3>
   2589c:	100d883a 	mov	r6,r2
   258a0:	180f883a 	mov	r7,r3
   258a4:	a009883a 	mov	r4,r20
   258a8:	880b883a 	mov	r5,r17
   258ac:	00211200 	call	21120 <__adddf3>
   258b0:	1009883a 	mov	r4,r2
   258b4:	180b883a 	mov	r5,r3
   258b8:	1029883a 	mov	r20,r2
   258bc:	1823883a 	mov	r17,r3
   258c0:	0022ef40 	call	22ef4 <__fixdfsi>
   258c4:	000d883a 	mov	r6,zero
   258c8:	000f883a 	mov	r7,zero
   258cc:	a009883a 	mov	r4,r20
   258d0:	880b883a 	mov	r5,r17
   258d4:	d8800515 	stw	r2,20(sp)
   258d8:	002d4700 	call	2d470 <__ledf2>
   258dc:	10028716 	blt	r2,zero,262fc <_dtoa_r+0xc88>
   258e0:	d8c00517 	ldw	r3,20(sp)
   258e4:	00800584 	movi	r2,22
   258e8:	10c27536 	bltu	r2,r3,262c0 <_dtoa_r+0xc4c>
   258ec:	180490fa 	slli	r2,r3,3
   258f0:	00c000f4 	movhi	r3,3
   258f4:	18ffc404 	addi	r3,r3,-240
   258f8:	1885883a 	add	r2,r3,r2
   258fc:	11000017 	ldw	r4,0(r2)
   25900:	11400117 	ldw	r5,4(r2)
   25904:	900d883a 	mov	r6,r18
   25908:	980f883a 	mov	r7,r19
   2590c:	0022e180 	call	22e18 <__gedf2>
   25910:	00828d0e 	bge	zero,r2,26348 <_dtoa_r+0xcd4>
   25914:	d9000517 	ldw	r4,20(sp)
   25918:	d8000e15 	stw	zero,56(sp)
   2591c:	213fffc4 	addi	r4,r4,-1
   25920:	d9000515 	stw	r4,20(sp)
   25924:	b42dc83a 	sub	r22,r22,r16
   25928:	b5bfffc4 	addi	r22,r22,-1
   2592c:	b0026f16 	blt	r22,zero,262ec <_dtoa_r+0xc78>
   25930:	d8000815 	stw	zero,32(sp)
   25934:	d9c00517 	ldw	r7,20(sp)
   25938:	38026416 	blt	r7,zero,262cc <_dtoa_r+0xc58>
   2593c:	b1ed883a 	add	r22,r22,r7
   25940:	d9c00d15 	stw	r7,52(sp)
   25944:	d8000a15 	stw	zero,40(sp)
   25948:	d9800317 	ldw	r6,12(sp)
   2594c:	00800244 	movi	r2,9
   25950:	11811436 	bltu	r2,r6,25da4 <_dtoa_r+0x730>
   25954:	00800144 	movi	r2,5
   25958:	1184e10e 	bge	r2,r6,26ce0 <_dtoa_r+0x166c>
   2595c:	31bfff04 	addi	r6,r6,-4
   25960:	d9800315 	stw	r6,12(sp)
   25964:	0023883a 	mov	r17,zero
   25968:	d9800317 	ldw	r6,12(sp)
   2596c:	008000c4 	movi	r2,3
   25970:	30836726 	beq	r6,r2,26710 <_dtoa_r+0x109c>
   25974:	1183410e 	bge	r2,r6,2667c <_dtoa_r+0x1008>
   25978:	d9c00317 	ldw	r7,12(sp)
   2597c:	00800104 	movi	r2,4
   25980:	38827c26 	beq	r7,r2,26374 <_dtoa_r+0xd00>
   25984:	00800144 	movi	r2,5
   25988:	3884c41e 	bne	r7,r2,26c9c <_dtoa_r+0x1628>
   2598c:	00800044 	movi	r2,1
   25990:	d8800b15 	stw	r2,44(sp)
   25994:	d8c00517 	ldw	r3,20(sp)
   25998:	d9002217 	ldw	r4,136(sp)
   2599c:	1907883a 	add	r3,r3,r4
   259a0:	19800044 	addi	r6,r3,1
   259a4:	d8c00c15 	stw	r3,48(sp)
   259a8:	d9800615 	stw	r6,24(sp)
   259ac:	0183a40e 	bge	zero,r6,26840 <_dtoa_r+0x11cc>
   259b0:	d9800617 	ldw	r6,24(sp)
   259b4:	3021883a 	mov	r16,r6
   259b8:	e0001115 	stw	zero,68(fp)
   259bc:	008005c4 	movi	r2,23
   259c0:	1184c92e 	bgeu	r2,r6,26ce8 <_dtoa_r+0x1674>
   259c4:	00c00044 	movi	r3,1
   259c8:	00800104 	movi	r2,4
   259cc:	1085883a 	add	r2,r2,r2
   259d0:	11000504 	addi	r4,r2,20
   259d4:	180b883a 	mov	r5,r3
   259d8:	18c00044 	addi	r3,r3,1
   259dc:	313ffb2e 	bgeu	r6,r4,259cc <_gp+0xfffebefc>
   259e0:	e1401115 	stw	r5,68(fp)
   259e4:	e009883a 	mov	r4,fp
   259e8:	00284780 	call	28478 <_Balloc>
   259ec:	d8800715 	stw	r2,28(sp)
   259f0:	e0801015 	stw	r2,64(fp)
   259f4:	00800384 	movi	r2,14
   259f8:	1400f736 	bltu	r2,r16,25dd8 <_dtoa_r+0x764>
   259fc:	8800f626 	beq	r17,zero,25dd8 <_dtoa_r+0x764>
   25a00:	d9c00517 	ldw	r7,20(sp)
   25a04:	01c39a0e 	bge	zero,r7,26870 <_dtoa_r+0x11fc>
   25a08:	388003cc 	andi	r2,r7,15
   25a0c:	100490fa 	slli	r2,r2,3
   25a10:	382bd13a 	srai	r21,r7,4
   25a14:	00c000f4 	movhi	r3,3
   25a18:	18ffc404 	addi	r3,r3,-240
   25a1c:	1885883a 	add	r2,r3,r2
   25a20:	a8c0040c 	andi	r3,r21,16
   25a24:	12400017 	ldw	r9,0(r2)
   25a28:	12000117 	ldw	r8,4(r2)
   25a2c:	18037926 	beq	r3,zero,26814 <_dtoa_r+0x11a0>
   25a30:	008000f4 	movhi	r2,3
   25a34:	10bfba04 	addi	r2,r2,-280
   25a38:	11800817 	ldw	r6,32(r2)
   25a3c:	11c00917 	ldw	r7,36(r2)
   25a40:	9009883a 	mov	r4,r18
   25a44:	980b883a 	mov	r5,r19
   25a48:	da001715 	stw	r8,92(sp)
   25a4c:	da401615 	stw	r9,88(sp)
   25a50:	002cb000 	call	2cb00 <__divdf3>
   25a54:	da001717 	ldw	r8,92(sp)
   25a58:	da401617 	ldw	r9,88(sp)
   25a5c:	ad4003cc 	andi	r21,r21,15
   25a60:	040000c4 	movi	r16,3
   25a64:	1023883a 	mov	r17,r2
   25a68:	1829883a 	mov	r20,r3
   25a6c:	a8001126 	beq	r21,zero,25ab4 <_dtoa_r+0x440>
   25a70:	05c000f4 	movhi	r23,3
   25a74:	bdffba04 	addi	r23,r23,-280
   25a78:	4805883a 	mov	r2,r9
   25a7c:	4007883a 	mov	r3,r8
   25a80:	a980004c 	andi	r6,r21,1
   25a84:	1009883a 	mov	r4,r2
   25a88:	a82bd07a 	srai	r21,r21,1
   25a8c:	180b883a 	mov	r5,r3
   25a90:	30000426 	beq	r6,zero,25aa4 <_dtoa_r+0x430>
   25a94:	b9800017 	ldw	r6,0(r23)
   25a98:	b9c00117 	ldw	r7,4(r23)
   25a9c:	84000044 	addi	r16,r16,1
   25aa0:	00219cc0 	call	219cc <__muldf3>
   25aa4:	bdc00204 	addi	r23,r23,8
   25aa8:	a83ff51e 	bne	r21,zero,25a80 <_gp+0xfffebfb0>
   25aac:	1013883a 	mov	r9,r2
   25ab0:	1811883a 	mov	r8,r3
   25ab4:	480d883a 	mov	r6,r9
   25ab8:	400f883a 	mov	r7,r8
   25abc:	8809883a 	mov	r4,r17
   25ac0:	a00b883a 	mov	r5,r20
   25ac4:	002cb000 	call	2cb00 <__divdf3>
   25ac8:	d8800f15 	stw	r2,60(sp)
   25acc:	d8c01015 	stw	r3,64(sp)
   25ad0:	d8c00e17 	ldw	r3,56(sp)
   25ad4:	18000626 	beq	r3,zero,25af0 <_dtoa_r+0x47c>
   25ad8:	d9000f17 	ldw	r4,60(sp)
   25adc:	d9401017 	ldw	r5,64(sp)
   25ae0:	000d883a 	mov	r6,zero
   25ae4:	01cffc34 	movhi	r7,16368
   25ae8:	002d4700 	call	2d470 <__ledf2>
   25aec:	10040b16 	blt	r2,zero,26b1c <_dtoa_r+0x14a8>
   25af0:	8009883a 	mov	r4,r16
   25af4:	002d5640 	call	2d564 <__floatsidf>
   25af8:	d9800f17 	ldw	r6,60(sp)
   25afc:	d9c01017 	ldw	r7,64(sp)
   25b00:	1009883a 	mov	r4,r2
   25b04:	180b883a 	mov	r5,r3
   25b08:	00219cc0 	call	219cc <__muldf3>
   25b0c:	000d883a 	mov	r6,zero
   25b10:	01d00734 	movhi	r7,16412
   25b14:	1009883a 	mov	r4,r2
   25b18:	180b883a 	mov	r5,r3
   25b1c:	00211200 	call	21120 <__adddf3>
   25b20:	1021883a 	mov	r16,r2
   25b24:	d8800617 	ldw	r2,24(sp)
   25b28:	047f3034 	movhi	r17,64704
   25b2c:	1c63883a 	add	r17,r3,r17
   25b30:	10031826 	beq	r2,zero,26794 <_dtoa_r+0x1120>
   25b34:	d8c00517 	ldw	r3,20(sp)
   25b38:	db000617 	ldw	r12,24(sp)
   25b3c:	d8c01315 	stw	r3,76(sp)
   25b40:	d9000b17 	ldw	r4,44(sp)
   25b44:	20038f26 	beq	r4,zero,26984 <_dtoa_r+0x1310>
   25b48:	60bfffc4 	addi	r2,r12,-1
   25b4c:	100490fa 	slli	r2,r2,3
   25b50:	00c000f4 	movhi	r3,3
   25b54:	18ffc404 	addi	r3,r3,-240
   25b58:	1885883a 	add	r2,r3,r2
   25b5c:	11800017 	ldw	r6,0(r2)
   25b60:	11c00117 	ldw	r7,4(r2)
   25b64:	d8800717 	ldw	r2,28(sp)
   25b68:	0009883a 	mov	r4,zero
   25b6c:	014ff834 	movhi	r5,16352
   25b70:	db001615 	stw	r12,88(sp)
   25b74:	15c00044 	addi	r23,r2,1
   25b78:	002cb000 	call	2cb00 <__divdf3>
   25b7c:	800d883a 	mov	r6,r16
   25b80:	880f883a 	mov	r7,r17
   25b84:	1009883a 	mov	r4,r2
   25b88:	180b883a 	mov	r5,r3
   25b8c:	00220e40 	call	220e4 <__subdf3>
   25b90:	d9401017 	ldw	r5,64(sp)
   25b94:	d9000f17 	ldw	r4,60(sp)
   25b98:	102b883a 	mov	r21,r2
   25b9c:	d8c01215 	stw	r3,72(sp)
   25ba0:	0022ef40 	call	22ef4 <__fixdfsi>
   25ba4:	1009883a 	mov	r4,r2
   25ba8:	1029883a 	mov	r20,r2
   25bac:	002d5640 	call	2d564 <__floatsidf>
   25bb0:	d9000f17 	ldw	r4,60(sp)
   25bb4:	d9401017 	ldw	r5,64(sp)
   25bb8:	100d883a 	mov	r6,r2
   25bbc:	180f883a 	mov	r7,r3
   25bc0:	00220e40 	call	220e4 <__subdf3>
   25bc4:	1823883a 	mov	r17,r3
   25bc8:	d8c00717 	ldw	r3,28(sp)
   25bcc:	d9401217 	ldw	r5,72(sp)
   25bd0:	a2000c04 	addi	r8,r20,48
   25bd4:	1021883a 	mov	r16,r2
   25bd8:	1a000005 	stb	r8,0(r3)
   25bdc:	800d883a 	mov	r6,r16
   25be0:	880f883a 	mov	r7,r17
   25be4:	a809883a 	mov	r4,r21
   25be8:	4029883a 	mov	r20,r8
   25bec:	0022e180 	call	22e18 <__gedf2>
   25bf0:	00841d16 	blt	zero,r2,26c68 <_dtoa_r+0x15f4>
   25bf4:	800d883a 	mov	r6,r16
   25bf8:	880f883a 	mov	r7,r17
   25bfc:	0009883a 	mov	r4,zero
   25c00:	014ffc34 	movhi	r5,16368
   25c04:	00220e40 	call	220e4 <__subdf3>
   25c08:	d9401217 	ldw	r5,72(sp)
   25c0c:	100d883a 	mov	r6,r2
   25c10:	180f883a 	mov	r7,r3
   25c14:	a809883a 	mov	r4,r21
   25c18:	0022e180 	call	22e18 <__gedf2>
   25c1c:	db001617 	ldw	r12,88(sp)
   25c20:	00840e16 	blt	zero,r2,26c5c <_dtoa_r+0x15e8>
   25c24:	00800044 	movi	r2,1
   25c28:	13006b0e 	bge	r2,r12,25dd8 <_dtoa_r+0x764>
   25c2c:	d9000717 	ldw	r4,28(sp)
   25c30:	dd800f15 	stw	r22,60(sp)
   25c34:	dcc01015 	stw	r19,64(sp)
   25c38:	2319883a 	add	r12,r4,r12
   25c3c:	dcc01217 	ldw	r19,72(sp)
   25c40:	602d883a 	mov	r22,r12
   25c44:	dc801215 	stw	r18,72(sp)
   25c48:	b825883a 	mov	r18,r23
   25c4c:	00000906 	br	25c74 <_dtoa_r+0x600>
   25c50:	00220e40 	call	220e4 <__subdf3>
   25c54:	a80d883a 	mov	r6,r21
   25c58:	980f883a 	mov	r7,r19
   25c5c:	1009883a 	mov	r4,r2
   25c60:	180b883a 	mov	r5,r3
   25c64:	002d4700 	call	2d470 <__ledf2>
   25c68:	1003e816 	blt	r2,zero,26c0c <_dtoa_r+0x1598>
   25c6c:	b825883a 	mov	r18,r23
   25c70:	bd83e926 	beq	r23,r22,26c18 <_dtoa_r+0x15a4>
   25c74:	a809883a 	mov	r4,r21
   25c78:	980b883a 	mov	r5,r19
   25c7c:	000d883a 	mov	r6,zero
   25c80:	01d00934 	movhi	r7,16420
   25c84:	00219cc0 	call	219cc <__muldf3>
   25c88:	000d883a 	mov	r6,zero
   25c8c:	01d00934 	movhi	r7,16420
   25c90:	8009883a 	mov	r4,r16
   25c94:	880b883a 	mov	r5,r17
   25c98:	102b883a 	mov	r21,r2
   25c9c:	1827883a 	mov	r19,r3
   25ca0:	00219cc0 	call	219cc <__muldf3>
   25ca4:	180b883a 	mov	r5,r3
   25ca8:	1009883a 	mov	r4,r2
   25cac:	1821883a 	mov	r16,r3
   25cb0:	1023883a 	mov	r17,r2
   25cb4:	0022ef40 	call	22ef4 <__fixdfsi>
   25cb8:	1009883a 	mov	r4,r2
   25cbc:	1029883a 	mov	r20,r2
   25cc0:	002d5640 	call	2d564 <__floatsidf>
   25cc4:	8809883a 	mov	r4,r17
   25cc8:	800b883a 	mov	r5,r16
   25ccc:	100d883a 	mov	r6,r2
   25cd0:	180f883a 	mov	r7,r3
   25cd4:	00220e40 	call	220e4 <__subdf3>
   25cd8:	a5000c04 	addi	r20,r20,48
   25cdc:	a80d883a 	mov	r6,r21
   25ce0:	980f883a 	mov	r7,r19
   25ce4:	1009883a 	mov	r4,r2
   25ce8:	180b883a 	mov	r5,r3
   25cec:	95000005 	stb	r20,0(r18)
   25cf0:	1021883a 	mov	r16,r2
   25cf4:	1823883a 	mov	r17,r3
   25cf8:	002d4700 	call	2d470 <__ledf2>
   25cfc:	bdc00044 	addi	r23,r23,1
   25d00:	800d883a 	mov	r6,r16
   25d04:	880f883a 	mov	r7,r17
   25d08:	0009883a 	mov	r4,zero
   25d0c:	014ffc34 	movhi	r5,16368
   25d10:	103fcf0e 	bge	r2,zero,25c50 <_gp+0xfffec180>
   25d14:	d8c01317 	ldw	r3,76(sp)
   25d18:	d8c00515 	stw	r3,20(sp)
   25d1c:	d9400917 	ldw	r5,36(sp)
   25d20:	e009883a 	mov	r4,fp
   25d24:	00285200 	call	28520 <_Bfree>
   25d28:	d9000517 	ldw	r4,20(sp)
   25d2c:	d9802317 	ldw	r6,140(sp)
   25d30:	d9c02517 	ldw	r7,148(sp)
   25d34:	b8000005 	stb	zero,0(r23)
   25d38:	20800044 	addi	r2,r4,1
   25d3c:	30800015 	stw	r2,0(r6)
   25d40:	3802aa26 	beq	r7,zero,267ec <_dtoa_r+0x1178>
   25d44:	3dc00015 	stw	r23,0(r7)
   25d48:	d8800717 	ldw	r2,28(sp)
   25d4c:	003e7906 	br	25734 <_gp+0xfffebc64>
   25d50:	00800434 	movhi	r2,16
   25d54:	10bfffc4 	addi	r2,r2,-1
   25d58:	88a2703a 	and	r17,r17,r2
   25d5c:	883e851e 	bne	r17,zero,25774 <_gp+0xfffebca4>
   25d60:	008000f4 	movhi	r2,3
   25d64:	10bfa504 	addi	r2,r2,-364
   25d68:	003e8406 	br	2577c <_gp+0xfffebcac>
   25d6c:	10c00204 	addi	r3,r2,8
   25d70:	003e8706 	br	25790 <_gp+0xfffebcc0>
   25d74:	01400434 	movhi	r5,16
   25d78:	297fffc4 	addi	r5,r5,-1
   25d7c:	994a703a 	and	r5,r19,r5
   25d80:	9009883a 	mov	r4,r18
   25d84:	843f0044 	addi	r16,r16,-1023
   25d88:	294ffc34 	orhi	r5,r5,16368
   25d8c:	dd800217 	ldw	r22,8(sp)
   25d90:	d8001115 	stw	zero,68(sp)
   25d94:	003ea506 	br	2582c <_gp+0xfffebd5c>
   25d98:	008000f4 	movhi	r2,3
   25d9c:	10bf9c04 	addi	r2,r2,-400
   25da0:	003e6406 	br	25734 <_gp+0xfffebc64>
   25da4:	e0001115 	stw	zero,68(fp)
   25da8:	000b883a 	mov	r5,zero
   25dac:	e009883a 	mov	r4,fp
   25db0:	00284780 	call	28478 <_Balloc>
   25db4:	01bfffc4 	movi	r6,-1
   25db8:	01c00044 	movi	r7,1
   25dbc:	d8800715 	stw	r2,28(sp)
   25dc0:	d9800c15 	stw	r6,48(sp)
   25dc4:	e0801015 	stw	r2,64(fp)
   25dc8:	d8000315 	stw	zero,12(sp)
   25dcc:	d9c00b15 	stw	r7,44(sp)
   25dd0:	d9800615 	stw	r6,24(sp)
   25dd4:	d8002215 	stw	zero,136(sp)
   25dd8:	d8800117 	ldw	r2,4(sp)
   25ddc:	10008916 	blt	r2,zero,26004 <_dtoa_r+0x990>
   25de0:	d9000517 	ldw	r4,20(sp)
   25de4:	00c00384 	movi	r3,14
   25de8:	19008616 	blt	r3,r4,26004 <_dtoa_r+0x990>
   25dec:	200490fa 	slli	r2,r4,3
   25df0:	00c000f4 	movhi	r3,3
   25df4:	d9802217 	ldw	r6,136(sp)
   25df8:	18ffc404 	addi	r3,r3,-240
   25dfc:	1885883a 	add	r2,r3,r2
   25e00:	14000017 	ldw	r16,0(r2)
   25e04:	14400117 	ldw	r17,4(r2)
   25e08:	30016316 	blt	r6,zero,26398 <_dtoa_r+0xd24>
   25e0c:	800d883a 	mov	r6,r16
   25e10:	880f883a 	mov	r7,r17
   25e14:	9009883a 	mov	r4,r18
   25e18:	980b883a 	mov	r5,r19
   25e1c:	002cb000 	call	2cb00 <__divdf3>
   25e20:	180b883a 	mov	r5,r3
   25e24:	1009883a 	mov	r4,r2
   25e28:	0022ef40 	call	22ef4 <__fixdfsi>
   25e2c:	1009883a 	mov	r4,r2
   25e30:	102b883a 	mov	r21,r2
   25e34:	002d5640 	call	2d564 <__floatsidf>
   25e38:	800d883a 	mov	r6,r16
   25e3c:	880f883a 	mov	r7,r17
   25e40:	1009883a 	mov	r4,r2
   25e44:	180b883a 	mov	r5,r3
   25e48:	00219cc0 	call	219cc <__muldf3>
   25e4c:	100d883a 	mov	r6,r2
   25e50:	180f883a 	mov	r7,r3
   25e54:	9009883a 	mov	r4,r18
   25e58:	980b883a 	mov	r5,r19
   25e5c:	00220e40 	call	220e4 <__subdf3>
   25e60:	d9c00717 	ldw	r7,28(sp)
   25e64:	1009883a 	mov	r4,r2
   25e68:	a8800c04 	addi	r2,r21,48
   25e6c:	38800005 	stb	r2,0(r7)
   25e70:	3dc00044 	addi	r23,r7,1
   25e74:	d9c00617 	ldw	r7,24(sp)
   25e78:	01800044 	movi	r6,1
   25e7c:	180b883a 	mov	r5,r3
   25e80:	2005883a 	mov	r2,r4
   25e84:	39803826 	beq	r7,r6,25f68 <_dtoa_r+0x8f4>
   25e88:	000d883a 	mov	r6,zero
   25e8c:	01d00934 	movhi	r7,16420
   25e90:	00219cc0 	call	219cc <__muldf3>
   25e94:	000d883a 	mov	r6,zero
   25e98:	000f883a 	mov	r7,zero
   25e9c:	1009883a 	mov	r4,r2
   25ea0:	180b883a 	mov	r5,r3
   25ea4:	1025883a 	mov	r18,r2
   25ea8:	1827883a 	mov	r19,r3
   25eac:	002d3e80 	call	2d3e8 <__eqdf2>
   25eb0:	103f9a26 	beq	r2,zero,25d1c <_gp+0xfffec24c>
   25eb4:	d9c00617 	ldw	r7,24(sp)
   25eb8:	d8c00717 	ldw	r3,28(sp)
   25ebc:	b829883a 	mov	r20,r23
   25ec0:	38bfffc4 	addi	r2,r7,-1
   25ec4:	18ad883a 	add	r22,r3,r2
   25ec8:	00000a06 	br	25ef4 <_dtoa_r+0x880>
   25ecc:	00219cc0 	call	219cc <__muldf3>
   25ed0:	000d883a 	mov	r6,zero
   25ed4:	000f883a 	mov	r7,zero
   25ed8:	1009883a 	mov	r4,r2
   25edc:	180b883a 	mov	r5,r3
   25ee0:	1025883a 	mov	r18,r2
   25ee4:	1827883a 	mov	r19,r3
   25ee8:	b829883a 	mov	r20,r23
   25eec:	002d3e80 	call	2d3e8 <__eqdf2>
   25ef0:	103f8a26 	beq	r2,zero,25d1c <_gp+0xfffec24c>
   25ef4:	800d883a 	mov	r6,r16
   25ef8:	880f883a 	mov	r7,r17
   25efc:	9009883a 	mov	r4,r18
   25f00:	980b883a 	mov	r5,r19
   25f04:	002cb000 	call	2cb00 <__divdf3>
   25f08:	180b883a 	mov	r5,r3
   25f0c:	1009883a 	mov	r4,r2
   25f10:	0022ef40 	call	22ef4 <__fixdfsi>
   25f14:	1009883a 	mov	r4,r2
   25f18:	102b883a 	mov	r21,r2
   25f1c:	002d5640 	call	2d564 <__floatsidf>
   25f20:	800d883a 	mov	r6,r16
   25f24:	880f883a 	mov	r7,r17
   25f28:	1009883a 	mov	r4,r2
   25f2c:	180b883a 	mov	r5,r3
   25f30:	00219cc0 	call	219cc <__muldf3>
   25f34:	100d883a 	mov	r6,r2
   25f38:	180f883a 	mov	r7,r3
   25f3c:	9009883a 	mov	r4,r18
   25f40:	980b883a 	mov	r5,r19
   25f44:	00220e40 	call	220e4 <__subdf3>
   25f48:	aa000c04 	addi	r8,r21,48
   25f4c:	a2000005 	stb	r8,0(r20)
   25f50:	000d883a 	mov	r6,zero
   25f54:	01d00934 	movhi	r7,16420
   25f58:	1009883a 	mov	r4,r2
   25f5c:	180b883a 	mov	r5,r3
   25f60:	a5c00044 	addi	r23,r20,1
   25f64:	b53fd91e 	bne	r22,r20,25ecc <_gp+0xfffec3fc>
   25f68:	100d883a 	mov	r6,r2
   25f6c:	180f883a 	mov	r7,r3
   25f70:	1009883a 	mov	r4,r2
   25f74:	180b883a 	mov	r5,r3
   25f78:	00211200 	call	21120 <__adddf3>
   25f7c:	100d883a 	mov	r6,r2
   25f80:	180f883a 	mov	r7,r3
   25f84:	8009883a 	mov	r4,r16
   25f88:	880b883a 	mov	r5,r17
   25f8c:	1027883a 	mov	r19,r2
   25f90:	1825883a 	mov	r18,r3
   25f94:	002d4700 	call	2d470 <__ledf2>
   25f98:	10000816 	blt	r2,zero,25fbc <_dtoa_r+0x948>
   25f9c:	980d883a 	mov	r6,r19
   25fa0:	900f883a 	mov	r7,r18
   25fa4:	8009883a 	mov	r4,r16
   25fa8:	880b883a 	mov	r5,r17
   25fac:	002d3e80 	call	2d3e8 <__eqdf2>
   25fb0:	103f5a1e 	bne	r2,zero,25d1c <_gp+0xfffec24c>
   25fb4:	ad40004c 	andi	r21,r21,1
   25fb8:	a83f5826 	beq	r21,zero,25d1c <_gp+0xfffec24c>
   25fbc:	bd3fffc3 	ldbu	r20,-1(r23)
   25fc0:	b8bfffc4 	addi	r2,r23,-1
   25fc4:	1007883a 	mov	r3,r2
   25fc8:	01400e44 	movi	r5,57
   25fcc:	d9800717 	ldw	r6,28(sp)
   25fd0:	00000506 	br	25fe8 <_dtoa_r+0x974>
   25fd4:	18ffffc4 	addi	r3,r3,-1
   25fd8:	11824726 	beq	r2,r6,268f8 <_dtoa_r+0x1284>
   25fdc:	1d000003 	ldbu	r20,0(r3)
   25fe0:	102f883a 	mov	r23,r2
   25fe4:	10bfffc4 	addi	r2,r2,-1
   25fe8:	a1003fcc 	andi	r4,r20,255
   25fec:	2100201c 	xori	r4,r4,128
   25ff0:	213fe004 	addi	r4,r4,-128
   25ff4:	217ff726 	beq	r4,r5,25fd4 <_gp+0xfffec504>
   25ff8:	a2000044 	addi	r8,r20,1
   25ffc:	12000005 	stb	r8,0(r2)
   26000:	003f4606 	br	25d1c <_gp+0xfffec24c>
   26004:	d9000b17 	ldw	r4,44(sp)
   26008:	2000c826 	beq	r4,zero,2632c <_dtoa_r+0xcb8>
   2600c:	d9800317 	ldw	r6,12(sp)
   26010:	00c00044 	movi	r3,1
   26014:	1980f90e 	bge	r3,r6,263fc <_dtoa_r+0xd88>
   26018:	d8800617 	ldw	r2,24(sp)
   2601c:	d8c00a17 	ldw	r3,40(sp)
   26020:	157fffc4 	addi	r21,r2,-1
   26024:	1d41f316 	blt	r3,r21,267f4 <_dtoa_r+0x1180>
   26028:	1d6bc83a 	sub	r21,r3,r21
   2602c:	d9c00617 	ldw	r7,24(sp)
   26030:	3802aa16 	blt	r7,zero,26adc <_dtoa_r+0x1468>
   26034:	dd000817 	ldw	r20,32(sp)
   26038:	d8800617 	ldw	r2,24(sp)
   2603c:	d8c00817 	ldw	r3,32(sp)
   26040:	01400044 	movi	r5,1
   26044:	e009883a 	mov	r4,fp
   26048:	1887883a 	add	r3,r3,r2
   2604c:	d8c00815 	stw	r3,32(sp)
   26050:	b0ad883a 	add	r22,r22,r2
   26054:	00288840 	call	28884 <__i2b>
   26058:	1023883a 	mov	r17,r2
   2605c:	a0000826 	beq	r20,zero,26080 <_dtoa_r+0xa0c>
   26060:	0580070e 	bge	zero,r22,26080 <_dtoa_r+0xa0c>
   26064:	a005883a 	mov	r2,r20
   26068:	b500b916 	blt	r22,r20,26350 <_dtoa_r+0xcdc>
   2606c:	d9000817 	ldw	r4,32(sp)
   26070:	a0a9c83a 	sub	r20,r20,r2
   26074:	b0adc83a 	sub	r22,r22,r2
   26078:	2089c83a 	sub	r4,r4,r2
   2607c:	d9000815 	stw	r4,32(sp)
   26080:	d9800a17 	ldw	r6,40(sp)
   26084:	0181810e 	bge	zero,r6,2668c <_dtoa_r+0x1018>
   26088:	d9c00b17 	ldw	r7,44(sp)
   2608c:	3800b326 	beq	r7,zero,2635c <_dtoa_r+0xce8>
   26090:	a800b226 	beq	r21,zero,2635c <_dtoa_r+0xce8>
   26094:	880b883a 	mov	r5,r17
   26098:	a80d883a 	mov	r6,r21
   2609c:	e009883a 	mov	r4,fp
   260a0:	0028ab80 	call	28ab8 <__pow5mult>
   260a4:	d9800917 	ldw	r6,36(sp)
   260a8:	100b883a 	mov	r5,r2
   260ac:	e009883a 	mov	r4,fp
   260b0:	1023883a 	mov	r17,r2
   260b4:	00288c00 	call	288c0 <__multiply>
   260b8:	1021883a 	mov	r16,r2
   260bc:	d8800a17 	ldw	r2,40(sp)
   260c0:	d9400917 	ldw	r5,36(sp)
   260c4:	e009883a 	mov	r4,fp
   260c8:	1545c83a 	sub	r2,r2,r21
   260cc:	d8800a15 	stw	r2,40(sp)
   260d0:	00285200 	call	28520 <_Bfree>
   260d4:	d8c00a17 	ldw	r3,40(sp)
   260d8:	18009f1e 	bne	r3,zero,26358 <_dtoa_r+0xce4>
   260dc:	05c00044 	movi	r23,1
   260e0:	e009883a 	mov	r4,fp
   260e4:	b80b883a 	mov	r5,r23
   260e8:	00288840 	call	28884 <__i2b>
   260ec:	d9000d17 	ldw	r4,52(sp)
   260f0:	102b883a 	mov	r21,r2
   260f4:	2000ce26 	beq	r4,zero,26430 <_dtoa_r+0xdbc>
   260f8:	200d883a 	mov	r6,r4
   260fc:	100b883a 	mov	r5,r2
   26100:	e009883a 	mov	r4,fp
   26104:	0028ab80 	call	28ab8 <__pow5mult>
   26108:	d9800317 	ldw	r6,12(sp)
   2610c:	102b883a 	mov	r21,r2
   26110:	b981810e 	bge	r23,r6,26718 <_dtoa_r+0x10a4>
   26114:	0027883a 	mov	r19,zero
   26118:	a8800417 	ldw	r2,16(r21)
   2611c:	05c00804 	movi	r23,32
   26120:	10800104 	addi	r2,r2,4
   26124:	1085883a 	add	r2,r2,r2
   26128:	1085883a 	add	r2,r2,r2
   2612c:	a885883a 	add	r2,r21,r2
   26130:	11000017 	ldw	r4,0(r2)
   26134:	002876c0 	call	2876c <__hi0bits>
   26138:	b885c83a 	sub	r2,r23,r2
   2613c:	1585883a 	add	r2,r2,r22
   26140:	108007cc 	andi	r2,r2,31
   26144:	1000b326 	beq	r2,zero,26414 <_dtoa_r+0xda0>
   26148:	00c00804 	movi	r3,32
   2614c:	1887c83a 	sub	r3,r3,r2
   26150:	01000104 	movi	r4,4
   26154:	20c2cd0e 	bge	r4,r3,26c8c <_dtoa_r+0x1618>
   26158:	00c00704 	movi	r3,28
   2615c:	1885c83a 	sub	r2,r3,r2
   26160:	d8c00817 	ldw	r3,32(sp)
   26164:	a0a9883a 	add	r20,r20,r2
   26168:	b0ad883a 	add	r22,r22,r2
   2616c:	1887883a 	add	r3,r3,r2
   26170:	d8c00815 	stw	r3,32(sp)
   26174:	d9800817 	ldw	r6,32(sp)
   26178:	0180040e 	bge	zero,r6,2618c <_dtoa_r+0xb18>
   2617c:	800b883a 	mov	r5,r16
   26180:	e009883a 	mov	r4,fp
   26184:	0028bf80 	call	28bf8 <__lshift>
   26188:	1021883a 	mov	r16,r2
   2618c:	0580050e 	bge	zero,r22,261a4 <_dtoa_r+0xb30>
   26190:	a80b883a 	mov	r5,r21
   26194:	b00d883a 	mov	r6,r22
   26198:	e009883a 	mov	r4,fp
   2619c:	0028bf80 	call	28bf8 <__lshift>
   261a0:	102b883a 	mov	r21,r2
   261a4:	d9c00e17 	ldw	r7,56(sp)
   261a8:	3801211e 	bne	r7,zero,26630 <_dtoa_r+0xfbc>
   261ac:	d9800617 	ldw	r6,24(sp)
   261b0:	0181380e 	bge	zero,r6,26694 <_dtoa_r+0x1020>
   261b4:	d8c00b17 	ldw	r3,44(sp)
   261b8:	1800ab1e 	bne	r3,zero,26468 <_dtoa_r+0xdf4>
   261bc:	dc800717 	ldw	r18,28(sp)
   261c0:	dcc00617 	ldw	r19,24(sp)
   261c4:	9029883a 	mov	r20,r18
   261c8:	00000206 	br	261d4 <_dtoa_r+0xb60>
   261cc:	00285480 	call	28548 <__multadd>
   261d0:	1021883a 	mov	r16,r2
   261d4:	a80b883a 	mov	r5,r21
   261d8:	8009883a 	mov	r4,r16
   261dc:	00254740 	call	25474 <quorem>
   261e0:	10800c04 	addi	r2,r2,48
   261e4:	90800005 	stb	r2,0(r18)
   261e8:	94800044 	addi	r18,r18,1
   261ec:	9507c83a 	sub	r3,r18,r20
   261f0:	000f883a 	mov	r7,zero
   261f4:	01800284 	movi	r6,10
   261f8:	800b883a 	mov	r5,r16
   261fc:	e009883a 	mov	r4,fp
   26200:	1cfff216 	blt	r3,r19,261cc <_gp+0xfffec6fc>
   26204:	1011883a 	mov	r8,r2
   26208:	d8800617 	ldw	r2,24(sp)
   2620c:	0082370e 	bge	zero,r2,26aec <_dtoa_r+0x1478>
   26210:	d9000717 	ldw	r4,28(sp)
   26214:	0025883a 	mov	r18,zero
   26218:	20af883a 	add	r23,r4,r2
   2621c:	01800044 	movi	r6,1
   26220:	800b883a 	mov	r5,r16
   26224:	e009883a 	mov	r4,fp
   26228:	da001715 	stw	r8,92(sp)
   2622c:	0028bf80 	call	28bf8 <__lshift>
   26230:	a80b883a 	mov	r5,r21
   26234:	1009883a 	mov	r4,r2
   26238:	d8800915 	stw	r2,36(sp)
   2623c:	0028d400 	call	28d40 <__mcmp>
   26240:	da001717 	ldw	r8,92(sp)
   26244:	0081800e 	bge	zero,r2,26848 <_dtoa_r+0x11d4>
   26248:	b93fffc3 	ldbu	r4,-1(r23)
   2624c:	b8bfffc4 	addi	r2,r23,-1
   26250:	1007883a 	mov	r3,r2
   26254:	01800e44 	movi	r6,57
   26258:	d9c00717 	ldw	r7,28(sp)
   2625c:	00000506 	br	26274 <_dtoa_r+0xc00>
   26260:	18ffffc4 	addi	r3,r3,-1
   26264:	11c12326 	beq	r2,r7,266f4 <_dtoa_r+0x1080>
   26268:	19000003 	ldbu	r4,0(r3)
   2626c:	102f883a 	mov	r23,r2
   26270:	10bfffc4 	addi	r2,r2,-1
   26274:	21403fcc 	andi	r5,r4,255
   26278:	2940201c 	xori	r5,r5,128
   2627c:	297fe004 	addi	r5,r5,-128
   26280:	29bff726 	beq	r5,r6,26260 <_gp+0xfffec790>
   26284:	21000044 	addi	r4,r4,1
   26288:	11000005 	stb	r4,0(r2)
   2628c:	a80b883a 	mov	r5,r21
   26290:	e009883a 	mov	r4,fp
   26294:	00285200 	call	28520 <_Bfree>
   26298:	883ea026 	beq	r17,zero,25d1c <_gp+0xfffec24c>
   2629c:	90000426 	beq	r18,zero,262b0 <_dtoa_r+0xc3c>
   262a0:	94400326 	beq	r18,r17,262b0 <_dtoa_r+0xc3c>
   262a4:	900b883a 	mov	r5,r18
   262a8:	e009883a 	mov	r4,fp
   262ac:	00285200 	call	28520 <_Bfree>
   262b0:	880b883a 	mov	r5,r17
   262b4:	e009883a 	mov	r4,fp
   262b8:	00285200 	call	28520 <_Bfree>
   262bc:	003e9706 	br	25d1c <_gp+0xfffec24c>
   262c0:	01800044 	movi	r6,1
   262c4:	d9800e15 	stw	r6,56(sp)
   262c8:	003d9606 	br	25924 <_gp+0xfffebe54>
   262cc:	d8800817 	ldw	r2,32(sp)
   262d0:	d8c00517 	ldw	r3,20(sp)
   262d4:	d8000d15 	stw	zero,52(sp)
   262d8:	10c5c83a 	sub	r2,r2,r3
   262dc:	00c9c83a 	sub	r4,zero,r3
   262e0:	d8800815 	stw	r2,32(sp)
   262e4:	d9000a15 	stw	r4,40(sp)
   262e8:	003d9706 	br	25948 <_gp+0xfffebe78>
   262ec:	05adc83a 	sub	r22,zero,r22
   262f0:	dd800815 	stw	r22,32(sp)
   262f4:	002d883a 	mov	r22,zero
   262f8:	003d8e06 	br	25934 <_gp+0xfffebe64>
   262fc:	d9000517 	ldw	r4,20(sp)
   26300:	002d5640 	call	2d564 <__floatsidf>
   26304:	100d883a 	mov	r6,r2
   26308:	180f883a 	mov	r7,r3
   2630c:	a009883a 	mov	r4,r20
   26310:	880b883a 	mov	r5,r17
   26314:	002d3e80 	call	2d3e8 <__eqdf2>
   26318:	103d7126 	beq	r2,zero,258e0 <_gp+0xfffebe10>
   2631c:	d9c00517 	ldw	r7,20(sp)
   26320:	39ffffc4 	addi	r7,r7,-1
   26324:	d9c00515 	stw	r7,20(sp)
   26328:	003d6d06 	br	258e0 <_gp+0xfffebe10>
   2632c:	dd400a17 	ldw	r21,40(sp)
   26330:	dd000817 	ldw	r20,32(sp)
   26334:	0023883a 	mov	r17,zero
   26338:	003f4806 	br	2605c <_gp+0xfffec58c>
   2633c:	10e3c83a 	sub	r17,r2,r3
   26340:	9448983a 	sll	r4,r18,r17
   26344:	003d3206 	br	25810 <_gp+0xfffebd40>
   26348:	d8000e15 	stw	zero,56(sp)
   2634c:	003d7506 	br	25924 <_gp+0xfffebe54>
   26350:	b005883a 	mov	r2,r22
   26354:	003f4506 	br	2606c <_gp+0xfffec59c>
   26358:	dc000915 	stw	r16,36(sp)
   2635c:	d9800a17 	ldw	r6,40(sp)
   26360:	d9400917 	ldw	r5,36(sp)
   26364:	e009883a 	mov	r4,fp
   26368:	0028ab80 	call	28ab8 <__pow5mult>
   2636c:	1021883a 	mov	r16,r2
   26370:	003f5a06 	br	260dc <_gp+0xfffec60c>
   26374:	01c00044 	movi	r7,1
   26378:	d9c00b15 	stw	r7,44(sp)
   2637c:	d8802217 	ldw	r2,136(sp)
   26380:	0081280e 	bge	zero,r2,26824 <_dtoa_r+0x11b0>
   26384:	100d883a 	mov	r6,r2
   26388:	1021883a 	mov	r16,r2
   2638c:	d8800c15 	stw	r2,48(sp)
   26390:	d8800615 	stw	r2,24(sp)
   26394:	003d8806 	br	259b8 <_gp+0xfffebee8>
   26398:	d8800617 	ldw	r2,24(sp)
   2639c:	00be9b16 	blt	zero,r2,25e0c <_gp+0xfffec33c>
   263a0:	10010f1e 	bne	r2,zero,267e0 <_dtoa_r+0x116c>
   263a4:	880b883a 	mov	r5,r17
   263a8:	000d883a 	mov	r6,zero
   263ac:	01d00534 	movhi	r7,16404
   263b0:	8009883a 	mov	r4,r16
   263b4:	00219cc0 	call	219cc <__muldf3>
   263b8:	900d883a 	mov	r6,r18
   263bc:	980f883a 	mov	r7,r19
   263c0:	1009883a 	mov	r4,r2
   263c4:	180b883a 	mov	r5,r3
   263c8:	0022e180 	call	22e18 <__gedf2>
   263cc:	002b883a 	mov	r21,zero
   263d0:	0023883a 	mov	r17,zero
   263d4:	1000bf16 	blt	r2,zero,266d4 <_dtoa_r+0x1060>
   263d8:	d9802217 	ldw	r6,136(sp)
   263dc:	ddc00717 	ldw	r23,28(sp)
   263e0:	018c303a 	nor	r6,zero,r6
   263e4:	d9800515 	stw	r6,20(sp)
   263e8:	a80b883a 	mov	r5,r21
   263ec:	e009883a 	mov	r4,fp
   263f0:	00285200 	call	28520 <_Bfree>
   263f4:	883e4926 	beq	r17,zero,25d1c <_gp+0xfffec24c>
   263f8:	003fad06 	br	262b0 <_gp+0xfffec7e0>
   263fc:	d9c01117 	ldw	r7,68(sp)
   26400:	3801bc26 	beq	r7,zero,26af4 <_dtoa_r+0x1480>
   26404:	10810cc4 	addi	r2,r2,1075
   26408:	dd400a17 	ldw	r21,40(sp)
   2640c:	dd000817 	ldw	r20,32(sp)
   26410:	003f0a06 	br	2603c <_gp+0xfffec56c>
   26414:	00800704 	movi	r2,28
   26418:	d9000817 	ldw	r4,32(sp)
   2641c:	a0a9883a 	add	r20,r20,r2
   26420:	b0ad883a 	add	r22,r22,r2
   26424:	2089883a 	add	r4,r4,r2
   26428:	d9000815 	stw	r4,32(sp)
   2642c:	003f5106 	br	26174 <_gp+0xfffec6a4>
   26430:	d8c00317 	ldw	r3,12(sp)
   26434:	b8c1fc0e 	bge	r23,r3,26c28 <_dtoa_r+0x15b4>
   26438:	0027883a 	mov	r19,zero
   2643c:	b805883a 	mov	r2,r23
   26440:	003f3e06 	br	2613c <_gp+0xfffec66c>
   26444:	880b883a 	mov	r5,r17
   26448:	e009883a 	mov	r4,fp
   2644c:	000f883a 	mov	r7,zero
   26450:	01800284 	movi	r6,10
   26454:	00285480 	call	28548 <__multadd>
   26458:	d9000c17 	ldw	r4,48(sp)
   2645c:	1023883a 	mov	r17,r2
   26460:	0102040e 	bge	zero,r4,26c74 <_dtoa_r+0x1600>
   26464:	d9000615 	stw	r4,24(sp)
   26468:	0500050e 	bge	zero,r20,26480 <_dtoa_r+0xe0c>
   2646c:	880b883a 	mov	r5,r17
   26470:	a00d883a 	mov	r6,r20
   26474:	e009883a 	mov	r4,fp
   26478:	0028bf80 	call	28bf8 <__lshift>
   2647c:	1023883a 	mov	r17,r2
   26480:	9801241e 	bne	r19,zero,26914 <_dtoa_r+0x12a0>
   26484:	8829883a 	mov	r20,r17
   26488:	d9000617 	ldw	r4,24(sp)
   2648c:	dcc00717 	ldw	r19,28(sp)
   26490:	9480004c 	andi	r18,r18,1
   26494:	20bfffc4 	addi	r2,r4,-1
   26498:	9885883a 	add	r2,r19,r2
   2649c:	d8800415 	stw	r2,16(sp)
   264a0:	dc800615 	stw	r18,24(sp)
   264a4:	a80b883a 	mov	r5,r21
   264a8:	8009883a 	mov	r4,r16
   264ac:	00254740 	call	25474 <quorem>
   264b0:	880b883a 	mov	r5,r17
   264b4:	8009883a 	mov	r4,r16
   264b8:	102f883a 	mov	r23,r2
   264bc:	0028d400 	call	28d40 <__mcmp>
   264c0:	a80b883a 	mov	r5,r21
   264c4:	a00d883a 	mov	r6,r20
   264c8:	e009883a 	mov	r4,fp
   264cc:	102d883a 	mov	r22,r2
   264d0:	0028da00 	call	28da0 <__mdiff>
   264d4:	1007883a 	mov	r3,r2
   264d8:	10800317 	ldw	r2,12(r2)
   264dc:	bc800c04 	addi	r18,r23,48
   264e0:	180b883a 	mov	r5,r3
   264e4:	10004e1e 	bne	r2,zero,26620 <_dtoa_r+0xfac>
   264e8:	8009883a 	mov	r4,r16
   264ec:	d8c01615 	stw	r3,88(sp)
   264f0:	0028d400 	call	28d40 <__mcmp>
   264f4:	d8c01617 	ldw	r3,88(sp)
   264f8:	e009883a 	mov	r4,fp
   264fc:	d8801615 	stw	r2,88(sp)
   26500:	180b883a 	mov	r5,r3
   26504:	00285200 	call	28520 <_Bfree>
   26508:	d8801617 	ldw	r2,88(sp)
   2650c:	1000041e 	bne	r2,zero,26520 <_dtoa_r+0xeac>
   26510:	d9800317 	ldw	r6,12(sp)
   26514:	3000021e 	bne	r6,zero,26520 <_dtoa_r+0xeac>
   26518:	d8c00617 	ldw	r3,24(sp)
   2651c:	18003726 	beq	r3,zero,265fc <_dtoa_r+0xf88>
   26520:	b0002016 	blt	r22,zero,265a4 <_dtoa_r+0xf30>
   26524:	b000041e 	bne	r22,zero,26538 <_dtoa_r+0xec4>
   26528:	d9000317 	ldw	r4,12(sp)
   2652c:	2000021e 	bne	r4,zero,26538 <_dtoa_r+0xec4>
   26530:	d8c00617 	ldw	r3,24(sp)
   26534:	18001b26 	beq	r3,zero,265a4 <_dtoa_r+0xf30>
   26538:	00810716 	blt	zero,r2,26958 <_dtoa_r+0x12e4>
   2653c:	d8c00417 	ldw	r3,16(sp)
   26540:	9d800044 	addi	r22,r19,1
   26544:	9c800005 	stb	r18,0(r19)
   26548:	b02f883a 	mov	r23,r22
   2654c:	98c10626 	beq	r19,r3,26968 <_dtoa_r+0x12f4>
   26550:	800b883a 	mov	r5,r16
   26554:	000f883a 	mov	r7,zero
   26558:	01800284 	movi	r6,10
   2655c:	e009883a 	mov	r4,fp
   26560:	00285480 	call	28548 <__multadd>
   26564:	1021883a 	mov	r16,r2
   26568:	000f883a 	mov	r7,zero
   2656c:	01800284 	movi	r6,10
   26570:	880b883a 	mov	r5,r17
   26574:	e009883a 	mov	r4,fp
   26578:	8d002526 	beq	r17,r20,26610 <_dtoa_r+0xf9c>
   2657c:	00285480 	call	28548 <__multadd>
   26580:	a00b883a 	mov	r5,r20
   26584:	000f883a 	mov	r7,zero
   26588:	01800284 	movi	r6,10
   2658c:	e009883a 	mov	r4,fp
   26590:	1023883a 	mov	r17,r2
   26594:	00285480 	call	28548 <__multadd>
   26598:	1029883a 	mov	r20,r2
   2659c:	b027883a 	mov	r19,r22
   265a0:	003fc006 	br	264a4 <_gp+0xfffec9d4>
   265a4:	9011883a 	mov	r8,r18
   265a8:	00800e0e 	bge	zero,r2,265e4 <_dtoa_r+0xf70>
   265ac:	800b883a 	mov	r5,r16
   265b0:	01800044 	movi	r6,1
   265b4:	e009883a 	mov	r4,fp
   265b8:	da001715 	stw	r8,92(sp)
   265bc:	0028bf80 	call	28bf8 <__lshift>
   265c0:	a80b883a 	mov	r5,r21
   265c4:	1009883a 	mov	r4,r2
   265c8:	1021883a 	mov	r16,r2
   265cc:	0028d400 	call	28d40 <__mcmp>
   265d0:	da001717 	ldw	r8,92(sp)
   265d4:	0081960e 	bge	zero,r2,26c30 <_dtoa_r+0x15bc>
   265d8:	00800e44 	movi	r2,57
   265dc:	40817026 	beq	r8,r2,26ba0 <_dtoa_r+0x152c>
   265e0:	ba000c44 	addi	r8,r23,49
   265e4:	8825883a 	mov	r18,r17
   265e8:	9dc00044 	addi	r23,r19,1
   265ec:	9a000005 	stb	r8,0(r19)
   265f0:	a023883a 	mov	r17,r20
   265f4:	dc000915 	stw	r16,36(sp)
   265f8:	003f2406 	br	2628c <_gp+0xfffec7bc>
   265fc:	00800e44 	movi	r2,57
   26600:	9011883a 	mov	r8,r18
   26604:	90816626 	beq	r18,r2,26ba0 <_dtoa_r+0x152c>
   26608:	05bff516 	blt	zero,r22,265e0 <_gp+0xfffecb10>
   2660c:	003ff506 	br	265e4 <_gp+0xfffecb14>
   26610:	00285480 	call	28548 <__multadd>
   26614:	1023883a 	mov	r17,r2
   26618:	1029883a 	mov	r20,r2
   2661c:	003fdf06 	br	2659c <_gp+0xfffecacc>
   26620:	e009883a 	mov	r4,fp
   26624:	00285200 	call	28520 <_Bfree>
   26628:	00800044 	movi	r2,1
   2662c:	003fbc06 	br	26520 <_gp+0xfffeca50>
   26630:	a80b883a 	mov	r5,r21
   26634:	8009883a 	mov	r4,r16
   26638:	0028d400 	call	28d40 <__mcmp>
   2663c:	103edb0e 	bge	r2,zero,261ac <_gp+0xfffec6dc>
   26640:	800b883a 	mov	r5,r16
   26644:	000f883a 	mov	r7,zero
   26648:	01800284 	movi	r6,10
   2664c:	e009883a 	mov	r4,fp
   26650:	00285480 	call	28548 <__multadd>
   26654:	1021883a 	mov	r16,r2
   26658:	d8800517 	ldw	r2,20(sp)
   2665c:	d8c00b17 	ldw	r3,44(sp)
   26660:	10bfffc4 	addi	r2,r2,-1
   26664:	d8800515 	stw	r2,20(sp)
   26668:	183f761e 	bne	r3,zero,26444 <_gp+0xfffec974>
   2666c:	d9000c17 	ldw	r4,48(sp)
   26670:	0101730e 	bge	zero,r4,26c40 <_dtoa_r+0x15cc>
   26674:	d9000615 	stw	r4,24(sp)
   26678:	003ed006 	br	261bc <_gp+0xfffec6ec>
   2667c:	00800084 	movi	r2,2
   26680:	3081861e 	bne	r6,r2,26c9c <_dtoa_r+0x1628>
   26684:	d8000b15 	stw	zero,44(sp)
   26688:	003f3c06 	br	2637c <_gp+0xfffec8ac>
   2668c:	dc000917 	ldw	r16,36(sp)
   26690:	003e9206 	br	260dc <_gp+0xfffec60c>
   26694:	d9c00317 	ldw	r7,12(sp)
   26698:	00800084 	movi	r2,2
   2669c:	11fec50e 	bge	r2,r7,261b4 <_gp+0xfffec6e4>
   266a0:	d9000617 	ldw	r4,24(sp)
   266a4:	20013c1e 	bne	r4,zero,26b98 <_dtoa_r+0x1524>
   266a8:	a80b883a 	mov	r5,r21
   266ac:	000f883a 	mov	r7,zero
   266b0:	01800144 	movi	r6,5
   266b4:	e009883a 	mov	r4,fp
   266b8:	00285480 	call	28548 <__multadd>
   266bc:	100b883a 	mov	r5,r2
   266c0:	8009883a 	mov	r4,r16
   266c4:	102b883a 	mov	r21,r2
   266c8:	0028d400 	call	28d40 <__mcmp>
   266cc:	dc000915 	stw	r16,36(sp)
   266d0:	00bf410e 	bge	zero,r2,263d8 <_gp+0xfffec908>
   266d4:	d9c00717 	ldw	r7,28(sp)
   266d8:	00800c44 	movi	r2,49
   266dc:	38800005 	stb	r2,0(r7)
   266e0:	d8800517 	ldw	r2,20(sp)
   266e4:	3dc00044 	addi	r23,r7,1
   266e8:	10800044 	addi	r2,r2,1
   266ec:	d8800515 	stw	r2,20(sp)
   266f0:	003f3d06 	br	263e8 <_gp+0xfffec918>
   266f4:	d9800517 	ldw	r6,20(sp)
   266f8:	d9c00717 	ldw	r7,28(sp)
   266fc:	00800c44 	movi	r2,49
   26700:	31800044 	addi	r6,r6,1
   26704:	d9800515 	stw	r6,20(sp)
   26708:	38800005 	stb	r2,0(r7)
   2670c:	003edf06 	br	2628c <_gp+0xfffec7bc>
   26710:	d8000b15 	stw	zero,44(sp)
   26714:	003c9f06 	br	25994 <_gp+0xfffebec4>
   26718:	903e7e1e 	bne	r18,zero,26114 <_gp+0xfffec644>
   2671c:	00800434 	movhi	r2,16
   26720:	10bfffc4 	addi	r2,r2,-1
   26724:	9884703a 	and	r2,r19,r2
   26728:	1000ea1e 	bne	r2,zero,26ad4 <_dtoa_r+0x1460>
   2672c:	9cdffc2c 	andhi	r19,r19,32752
   26730:	9800e826 	beq	r19,zero,26ad4 <_dtoa_r+0x1460>
   26734:	d9c00817 	ldw	r7,32(sp)
   26738:	b5800044 	addi	r22,r22,1
   2673c:	04c00044 	movi	r19,1
   26740:	39c00044 	addi	r7,r7,1
   26744:	d9c00815 	stw	r7,32(sp)
   26748:	d8800d17 	ldw	r2,52(sp)
   2674c:	103e721e 	bne	r2,zero,26118 <_gp+0xfffec648>
   26750:	00800044 	movi	r2,1
   26754:	003e7906 	br	2613c <_gp+0xfffec66c>
   26758:	8009883a 	mov	r4,r16
   2675c:	002d5640 	call	2d564 <__floatsidf>
   26760:	d9800f17 	ldw	r6,60(sp)
   26764:	d9c01017 	ldw	r7,64(sp)
   26768:	1009883a 	mov	r4,r2
   2676c:	180b883a 	mov	r5,r3
   26770:	00219cc0 	call	219cc <__muldf3>
   26774:	000d883a 	mov	r6,zero
   26778:	01d00734 	movhi	r7,16412
   2677c:	1009883a 	mov	r4,r2
   26780:	180b883a 	mov	r5,r3
   26784:	00211200 	call	21120 <__adddf3>
   26788:	047f3034 	movhi	r17,64704
   2678c:	1021883a 	mov	r16,r2
   26790:	1c63883a 	add	r17,r3,r17
   26794:	d9000f17 	ldw	r4,60(sp)
   26798:	d9401017 	ldw	r5,64(sp)
   2679c:	000d883a 	mov	r6,zero
   267a0:	01d00534 	movhi	r7,16404
   267a4:	00220e40 	call	220e4 <__subdf3>
   267a8:	800d883a 	mov	r6,r16
   267ac:	880f883a 	mov	r7,r17
   267b0:	1009883a 	mov	r4,r2
   267b4:	180b883a 	mov	r5,r3
   267b8:	102b883a 	mov	r21,r2
   267bc:	1829883a 	mov	r20,r3
   267c0:	0022e180 	call	22e18 <__gedf2>
   267c4:	00806c16 	blt	zero,r2,26978 <_dtoa_r+0x1304>
   267c8:	89e0003c 	xorhi	r7,r17,32768
   267cc:	800d883a 	mov	r6,r16
   267d0:	a809883a 	mov	r4,r21
   267d4:	a00b883a 	mov	r5,r20
   267d8:	002d4700 	call	2d470 <__ledf2>
   267dc:	103d7e0e 	bge	r2,zero,25dd8 <_gp+0xfffec308>
   267e0:	002b883a 	mov	r21,zero
   267e4:	0023883a 	mov	r17,zero
   267e8:	003efb06 	br	263d8 <_gp+0xfffec908>
   267ec:	d8800717 	ldw	r2,28(sp)
   267f0:	003bd006 	br	25734 <_gp+0xfffebc64>
   267f4:	d9000a17 	ldw	r4,40(sp)
   267f8:	d9800d17 	ldw	r6,52(sp)
   267fc:	dd400a15 	stw	r21,40(sp)
   26800:	a905c83a 	sub	r2,r21,r4
   26804:	308d883a 	add	r6,r6,r2
   26808:	d9800d15 	stw	r6,52(sp)
   2680c:	002b883a 	mov	r21,zero
   26810:	003e0606 	br	2602c <_gp+0xfffec55c>
   26814:	9023883a 	mov	r17,r18
   26818:	9829883a 	mov	r20,r19
   2681c:	04000084 	movi	r16,2
   26820:	003c9206 	br	25a6c <_gp+0xfffebf9c>
   26824:	04000044 	movi	r16,1
   26828:	dc000c15 	stw	r16,48(sp)
   2682c:	dc000615 	stw	r16,24(sp)
   26830:	dc002215 	stw	r16,136(sp)
   26834:	e0001115 	stw	zero,68(fp)
   26838:	000b883a 	mov	r5,zero
   2683c:	003c6906 	br	259e4 <_gp+0xfffebf14>
   26840:	3021883a 	mov	r16,r6
   26844:	003ffb06 	br	26834 <_gp+0xfffecd64>
   26848:	1000021e 	bne	r2,zero,26854 <_dtoa_r+0x11e0>
   2684c:	4200004c 	andi	r8,r8,1
   26850:	403e7d1e 	bne	r8,zero,26248 <_gp+0xfffec778>
   26854:	01000c04 	movi	r4,48
   26858:	00000106 	br	26860 <_dtoa_r+0x11ec>
   2685c:	102f883a 	mov	r23,r2
   26860:	b8bfffc4 	addi	r2,r23,-1
   26864:	10c00007 	ldb	r3,0(r2)
   26868:	193ffc26 	beq	r3,r4,2685c <_gp+0xfffecd8c>
   2686c:	003e8706 	br	2628c <_gp+0xfffec7bc>
   26870:	d8800517 	ldw	r2,20(sp)
   26874:	00a3c83a 	sub	r17,zero,r2
   26878:	8800a426 	beq	r17,zero,26b0c <_dtoa_r+0x1498>
   2687c:	888003cc 	andi	r2,r17,15
   26880:	100490fa 	slli	r2,r2,3
   26884:	00c000f4 	movhi	r3,3
   26888:	18ffc404 	addi	r3,r3,-240
   2688c:	1885883a 	add	r2,r3,r2
   26890:	11800017 	ldw	r6,0(r2)
   26894:	11c00117 	ldw	r7,4(r2)
   26898:	9009883a 	mov	r4,r18
   2689c:	980b883a 	mov	r5,r19
   268a0:	8823d13a 	srai	r17,r17,4
   268a4:	00219cc0 	call	219cc <__muldf3>
   268a8:	d8800f15 	stw	r2,60(sp)
   268ac:	d8c01015 	stw	r3,64(sp)
   268b0:	8800e826 	beq	r17,zero,26c54 <_dtoa_r+0x15e0>
   268b4:	050000f4 	movhi	r20,3
   268b8:	a53fba04 	addi	r20,r20,-280
   268bc:	04000084 	movi	r16,2
   268c0:	8980004c 	andi	r6,r17,1
   268c4:	1009883a 	mov	r4,r2
   268c8:	8823d07a 	srai	r17,r17,1
   268cc:	180b883a 	mov	r5,r3
   268d0:	30000426 	beq	r6,zero,268e4 <_dtoa_r+0x1270>
   268d4:	a1800017 	ldw	r6,0(r20)
   268d8:	a1c00117 	ldw	r7,4(r20)
   268dc:	84000044 	addi	r16,r16,1
   268e0:	00219cc0 	call	219cc <__muldf3>
   268e4:	a5000204 	addi	r20,r20,8
   268e8:	883ff51e 	bne	r17,zero,268c0 <_gp+0xfffecdf0>
   268ec:	d8800f15 	stw	r2,60(sp)
   268f0:	d8c01015 	stw	r3,64(sp)
   268f4:	003c7606 	br	25ad0 <_gp+0xfffec000>
   268f8:	00c00c04 	movi	r3,48
   268fc:	10c00005 	stb	r3,0(r2)
   26900:	d8c00517 	ldw	r3,20(sp)
   26904:	bd3fffc3 	ldbu	r20,-1(r23)
   26908:	18c00044 	addi	r3,r3,1
   2690c:	d8c00515 	stw	r3,20(sp)
   26910:	003db906 	br	25ff8 <_gp+0xfffec528>
   26914:	89400117 	ldw	r5,4(r17)
   26918:	e009883a 	mov	r4,fp
   2691c:	00284780 	call	28478 <_Balloc>
   26920:	89800417 	ldw	r6,16(r17)
   26924:	89400304 	addi	r5,r17,12
   26928:	11000304 	addi	r4,r2,12
   2692c:	31800084 	addi	r6,r6,2
   26930:	318d883a 	add	r6,r6,r6
   26934:	318d883a 	add	r6,r6,r6
   26938:	1027883a 	mov	r19,r2
   2693c:	00280ac0 	call	280ac <memcpy>
   26940:	01800044 	movi	r6,1
   26944:	980b883a 	mov	r5,r19
   26948:	e009883a 	mov	r4,fp
   2694c:	0028bf80 	call	28bf8 <__lshift>
   26950:	1029883a 	mov	r20,r2
   26954:	003ecc06 	br	26488 <_gp+0xfffec9b8>
   26958:	00800e44 	movi	r2,57
   2695c:	90809026 	beq	r18,r2,26ba0 <_dtoa_r+0x152c>
   26960:	92000044 	addi	r8,r18,1
   26964:	003f1f06 	br	265e4 <_gp+0xfffecb14>
   26968:	9011883a 	mov	r8,r18
   2696c:	8825883a 	mov	r18,r17
   26970:	a023883a 	mov	r17,r20
   26974:	003e2906 	br	2621c <_gp+0xfffec74c>
   26978:	002b883a 	mov	r21,zero
   2697c:	0023883a 	mov	r17,zero
   26980:	003f5406 	br	266d4 <_gp+0xfffecc04>
   26984:	61bfffc4 	addi	r6,r12,-1
   26988:	300490fa 	slli	r2,r6,3
   2698c:	00c000f4 	movhi	r3,3
   26990:	18ffc404 	addi	r3,r3,-240
   26994:	1885883a 	add	r2,r3,r2
   26998:	11000017 	ldw	r4,0(r2)
   2699c:	11400117 	ldw	r5,4(r2)
   269a0:	d8800717 	ldw	r2,28(sp)
   269a4:	880f883a 	mov	r7,r17
   269a8:	d9801215 	stw	r6,72(sp)
   269ac:	800d883a 	mov	r6,r16
   269b0:	db001615 	stw	r12,88(sp)
   269b4:	15c00044 	addi	r23,r2,1
   269b8:	00219cc0 	call	219cc <__muldf3>
   269bc:	d9401017 	ldw	r5,64(sp)
   269c0:	d9000f17 	ldw	r4,60(sp)
   269c4:	d8c01515 	stw	r3,84(sp)
   269c8:	d8801415 	stw	r2,80(sp)
   269cc:	0022ef40 	call	22ef4 <__fixdfsi>
   269d0:	1009883a 	mov	r4,r2
   269d4:	1021883a 	mov	r16,r2
   269d8:	002d5640 	call	2d564 <__floatsidf>
   269dc:	d9000f17 	ldw	r4,60(sp)
   269e0:	d9401017 	ldw	r5,64(sp)
   269e4:	100d883a 	mov	r6,r2
   269e8:	180f883a 	mov	r7,r3
   269ec:	00220e40 	call	220e4 <__subdf3>
   269f0:	1829883a 	mov	r20,r3
   269f4:	d8c00717 	ldw	r3,28(sp)
   269f8:	84000c04 	addi	r16,r16,48
   269fc:	1023883a 	mov	r17,r2
   26a00:	1c000005 	stb	r16,0(r3)
   26a04:	db001617 	ldw	r12,88(sp)
   26a08:	00800044 	movi	r2,1
   26a0c:	60802226 	beq	r12,r2,26a98 <_dtoa_r+0x1424>
   26a10:	d9c00717 	ldw	r7,28(sp)
   26a14:	8805883a 	mov	r2,r17
   26a18:	b82b883a 	mov	r21,r23
   26a1c:	3b19883a 	add	r12,r7,r12
   26a20:	6023883a 	mov	r17,r12
   26a24:	a007883a 	mov	r3,r20
   26a28:	dc800f15 	stw	r18,60(sp)
   26a2c:	000d883a 	mov	r6,zero
   26a30:	01d00934 	movhi	r7,16420
   26a34:	1009883a 	mov	r4,r2
   26a38:	180b883a 	mov	r5,r3
   26a3c:	00219cc0 	call	219cc <__muldf3>
   26a40:	180b883a 	mov	r5,r3
   26a44:	1009883a 	mov	r4,r2
   26a48:	1829883a 	mov	r20,r3
   26a4c:	1025883a 	mov	r18,r2
   26a50:	0022ef40 	call	22ef4 <__fixdfsi>
   26a54:	1009883a 	mov	r4,r2
   26a58:	1021883a 	mov	r16,r2
   26a5c:	002d5640 	call	2d564 <__floatsidf>
   26a60:	100d883a 	mov	r6,r2
   26a64:	180f883a 	mov	r7,r3
   26a68:	9009883a 	mov	r4,r18
   26a6c:	a00b883a 	mov	r5,r20
   26a70:	84000c04 	addi	r16,r16,48
   26a74:	00220e40 	call	220e4 <__subdf3>
   26a78:	ad400044 	addi	r21,r21,1
   26a7c:	ac3fffc5 	stb	r16,-1(r21)
   26a80:	ac7fea1e 	bne	r21,r17,26a2c <_gp+0xfffecf5c>
   26a84:	1023883a 	mov	r17,r2
   26a88:	d8801217 	ldw	r2,72(sp)
   26a8c:	dc800f17 	ldw	r18,60(sp)
   26a90:	1829883a 	mov	r20,r3
   26a94:	b8af883a 	add	r23,r23,r2
   26a98:	d9001417 	ldw	r4,80(sp)
   26a9c:	d9401517 	ldw	r5,84(sp)
   26aa0:	000d883a 	mov	r6,zero
   26aa4:	01cff834 	movhi	r7,16352
   26aa8:	00211200 	call	21120 <__adddf3>
   26aac:	880d883a 	mov	r6,r17
   26ab0:	a00f883a 	mov	r7,r20
   26ab4:	1009883a 	mov	r4,r2
   26ab8:	180b883a 	mov	r5,r3
   26abc:	002d4700 	call	2d470 <__ledf2>
   26ac0:	10003e0e 	bge	r2,zero,26bbc <_dtoa_r+0x1548>
   26ac4:	d9001317 	ldw	r4,76(sp)
   26ac8:	bd3fffc3 	ldbu	r20,-1(r23)
   26acc:	d9000515 	stw	r4,20(sp)
   26ad0:	003d3b06 	br	25fc0 <_gp+0xfffec4f0>
   26ad4:	0027883a 	mov	r19,zero
   26ad8:	003f1b06 	br	26748 <_gp+0xfffecc78>
   26adc:	d8800817 	ldw	r2,32(sp)
   26ae0:	11e9c83a 	sub	r20,r2,r7
   26ae4:	0005883a 	mov	r2,zero
   26ae8:	003d5406 	br	2603c <_gp+0xfffec56c>
   26aec:	00800044 	movi	r2,1
   26af0:	003dc706 	br	26210 <_gp+0xfffec740>
   26af4:	d8c00217 	ldw	r3,8(sp)
   26af8:	00800d84 	movi	r2,54
   26afc:	dd400a17 	ldw	r21,40(sp)
   26b00:	10c5c83a 	sub	r2,r2,r3
   26b04:	dd000817 	ldw	r20,32(sp)
   26b08:	003d4c06 	br	2603c <_gp+0xfffec56c>
   26b0c:	dc800f15 	stw	r18,60(sp)
   26b10:	dcc01015 	stw	r19,64(sp)
   26b14:	04000084 	movi	r16,2
   26b18:	003bed06 	br	25ad0 <_gp+0xfffec000>
   26b1c:	d9000617 	ldw	r4,24(sp)
   26b20:	203f0d26 	beq	r4,zero,26758 <_gp+0xfffecc88>
   26b24:	d9800c17 	ldw	r6,48(sp)
   26b28:	01bcab0e 	bge	zero,r6,25dd8 <_gp+0xfffec308>
   26b2c:	d9401017 	ldw	r5,64(sp)
   26b30:	d9000f17 	ldw	r4,60(sp)
   26b34:	000d883a 	mov	r6,zero
   26b38:	01d00934 	movhi	r7,16420
   26b3c:	00219cc0 	call	219cc <__muldf3>
   26b40:	81000044 	addi	r4,r16,1
   26b44:	d8800f15 	stw	r2,60(sp)
   26b48:	d8c01015 	stw	r3,64(sp)
   26b4c:	002d5640 	call	2d564 <__floatsidf>
   26b50:	d9800f17 	ldw	r6,60(sp)
   26b54:	d9c01017 	ldw	r7,64(sp)
   26b58:	1009883a 	mov	r4,r2
   26b5c:	180b883a 	mov	r5,r3
   26b60:	00219cc0 	call	219cc <__muldf3>
   26b64:	01d00734 	movhi	r7,16412
   26b68:	000d883a 	mov	r6,zero
   26b6c:	1009883a 	mov	r4,r2
   26b70:	180b883a 	mov	r5,r3
   26b74:	00211200 	call	21120 <__adddf3>
   26b78:	d9c00517 	ldw	r7,20(sp)
   26b7c:	047f3034 	movhi	r17,64704
   26b80:	1021883a 	mov	r16,r2
   26b84:	39ffffc4 	addi	r7,r7,-1
   26b88:	d9c01315 	stw	r7,76(sp)
   26b8c:	1c63883a 	add	r17,r3,r17
   26b90:	db000c17 	ldw	r12,48(sp)
   26b94:	003bea06 	br	25b40 <_gp+0xfffec070>
   26b98:	dc000915 	stw	r16,36(sp)
   26b9c:	003e0e06 	br	263d8 <_gp+0xfffec908>
   26ba0:	01000e44 	movi	r4,57
   26ba4:	8825883a 	mov	r18,r17
   26ba8:	9dc00044 	addi	r23,r19,1
   26bac:	99000005 	stb	r4,0(r19)
   26bb0:	a023883a 	mov	r17,r20
   26bb4:	dc000915 	stw	r16,36(sp)
   26bb8:	003da406 	br	2624c <_gp+0xfffec77c>
   26bbc:	d9801417 	ldw	r6,80(sp)
   26bc0:	d9c01517 	ldw	r7,84(sp)
   26bc4:	0009883a 	mov	r4,zero
   26bc8:	014ff834 	movhi	r5,16352
   26bcc:	00220e40 	call	220e4 <__subdf3>
   26bd0:	880d883a 	mov	r6,r17
   26bd4:	a00f883a 	mov	r7,r20
   26bd8:	1009883a 	mov	r4,r2
   26bdc:	180b883a 	mov	r5,r3
   26be0:	0022e180 	call	22e18 <__gedf2>
   26be4:	00bc7c0e 	bge	zero,r2,25dd8 <_gp+0xfffec308>
   26be8:	01000c04 	movi	r4,48
   26bec:	00000106 	br	26bf4 <_dtoa_r+0x1580>
   26bf0:	102f883a 	mov	r23,r2
   26bf4:	b8bfffc4 	addi	r2,r23,-1
   26bf8:	10c00007 	ldb	r3,0(r2)
   26bfc:	193ffc26 	beq	r3,r4,26bf0 <_gp+0xfffed120>
   26c00:	d9801317 	ldw	r6,76(sp)
   26c04:	d9800515 	stw	r6,20(sp)
   26c08:	003c4406 	br	25d1c <_gp+0xfffec24c>
   26c0c:	d9801317 	ldw	r6,76(sp)
   26c10:	d9800515 	stw	r6,20(sp)
   26c14:	003cea06 	br	25fc0 <_gp+0xfffec4f0>
   26c18:	dd800f17 	ldw	r22,60(sp)
   26c1c:	dcc01017 	ldw	r19,64(sp)
   26c20:	dc801217 	ldw	r18,72(sp)
   26c24:	003c6c06 	br	25dd8 <_gp+0xfffec308>
   26c28:	903e031e 	bne	r18,zero,26438 <_gp+0xfffec968>
   26c2c:	003ebb06 	br	2671c <_gp+0xfffecc4c>
   26c30:	103e6c1e 	bne	r2,zero,265e4 <_gp+0xfffecb14>
   26c34:	4080004c 	andi	r2,r8,1
   26c38:	103e6a26 	beq	r2,zero,265e4 <_gp+0xfffecb14>
   26c3c:	003e6606 	br	265d8 <_gp+0xfffecb08>
   26c40:	d8c00317 	ldw	r3,12(sp)
   26c44:	00800084 	movi	r2,2
   26c48:	10c02916 	blt	r2,r3,26cf0 <_dtoa_r+0x167c>
   26c4c:	d9000c17 	ldw	r4,48(sp)
   26c50:	003e8806 	br	26674 <_gp+0xfffecba4>
   26c54:	04000084 	movi	r16,2
   26c58:	003b9d06 	br	25ad0 <_gp+0xfffec000>
   26c5c:	d9001317 	ldw	r4,76(sp)
   26c60:	d9000515 	stw	r4,20(sp)
   26c64:	003cd606 	br	25fc0 <_gp+0xfffec4f0>
   26c68:	d8801317 	ldw	r2,76(sp)
   26c6c:	d8800515 	stw	r2,20(sp)
   26c70:	003c2a06 	br	25d1c <_gp+0xfffec24c>
   26c74:	d9800317 	ldw	r6,12(sp)
   26c78:	00800084 	movi	r2,2
   26c7c:	11801516 	blt	r2,r6,26cd4 <_dtoa_r+0x1660>
   26c80:	d9c00c17 	ldw	r7,48(sp)
   26c84:	d9c00615 	stw	r7,24(sp)
   26c88:	003df706 	br	26468 <_gp+0xfffec998>
   26c8c:	193d3926 	beq	r3,r4,26174 <_gp+0xfffec6a4>
   26c90:	00c00f04 	movi	r3,60
   26c94:	1885c83a 	sub	r2,r3,r2
   26c98:	003ddf06 	br	26418 <_gp+0xfffec948>
   26c9c:	e009883a 	mov	r4,fp
   26ca0:	e0001115 	stw	zero,68(fp)
   26ca4:	000b883a 	mov	r5,zero
   26ca8:	00284780 	call	28478 <_Balloc>
   26cac:	d8800715 	stw	r2,28(sp)
   26cb0:	d8c00717 	ldw	r3,28(sp)
   26cb4:	00bfffc4 	movi	r2,-1
   26cb8:	01000044 	movi	r4,1
   26cbc:	d8800c15 	stw	r2,48(sp)
   26cc0:	e0c01015 	stw	r3,64(fp)
   26cc4:	d9000b15 	stw	r4,44(sp)
   26cc8:	d8800615 	stw	r2,24(sp)
   26ccc:	d8002215 	stw	zero,136(sp)
   26cd0:	003c4106 	br	25dd8 <_gp+0xfffec308>
   26cd4:	d8c00c17 	ldw	r3,48(sp)
   26cd8:	d8c00615 	stw	r3,24(sp)
   26cdc:	003e7006 	br	266a0 <_gp+0xfffecbd0>
   26ce0:	04400044 	movi	r17,1
   26ce4:	003b2006 	br	25968 <_gp+0xfffebe98>
   26ce8:	000b883a 	mov	r5,zero
   26cec:	003b3d06 	br	259e4 <_gp+0xfffebf14>
   26cf0:	d8800c17 	ldw	r2,48(sp)
   26cf4:	d8800615 	stw	r2,24(sp)
   26cf8:	003e6906 	br	266a0 <_gp+0xfffecbd0>

00026cfc <__fp_unlock>:
   26cfc:	0005883a 	mov	r2,zero
   26d00:	f800283a 	ret

00026d04 <_cleanup_r>:
   26d04:	014000f4 	movhi	r5,3
   26d08:	296ce404 	addi	r5,r5,-19568
   26d0c:	002761c1 	jmpi	2761c <_fwalk_reent>

00026d10 <__sinit.part.1>:
   26d10:	defff704 	addi	sp,sp,-36
   26d14:	00c000b4 	movhi	r3,2
   26d18:	dfc00815 	stw	ra,32(sp)
   26d1c:	ddc00715 	stw	r23,28(sp)
   26d20:	dd800615 	stw	r22,24(sp)
   26d24:	dd400515 	stw	r21,20(sp)
   26d28:	dd000415 	stw	r20,16(sp)
   26d2c:	dcc00315 	stw	r19,12(sp)
   26d30:	dc800215 	stw	r18,8(sp)
   26d34:	dc400115 	stw	r17,4(sp)
   26d38:	dc000015 	stw	r16,0(sp)
   26d3c:	18db4104 	addi	r3,r3,27908
   26d40:	24000117 	ldw	r16,4(r4)
   26d44:	20c00f15 	stw	r3,60(r4)
   26d48:	2080bb04 	addi	r2,r4,748
   26d4c:	00c000c4 	movi	r3,3
   26d50:	20c0b915 	stw	r3,740(r4)
   26d54:	2080ba15 	stw	r2,744(r4)
   26d58:	2000b815 	stw	zero,736(r4)
   26d5c:	05c00204 	movi	r23,8
   26d60:	00800104 	movi	r2,4
   26d64:	2025883a 	mov	r18,r4
   26d68:	b80d883a 	mov	r6,r23
   26d6c:	81001704 	addi	r4,r16,92
   26d70:	000b883a 	mov	r5,zero
   26d74:	80000015 	stw	zero,0(r16)
   26d78:	80000115 	stw	zero,4(r16)
   26d7c:	80000215 	stw	zero,8(r16)
   26d80:	8080030d 	sth	r2,12(r16)
   26d84:	80001915 	stw	zero,100(r16)
   26d88:	8000038d 	sth	zero,14(r16)
   26d8c:	80000415 	stw	zero,16(r16)
   26d90:	80000515 	stw	zero,20(r16)
   26d94:	80000615 	stw	zero,24(r16)
   26d98:	00283500 	call	28350 <memset>
   26d9c:	058000f4 	movhi	r22,3
   26da0:	94400217 	ldw	r17,8(r18)
   26da4:	054000f4 	movhi	r21,3
   26da8:	050000f4 	movhi	r20,3
   26dac:	04c000f4 	movhi	r19,3
   26db0:	b5a6a804 	addi	r22,r22,-25952
   26db4:	ad66bf04 	addi	r21,r21,-25860
   26db8:	a526de04 	addi	r20,r20,-25736
   26dbc:	9ce6f504 	addi	r19,r19,-25644
   26dc0:	85800815 	stw	r22,32(r16)
   26dc4:	85400915 	stw	r21,36(r16)
   26dc8:	85000a15 	stw	r20,40(r16)
   26dcc:	84c00b15 	stw	r19,44(r16)
   26dd0:	84000715 	stw	r16,28(r16)
   26dd4:	00800284 	movi	r2,10
   26dd8:	8880030d 	sth	r2,12(r17)
   26ddc:	00800044 	movi	r2,1
   26de0:	b80d883a 	mov	r6,r23
   26de4:	89001704 	addi	r4,r17,92
   26de8:	000b883a 	mov	r5,zero
   26dec:	88000015 	stw	zero,0(r17)
   26df0:	88000115 	stw	zero,4(r17)
   26df4:	88000215 	stw	zero,8(r17)
   26df8:	88001915 	stw	zero,100(r17)
   26dfc:	8880038d 	sth	r2,14(r17)
   26e00:	88000415 	stw	zero,16(r17)
   26e04:	88000515 	stw	zero,20(r17)
   26e08:	88000615 	stw	zero,24(r17)
   26e0c:	00283500 	call	28350 <memset>
   26e10:	94000317 	ldw	r16,12(r18)
   26e14:	00800484 	movi	r2,18
   26e18:	8c400715 	stw	r17,28(r17)
   26e1c:	8d800815 	stw	r22,32(r17)
   26e20:	8d400915 	stw	r21,36(r17)
   26e24:	8d000a15 	stw	r20,40(r17)
   26e28:	8cc00b15 	stw	r19,44(r17)
   26e2c:	8080030d 	sth	r2,12(r16)
   26e30:	00800084 	movi	r2,2
   26e34:	80000015 	stw	zero,0(r16)
   26e38:	80000115 	stw	zero,4(r16)
   26e3c:	80000215 	stw	zero,8(r16)
   26e40:	80001915 	stw	zero,100(r16)
   26e44:	8080038d 	sth	r2,14(r16)
   26e48:	80000415 	stw	zero,16(r16)
   26e4c:	80000515 	stw	zero,20(r16)
   26e50:	80000615 	stw	zero,24(r16)
   26e54:	b80d883a 	mov	r6,r23
   26e58:	000b883a 	mov	r5,zero
   26e5c:	81001704 	addi	r4,r16,92
   26e60:	00283500 	call	28350 <memset>
   26e64:	00800044 	movi	r2,1
   26e68:	84000715 	stw	r16,28(r16)
   26e6c:	85800815 	stw	r22,32(r16)
   26e70:	85400915 	stw	r21,36(r16)
   26e74:	85000a15 	stw	r20,40(r16)
   26e78:	84c00b15 	stw	r19,44(r16)
   26e7c:	90800e15 	stw	r2,56(r18)
   26e80:	dfc00817 	ldw	ra,32(sp)
   26e84:	ddc00717 	ldw	r23,28(sp)
   26e88:	dd800617 	ldw	r22,24(sp)
   26e8c:	dd400517 	ldw	r21,20(sp)
   26e90:	dd000417 	ldw	r20,16(sp)
   26e94:	dcc00317 	ldw	r19,12(sp)
   26e98:	dc800217 	ldw	r18,8(sp)
   26e9c:	dc400117 	ldw	r17,4(sp)
   26ea0:	dc000017 	ldw	r16,0(sp)
   26ea4:	dec00904 	addi	sp,sp,36
   26ea8:	f800283a 	ret

00026eac <__fp_lock>:
   26eac:	0005883a 	mov	r2,zero
   26eb0:	f800283a 	ret

00026eb4 <__sfmoreglue>:
   26eb4:	defffc04 	addi	sp,sp,-16
   26eb8:	dc400115 	stw	r17,4(sp)
   26ebc:	2c7fffc4 	addi	r17,r5,-1
   26ec0:	8c401a24 	muli	r17,r17,104
   26ec4:	dc800215 	stw	r18,8(sp)
   26ec8:	2825883a 	mov	r18,r5
   26ecc:	89401d04 	addi	r5,r17,116
   26ed0:	dc000015 	stw	r16,0(sp)
   26ed4:	dfc00315 	stw	ra,12(sp)
   26ed8:	00277bc0 	call	277bc <_malloc_r>
   26edc:	1021883a 	mov	r16,r2
   26ee0:	10000726 	beq	r2,zero,26f00 <__sfmoreglue+0x4c>
   26ee4:	11000304 	addi	r4,r2,12
   26ee8:	10000015 	stw	zero,0(r2)
   26eec:	14800115 	stw	r18,4(r2)
   26ef0:	11000215 	stw	r4,8(r2)
   26ef4:	89801a04 	addi	r6,r17,104
   26ef8:	000b883a 	mov	r5,zero
   26efc:	00283500 	call	28350 <memset>
   26f00:	8005883a 	mov	r2,r16
   26f04:	dfc00317 	ldw	ra,12(sp)
   26f08:	dc800217 	ldw	r18,8(sp)
   26f0c:	dc400117 	ldw	r17,4(sp)
   26f10:	dc000017 	ldw	r16,0(sp)
   26f14:	dec00404 	addi	sp,sp,16
   26f18:	f800283a 	ret

00026f1c <__sfp>:
   26f1c:	defffb04 	addi	sp,sp,-20
   26f20:	dc000015 	stw	r16,0(sp)
   26f24:	040000f4 	movhi	r16,3
   26f28:	8406b604 	addi	r16,r16,6872
   26f2c:	dcc00315 	stw	r19,12(sp)
   26f30:	2027883a 	mov	r19,r4
   26f34:	81000017 	ldw	r4,0(r16)
   26f38:	dfc00415 	stw	ra,16(sp)
   26f3c:	dc800215 	stw	r18,8(sp)
   26f40:	20800e17 	ldw	r2,56(r4)
   26f44:	dc400115 	stw	r17,4(sp)
   26f48:	1000021e 	bne	r2,zero,26f54 <__sfp+0x38>
   26f4c:	0026d100 	call	26d10 <__sinit.part.1>
   26f50:	81000017 	ldw	r4,0(r16)
   26f54:	2480b804 	addi	r18,r4,736
   26f58:	047fffc4 	movi	r17,-1
   26f5c:	91000117 	ldw	r4,4(r18)
   26f60:	94000217 	ldw	r16,8(r18)
   26f64:	213fffc4 	addi	r4,r4,-1
   26f68:	20000a16 	blt	r4,zero,26f94 <__sfp+0x78>
   26f6c:	8080030f 	ldh	r2,12(r16)
   26f70:	10000c26 	beq	r2,zero,26fa4 <__sfp+0x88>
   26f74:	80c01d04 	addi	r3,r16,116
   26f78:	00000206 	br	26f84 <__sfp+0x68>
   26f7c:	18bfe60f 	ldh	r2,-104(r3)
   26f80:	10000826 	beq	r2,zero,26fa4 <__sfp+0x88>
   26f84:	213fffc4 	addi	r4,r4,-1
   26f88:	1c3ffd04 	addi	r16,r3,-12
   26f8c:	18c01a04 	addi	r3,r3,104
   26f90:	247ffa1e 	bne	r4,r17,26f7c <_gp+0xfffed4ac>
   26f94:	90800017 	ldw	r2,0(r18)
   26f98:	10001d26 	beq	r2,zero,27010 <__sfp+0xf4>
   26f9c:	1025883a 	mov	r18,r2
   26fa0:	003fee06 	br	26f5c <_gp+0xfffed48c>
   26fa4:	00bfffc4 	movi	r2,-1
   26fa8:	8080038d 	sth	r2,14(r16)
   26fac:	00800044 	movi	r2,1
   26fb0:	8080030d 	sth	r2,12(r16)
   26fb4:	80001915 	stw	zero,100(r16)
   26fb8:	80000015 	stw	zero,0(r16)
   26fbc:	80000215 	stw	zero,8(r16)
   26fc0:	80000115 	stw	zero,4(r16)
   26fc4:	80000415 	stw	zero,16(r16)
   26fc8:	80000515 	stw	zero,20(r16)
   26fcc:	80000615 	stw	zero,24(r16)
   26fd0:	01800204 	movi	r6,8
   26fd4:	000b883a 	mov	r5,zero
   26fd8:	81001704 	addi	r4,r16,92
   26fdc:	00283500 	call	28350 <memset>
   26fe0:	8005883a 	mov	r2,r16
   26fe4:	80000c15 	stw	zero,48(r16)
   26fe8:	80000d15 	stw	zero,52(r16)
   26fec:	80001115 	stw	zero,68(r16)
   26ff0:	80001215 	stw	zero,72(r16)
   26ff4:	dfc00417 	ldw	ra,16(sp)
   26ff8:	dcc00317 	ldw	r19,12(sp)
   26ffc:	dc800217 	ldw	r18,8(sp)
   27000:	dc400117 	ldw	r17,4(sp)
   27004:	dc000017 	ldw	r16,0(sp)
   27008:	dec00504 	addi	sp,sp,20
   2700c:	f800283a 	ret
   27010:	01400104 	movi	r5,4
   27014:	9809883a 	mov	r4,r19
   27018:	0026eb40 	call	26eb4 <__sfmoreglue>
   2701c:	90800015 	stw	r2,0(r18)
   27020:	103fde1e 	bne	r2,zero,26f9c <_gp+0xfffed4cc>
   27024:	00800304 	movi	r2,12
   27028:	98800015 	stw	r2,0(r19)
   2702c:	0005883a 	mov	r2,zero
   27030:	003ff006 	br	26ff4 <_gp+0xfffed524>

00027034 <_cleanup>:
   27034:	008000f4 	movhi	r2,3
   27038:	1086b604 	addi	r2,r2,6872
   2703c:	11000017 	ldw	r4,0(r2)
   27040:	014000f4 	movhi	r5,3
   27044:	296ce404 	addi	r5,r5,-19568
   27048:	002761c1 	jmpi	2761c <_fwalk_reent>

0002704c <__sinit>:
   2704c:	20800e17 	ldw	r2,56(r4)
   27050:	10000126 	beq	r2,zero,27058 <__sinit+0xc>
   27054:	f800283a 	ret
   27058:	0026d101 	jmpi	26d10 <__sinit.part.1>

0002705c <__sfp_lock_acquire>:
   2705c:	f800283a 	ret

00027060 <__sfp_lock_release>:
   27060:	f800283a 	ret

00027064 <__sinit_lock_acquire>:
   27064:	f800283a 	ret

00027068 <__sinit_lock_release>:
   27068:	f800283a 	ret

0002706c <__fp_lock_all>:
   2706c:	008000f4 	movhi	r2,3
   27070:	1086b704 	addi	r2,r2,6876
   27074:	11000017 	ldw	r4,0(r2)
   27078:	014000b4 	movhi	r5,2
   2707c:	295bab04 	addi	r5,r5,28332
   27080:	00275581 	jmpi	27558 <_fwalk>

00027084 <__fp_unlock_all>:
   27084:	008000f4 	movhi	r2,3
   27088:	1086b704 	addi	r2,r2,6876
   2708c:	11000017 	ldw	r4,0(r2)
   27090:	014000b4 	movhi	r5,2
   27094:	295b3f04 	addi	r5,r5,27900
   27098:	00275581 	jmpi	27558 <_fwalk>

0002709c <__sfvwrite_r>:
   2709c:	30800217 	ldw	r2,8(r6)
   270a0:	10006726 	beq	r2,zero,27240 <__sfvwrite_r+0x1a4>
   270a4:	28c0030b 	ldhu	r3,12(r5)
   270a8:	defff404 	addi	sp,sp,-48
   270ac:	dd400715 	stw	r21,28(sp)
   270b0:	dd000615 	stw	r20,24(sp)
   270b4:	dc000215 	stw	r16,8(sp)
   270b8:	dfc00b15 	stw	ra,44(sp)
   270bc:	df000a15 	stw	fp,40(sp)
   270c0:	ddc00915 	stw	r23,36(sp)
   270c4:	dd800815 	stw	r22,32(sp)
   270c8:	dcc00515 	stw	r19,20(sp)
   270cc:	dc800415 	stw	r18,16(sp)
   270d0:	dc400315 	stw	r17,12(sp)
   270d4:	1880020c 	andi	r2,r3,8
   270d8:	2821883a 	mov	r16,r5
   270dc:	202b883a 	mov	r21,r4
   270e0:	3029883a 	mov	r20,r6
   270e4:	10002726 	beq	r2,zero,27184 <__sfvwrite_r+0xe8>
   270e8:	28800417 	ldw	r2,16(r5)
   270ec:	10002526 	beq	r2,zero,27184 <__sfvwrite_r+0xe8>
   270f0:	1880008c 	andi	r2,r3,2
   270f4:	a4400017 	ldw	r17,0(r20)
   270f8:	10002a26 	beq	r2,zero,271a4 <__sfvwrite_r+0x108>
   270fc:	05a00034 	movhi	r22,32768
   27100:	0027883a 	mov	r19,zero
   27104:	0025883a 	mov	r18,zero
   27108:	b5bf0004 	addi	r22,r22,-1024
   2710c:	980d883a 	mov	r6,r19
   27110:	a809883a 	mov	r4,r21
   27114:	90004626 	beq	r18,zero,27230 <__sfvwrite_r+0x194>
   27118:	900f883a 	mov	r7,r18
   2711c:	b480022e 	bgeu	r22,r18,27128 <__sfvwrite_r+0x8c>
   27120:	01e00034 	movhi	r7,32768
   27124:	39ff0004 	addi	r7,r7,-1024
   27128:	80800917 	ldw	r2,36(r16)
   2712c:	81400717 	ldw	r5,28(r16)
   27130:	103ee83a 	callr	r2
   27134:	0080570e 	bge	zero,r2,27294 <__sfvwrite_r+0x1f8>
   27138:	a0c00217 	ldw	r3,8(r20)
   2713c:	98a7883a 	add	r19,r19,r2
   27140:	90a5c83a 	sub	r18,r18,r2
   27144:	1885c83a 	sub	r2,r3,r2
   27148:	a0800215 	stw	r2,8(r20)
   2714c:	103fef1e 	bne	r2,zero,2710c <_gp+0xfffed63c>
   27150:	0005883a 	mov	r2,zero
   27154:	dfc00b17 	ldw	ra,44(sp)
   27158:	df000a17 	ldw	fp,40(sp)
   2715c:	ddc00917 	ldw	r23,36(sp)
   27160:	dd800817 	ldw	r22,32(sp)
   27164:	dd400717 	ldw	r21,28(sp)
   27168:	dd000617 	ldw	r20,24(sp)
   2716c:	dcc00517 	ldw	r19,20(sp)
   27170:	dc800417 	ldw	r18,16(sp)
   27174:	dc400317 	ldw	r17,12(sp)
   27178:	dc000217 	ldw	r16,8(sp)
   2717c:	dec00c04 	addi	sp,sp,48
   27180:	f800283a 	ret
   27184:	800b883a 	mov	r5,r16
   27188:	a809883a 	mov	r4,r21
   2718c:	002b1240 	call	2b124 <__swsetup_r>
   27190:	1000eb1e 	bne	r2,zero,27540 <__sfvwrite_r+0x4a4>
   27194:	80c0030b 	ldhu	r3,12(r16)
   27198:	a4400017 	ldw	r17,0(r20)
   2719c:	1880008c 	andi	r2,r3,2
   271a0:	103fd61e 	bne	r2,zero,270fc <_gp+0xfffed62c>
   271a4:	1880004c 	andi	r2,r3,1
   271a8:	10003f1e 	bne	r2,zero,272a8 <__sfvwrite_r+0x20c>
   271ac:	0039883a 	mov	fp,zero
   271b0:	0025883a 	mov	r18,zero
   271b4:	90001a26 	beq	r18,zero,27220 <__sfvwrite_r+0x184>
   271b8:	1880800c 	andi	r2,r3,512
   271bc:	84c00217 	ldw	r19,8(r16)
   271c0:	10002126 	beq	r2,zero,27248 <__sfvwrite_r+0x1ac>
   271c4:	982f883a 	mov	r23,r19
   271c8:	94c09336 	bltu	r18,r19,27418 <__sfvwrite_r+0x37c>
   271cc:	1881200c 	andi	r2,r3,1152
   271d0:	10009e1e 	bne	r2,zero,2744c <__sfvwrite_r+0x3b0>
   271d4:	81000017 	ldw	r4,0(r16)
   271d8:	b80d883a 	mov	r6,r23
   271dc:	e00b883a 	mov	r5,fp
   271e0:	00281f40 	call	281f4 <memmove>
   271e4:	80c00217 	ldw	r3,8(r16)
   271e8:	81000017 	ldw	r4,0(r16)
   271ec:	9005883a 	mov	r2,r18
   271f0:	1ce7c83a 	sub	r19,r3,r19
   271f4:	25cf883a 	add	r7,r4,r23
   271f8:	84c00215 	stw	r19,8(r16)
   271fc:	81c00015 	stw	r7,0(r16)
   27200:	a0c00217 	ldw	r3,8(r20)
   27204:	e0b9883a 	add	fp,fp,r2
   27208:	90a5c83a 	sub	r18,r18,r2
   2720c:	18a7c83a 	sub	r19,r3,r2
   27210:	a4c00215 	stw	r19,8(r20)
   27214:	983fce26 	beq	r19,zero,27150 <_gp+0xfffed680>
   27218:	80c0030b 	ldhu	r3,12(r16)
   2721c:	903fe61e 	bne	r18,zero,271b8 <_gp+0xfffed6e8>
   27220:	8f000017 	ldw	fp,0(r17)
   27224:	8c800117 	ldw	r18,4(r17)
   27228:	8c400204 	addi	r17,r17,8
   2722c:	003fe106 	br	271b4 <_gp+0xfffed6e4>
   27230:	8cc00017 	ldw	r19,0(r17)
   27234:	8c800117 	ldw	r18,4(r17)
   27238:	8c400204 	addi	r17,r17,8
   2723c:	003fb306 	br	2710c <_gp+0xfffed63c>
   27240:	0005883a 	mov	r2,zero
   27244:	f800283a 	ret
   27248:	81000017 	ldw	r4,0(r16)
   2724c:	80800417 	ldw	r2,16(r16)
   27250:	11005736 	bltu	r2,r4,273b0 <__sfvwrite_r+0x314>
   27254:	85c00517 	ldw	r23,20(r16)
   27258:	95c05536 	bltu	r18,r23,273b0 <__sfvwrite_r+0x314>
   2725c:	00a00034 	movhi	r2,32768
   27260:	10bfffc4 	addi	r2,r2,-1
   27264:	9009883a 	mov	r4,r18
   27268:	1480012e 	bgeu	r2,r18,27270 <__sfvwrite_r+0x1d4>
   2726c:	1009883a 	mov	r4,r2
   27270:	b80b883a 	mov	r5,r23
   27274:	002c94c0 	call	2c94c <__divsi3>
   27278:	15cf383a 	mul	r7,r2,r23
   2727c:	81400717 	ldw	r5,28(r16)
   27280:	80800917 	ldw	r2,36(r16)
   27284:	e00d883a 	mov	r6,fp
   27288:	a809883a 	mov	r4,r21
   2728c:	103ee83a 	callr	r2
   27290:	00bfdb16 	blt	zero,r2,27200 <_gp+0xfffed730>
   27294:	8080030b 	ldhu	r2,12(r16)
   27298:	10801014 	ori	r2,r2,64
   2729c:	8080030d 	sth	r2,12(r16)
   272a0:	00bfffc4 	movi	r2,-1
   272a4:	003fab06 	br	27154 <_gp+0xfffed684>
   272a8:	0027883a 	mov	r19,zero
   272ac:	0011883a 	mov	r8,zero
   272b0:	0039883a 	mov	fp,zero
   272b4:	0025883a 	mov	r18,zero
   272b8:	90001f26 	beq	r18,zero,27338 <__sfvwrite_r+0x29c>
   272bc:	40005a26 	beq	r8,zero,27428 <__sfvwrite_r+0x38c>
   272c0:	982d883a 	mov	r22,r19
   272c4:	94c0012e 	bgeu	r18,r19,272cc <__sfvwrite_r+0x230>
   272c8:	902d883a 	mov	r22,r18
   272cc:	81000017 	ldw	r4,0(r16)
   272d0:	80800417 	ldw	r2,16(r16)
   272d4:	b02f883a 	mov	r23,r22
   272d8:	81c00517 	ldw	r7,20(r16)
   272dc:	1100032e 	bgeu	r2,r4,272ec <__sfvwrite_r+0x250>
   272e0:	80c00217 	ldw	r3,8(r16)
   272e4:	38c7883a 	add	r3,r7,r3
   272e8:	1d801816 	blt	r3,r22,2734c <__sfvwrite_r+0x2b0>
   272ec:	b1c03e16 	blt	r22,r7,273e8 <__sfvwrite_r+0x34c>
   272f0:	80800917 	ldw	r2,36(r16)
   272f4:	81400717 	ldw	r5,28(r16)
   272f8:	e00d883a 	mov	r6,fp
   272fc:	da000115 	stw	r8,4(sp)
   27300:	a809883a 	mov	r4,r21
   27304:	103ee83a 	callr	r2
   27308:	102f883a 	mov	r23,r2
   2730c:	da000117 	ldw	r8,4(sp)
   27310:	00bfe00e 	bge	zero,r2,27294 <_gp+0xfffed7c4>
   27314:	9de7c83a 	sub	r19,r19,r23
   27318:	98001f26 	beq	r19,zero,27398 <__sfvwrite_r+0x2fc>
   2731c:	a0800217 	ldw	r2,8(r20)
   27320:	e5f9883a 	add	fp,fp,r23
   27324:	95e5c83a 	sub	r18,r18,r23
   27328:	15efc83a 	sub	r23,r2,r23
   2732c:	a5c00215 	stw	r23,8(r20)
   27330:	b83f8726 	beq	r23,zero,27150 <_gp+0xfffed680>
   27334:	903fe11e 	bne	r18,zero,272bc <_gp+0xfffed7ec>
   27338:	8f000017 	ldw	fp,0(r17)
   2733c:	8c800117 	ldw	r18,4(r17)
   27340:	0011883a 	mov	r8,zero
   27344:	8c400204 	addi	r17,r17,8
   27348:	003fdb06 	br	272b8 <_gp+0xfffed7e8>
   2734c:	180d883a 	mov	r6,r3
   27350:	e00b883a 	mov	r5,fp
   27354:	da000115 	stw	r8,4(sp)
   27358:	d8c00015 	stw	r3,0(sp)
   2735c:	00281f40 	call	281f4 <memmove>
   27360:	d8c00017 	ldw	r3,0(sp)
   27364:	80800017 	ldw	r2,0(r16)
   27368:	800b883a 	mov	r5,r16
   2736c:	a809883a 	mov	r4,r21
   27370:	10c5883a 	add	r2,r2,r3
   27374:	80800015 	stw	r2,0(r16)
   27378:	d8c00015 	stw	r3,0(sp)
   2737c:	002b6b00 	call	2b6b0 <_fflush_r>
   27380:	d8c00017 	ldw	r3,0(sp)
   27384:	da000117 	ldw	r8,4(sp)
   27388:	103fc21e 	bne	r2,zero,27294 <_gp+0xfffed7c4>
   2738c:	182f883a 	mov	r23,r3
   27390:	9de7c83a 	sub	r19,r19,r23
   27394:	983fe11e 	bne	r19,zero,2731c <_gp+0xfffed84c>
   27398:	800b883a 	mov	r5,r16
   2739c:	a809883a 	mov	r4,r21
   273a0:	002b6b00 	call	2b6b0 <_fflush_r>
   273a4:	103fbb1e 	bne	r2,zero,27294 <_gp+0xfffed7c4>
   273a8:	0011883a 	mov	r8,zero
   273ac:	003fdb06 	br	2731c <_gp+0xfffed84c>
   273b0:	94c0012e 	bgeu	r18,r19,273b8 <__sfvwrite_r+0x31c>
   273b4:	9027883a 	mov	r19,r18
   273b8:	980d883a 	mov	r6,r19
   273bc:	e00b883a 	mov	r5,fp
   273c0:	00281f40 	call	281f4 <memmove>
   273c4:	80800217 	ldw	r2,8(r16)
   273c8:	80c00017 	ldw	r3,0(r16)
   273cc:	14c5c83a 	sub	r2,r2,r19
   273d0:	1cc7883a 	add	r3,r3,r19
   273d4:	80800215 	stw	r2,8(r16)
   273d8:	80c00015 	stw	r3,0(r16)
   273dc:	10004326 	beq	r2,zero,274ec <__sfvwrite_r+0x450>
   273e0:	9805883a 	mov	r2,r19
   273e4:	003f8606 	br	27200 <_gp+0xfffed730>
   273e8:	b00d883a 	mov	r6,r22
   273ec:	e00b883a 	mov	r5,fp
   273f0:	da000115 	stw	r8,4(sp)
   273f4:	00281f40 	call	281f4 <memmove>
   273f8:	80800217 	ldw	r2,8(r16)
   273fc:	80c00017 	ldw	r3,0(r16)
   27400:	da000117 	ldw	r8,4(sp)
   27404:	1585c83a 	sub	r2,r2,r22
   27408:	1dad883a 	add	r22,r3,r22
   2740c:	80800215 	stw	r2,8(r16)
   27410:	85800015 	stw	r22,0(r16)
   27414:	003fbf06 	br	27314 <_gp+0xfffed844>
   27418:	81000017 	ldw	r4,0(r16)
   2741c:	9027883a 	mov	r19,r18
   27420:	902f883a 	mov	r23,r18
   27424:	003f6c06 	br	271d8 <_gp+0xfffed708>
   27428:	900d883a 	mov	r6,r18
   2742c:	01400284 	movi	r5,10
   27430:	e009883a 	mov	r4,fp
   27434:	0027fc80 	call	27fc8 <memchr>
   27438:	10003e26 	beq	r2,zero,27534 <__sfvwrite_r+0x498>
   2743c:	10800044 	addi	r2,r2,1
   27440:	1727c83a 	sub	r19,r2,fp
   27444:	02000044 	movi	r8,1
   27448:	003f9d06 	br	272c0 <_gp+0xfffed7f0>
   2744c:	80800517 	ldw	r2,20(r16)
   27450:	81400417 	ldw	r5,16(r16)
   27454:	81c00017 	ldw	r7,0(r16)
   27458:	10a7883a 	add	r19,r2,r2
   2745c:	9885883a 	add	r2,r19,r2
   27460:	1026d7fa 	srli	r19,r2,31
   27464:	396dc83a 	sub	r22,r7,r5
   27468:	b1000044 	addi	r4,r22,1
   2746c:	9885883a 	add	r2,r19,r2
   27470:	1027d07a 	srai	r19,r2,1
   27474:	2485883a 	add	r2,r4,r18
   27478:	980d883a 	mov	r6,r19
   2747c:	9880022e 	bgeu	r19,r2,27488 <__sfvwrite_r+0x3ec>
   27480:	1027883a 	mov	r19,r2
   27484:	100d883a 	mov	r6,r2
   27488:	18c1000c 	andi	r3,r3,1024
   2748c:	18001c26 	beq	r3,zero,27500 <__sfvwrite_r+0x464>
   27490:	300b883a 	mov	r5,r6
   27494:	a809883a 	mov	r4,r21
   27498:	00277bc0 	call	277bc <_malloc_r>
   2749c:	102f883a 	mov	r23,r2
   274a0:	10002926 	beq	r2,zero,27548 <__sfvwrite_r+0x4ac>
   274a4:	81400417 	ldw	r5,16(r16)
   274a8:	b00d883a 	mov	r6,r22
   274ac:	1009883a 	mov	r4,r2
   274b0:	00280ac0 	call	280ac <memcpy>
   274b4:	8080030b 	ldhu	r2,12(r16)
   274b8:	00fedfc4 	movi	r3,-1153
   274bc:	10c4703a 	and	r2,r2,r3
   274c0:	10802014 	ori	r2,r2,128
   274c4:	8080030d 	sth	r2,12(r16)
   274c8:	bd89883a 	add	r4,r23,r22
   274cc:	9d8fc83a 	sub	r7,r19,r22
   274d0:	85c00415 	stw	r23,16(r16)
   274d4:	84c00515 	stw	r19,20(r16)
   274d8:	81000015 	stw	r4,0(r16)
   274dc:	9027883a 	mov	r19,r18
   274e0:	81c00215 	stw	r7,8(r16)
   274e4:	902f883a 	mov	r23,r18
   274e8:	003f3b06 	br	271d8 <_gp+0xfffed708>
   274ec:	800b883a 	mov	r5,r16
   274f0:	a809883a 	mov	r4,r21
   274f4:	002b6b00 	call	2b6b0 <_fflush_r>
   274f8:	103fb926 	beq	r2,zero,273e0 <_gp+0xfffed910>
   274fc:	003f6506 	br	27294 <_gp+0xfffed7c4>
   27500:	a809883a 	mov	r4,r21
   27504:	00294740 	call	29474 <_realloc_r>
   27508:	102f883a 	mov	r23,r2
   2750c:	103fee1e 	bne	r2,zero,274c8 <_gp+0xfffed9f8>
   27510:	81400417 	ldw	r5,16(r16)
   27514:	a809883a 	mov	r4,r21
   27518:	002b8600 	call	2b860 <_free_r>
   2751c:	8080030b 	ldhu	r2,12(r16)
   27520:	00ffdfc4 	movi	r3,-129
   27524:	1884703a 	and	r2,r3,r2
   27528:	00c00304 	movi	r3,12
   2752c:	a8c00015 	stw	r3,0(r21)
   27530:	003f5906 	br	27298 <_gp+0xfffed7c8>
   27534:	94c00044 	addi	r19,r18,1
   27538:	02000044 	movi	r8,1
   2753c:	003f6006 	br	272c0 <_gp+0xfffed7f0>
   27540:	00bfffc4 	movi	r2,-1
   27544:	003f0306 	br	27154 <_gp+0xfffed684>
   27548:	00800304 	movi	r2,12
   2754c:	a8800015 	stw	r2,0(r21)
   27550:	8080030b 	ldhu	r2,12(r16)
   27554:	003f5006 	br	27298 <_gp+0xfffed7c8>

00027558 <_fwalk>:
   27558:	defff704 	addi	sp,sp,-36
   2755c:	dd000415 	stw	r20,16(sp)
   27560:	dfc00815 	stw	ra,32(sp)
   27564:	ddc00715 	stw	r23,28(sp)
   27568:	dd800615 	stw	r22,24(sp)
   2756c:	dd400515 	stw	r21,20(sp)
   27570:	dcc00315 	stw	r19,12(sp)
   27574:	dc800215 	stw	r18,8(sp)
   27578:	dc400115 	stw	r17,4(sp)
   2757c:	dc000015 	stw	r16,0(sp)
   27580:	2500b804 	addi	r20,r4,736
   27584:	a0002326 	beq	r20,zero,27614 <_fwalk+0xbc>
   27588:	282b883a 	mov	r21,r5
   2758c:	002f883a 	mov	r23,zero
   27590:	05800044 	movi	r22,1
   27594:	04ffffc4 	movi	r19,-1
   27598:	a4400117 	ldw	r17,4(r20)
   2759c:	a4800217 	ldw	r18,8(r20)
   275a0:	8c7fffc4 	addi	r17,r17,-1
   275a4:	88000d16 	blt	r17,zero,275dc <_fwalk+0x84>
   275a8:	94000304 	addi	r16,r18,12
   275ac:	94800384 	addi	r18,r18,14
   275b0:	8080000b 	ldhu	r2,0(r16)
   275b4:	8c7fffc4 	addi	r17,r17,-1
   275b8:	813ffd04 	addi	r4,r16,-12
   275bc:	b080042e 	bgeu	r22,r2,275d0 <_fwalk+0x78>
   275c0:	9080000f 	ldh	r2,0(r18)
   275c4:	14c00226 	beq	r2,r19,275d0 <_fwalk+0x78>
   275c8:	a83ee83a 	callr	r21
   275cc:	b8aeb03a 	or	r23,r23,r2
   275d0:	84001a04 	addi	r16,r16,104
   275d4:	94801a04 	addi	r18,r18,104
   275d8:	8cfff51e 	bne	r17,r19,275b0 <_gp+0xfffedae0>
   275dc:	a5000017 	ldw	r20,0(r20)
   275e0:	a03fed1e 	bne	r20,zero,27598 <_gp+0xfffedac8>
   275e4:	b805883a 	mov	r2,r23
   275e8:	dfc00817 	ldw	ra,32(sp)
   275ec:	ddc00717 	ldw	r23,28(sp)
   275f0:	dd800617 	ldw	r22,24(sp)
   275f4:	dd400517 	ldw	r21,20(sp)
   275f8:	dd000417 	ldw	r20,16(sp)
   275fc:	dcc00317 	ldw	r19,12(sp)
   27600:	dc800217 	ldw	r18,8(sp)
   27604:	dc400117 	ldw	r17,4(sp)
   27608:	dc000017 	ldw	r16,0(sp)
   2760c:	dec00904 	addi	sp,sp,36
   27610:	f800283a 	ret
   27614:	002f883a 	mov	r23,zero
   27618:	003ff206 	br	275e4 <_gp+0xfffedb14>

0002761c <_fwalk_reent>:
   2761c:	defff704 	addi	sp,sp,-36
   27620:	dd000415 	stw	r20,16(sp)
   27624:	dfc00815 	stw	ra,32(sp)
   27628:	ddc00715 	stw	r23,28(sp)
   2762c:	dd800615 	stw	r22,24(sp)
   27630:	dd400515 	stw	r21,20(sp)
   27634:	dcc00315 	stw	r19,12(sp)
   27638:	dc800215 	stw	r18,8(sp)
   2763c:	dc400115 	stw	r17,4(sp)
   27640:	dc000015 	stw	r16,0(sp)
   27644:	2500b804 	addi	r20,r4,736
   27648:	a0002326 	beq	r20,zero,276d8 <_fwalk_reent+0xbc>
   2764c:	282b883a 	mov	r21,r5
   27650:	2027883a 	mov	r19,r4
   27654:	002f883a 	mov	r23,zero
   27658:	05800044 	movi	r22,1
   2765c:	04bfffc4 	movi	r18,-1
   27660:	a4400117 	ldw	r17,4(r20)
   27664:	a4000217 	ldw	r16,8(r20)
   27668:	8c7fffc4 	addi	r17,r17,-1
   2766c:	88000c16 	blt	r17,zero,276a0 <_fwalk_reent+0x84>
   27670:	84000304 	addi	r16,r16,12
   27674:	8080000b 	ldhu	r2,0(r16)
   27678:	8c7fffc4 	addi	r17,r17,-1
   2767c:	817ffd04 	addi	r5,r16,-12
   27680:	b080052e 	bgeu	r22,r2,27698 <_fwalk_reent+0x7c>
   27684:	8080008f 	ldh	r2,2(r16)
   27688:	9809883a 	mov	r4,r19
   2768c:	14800226 	beq	r2,r18,27698 <_fwalk_reent+0x7c>
   27690:	a83ee83a 	callr	r21
   27694:	b8aeb03a 	or	r23,r23,r2
   27698:	84001a04 	addi	r16,r16,104
   2769c:	8cbff51e 	bne	r17,r18,27674 <_gp+0xfffedba4>
   276a0:	a5000017 	ldw	r20,0(r20)
   276a4:	a03fee1e 	bne	r20,zero,27660 <_gp+0xfffedb90>
   276a8:	b805883a 	mov	r2,r23
   276ac:	dfc00817 	ldw	ra,32(sp)
   276b0:	ddc00717 	ldw	r23,28(sp)
   276b4:	dd800617 	ldw	r22,24(sp)
   276b8:	dd400517 	ldw	r21,20(sp)
   276bc:	dd000417 	ldw	r20,16(sp)
   276c0:	dcc00317 	ldw	r19,12(sp)
   276c4:	dc800217 	ldw	r18,8(sp)
   276c8:	dc400117 	ldw	r17,4(sp)
   276cc:	dc000017 	ldw	r16,0(sp)
   276d0:	dec00904 	addi	sp,sp,36
   276d4:	f800283a 	ret
   276d8:	002f883a 	mov	r23,zero
   276dc:	003ff206 	br	276a8 <_gp+0xfffedbd8>

000276e0 <_setlocale_r>:
   276e0:	30001b26 	beq	r6,zero,27750 <_setlocale_r+0x70>
   276e4:	014000f4 	movhi	r5,3
   276e8:	defffe04 	addi	sp,sp,-8
   276ec:	297faa04 	addi	r5,r5,-344
   276f0:	3009883a 	mov	r4,r6
   276f4:	dc000015 	stw	r16,0(sp)
   276f8:	dfc00115 	stw	ra,4(sp)
   276fc:	3021883a 	mov	r16,r6
   27700:	0029bdc0 	call	29bdc <strcmp>
   27704:	1000061e 	bne	r2,zero,27720 <_setlocale_r+0x40>
   27708:	008000f4 	movhi	r2,3
   2770c:	10bfa904 	addi	r2,r2,-348
   27710:	dfc00117 	ldw	ra,4(sp)
   27714:	dc000017 	ldw	r16,0(sp)
   27718:	dec00204 	addi	sp,sp,8
   2771c:	f800283a 	ret
   27720:	014000f4 	movhi	r5,3
   27724:	297fa904 	addi	r5,r5,-348
   27728:	8009883a 	mov	r4,r16
   2772c:	0029bdc0 	call	29bdc <strcmp>
   27730:	103ff526 	beq	r2,zero,27708 <_gp+0xfffedc38>
   27734:	014000f4 	movhi	r5,3
   27738:	297f9404 	addi	r5,r5,-432
   2773c:	8009883a 	mov	r4,r16
   27740:	0029bdc0 	call	29bdc <strcmp>
   27744:	103ff026 	beq	r2,zero,27708 <_gp+0xfffedc38>
   27748:	0005883a 	mov	r2,zero
   2774c:	003ff006 	br	27710 <_gp+0xfffedc40>
   27750:	008000f4 	movhi	r2,3
   27754:	10bfa904 	addi	r2,r2,-348
   27758:	f800283a 	ret

0002775c <__locale_charset>:
   2775c:	008000f4 	movhi	r2,3
   27760:	10811a04 	addi	r2,r2,1128
   27764:	f800283a 	ret

00027768 <__locale_mb_cur_max>:
   27768:	008000f4 	movhi	r2,3
   2776c:	1086b804 	addi	r2,r2,6880
   27770:	10800017 	ldw	r2,0(r2)
   27774:	f800283a 	ret

00027778 <__locale_msgcharset>:
   27778:	008000f4 	movhi	r2,3
   2777c:	10811204 	addi	r2,r2,1096
   27780:	f800283a 	ret

00027784 <__locale_cjk_lang>:
   27784:	0005883a 	mov	r2,zero
   27788:	f800283a 	ret

0002778c <_localeconv_r>:
   2778c:	008000f4 	movhi	r2,3
   27790:	10812204 	addi	r2,r2,1160
   27794:	f800283a 	ret

00027798 <setlocale>:
   27798:	008000f4 	movhi	r2,3
   2779c:	1086b704 	addi	r2,r2,6876
   277a0:	280d883a 	mov	r6,r5
   277a4:	200b883a 	mov	r5,r4
   277a8:	11000017 	ldw	r4,0(r2)
   277ac:	00276e01 	jmpi	276e0 <_setlocale_r>

000277b0 <localeconv>:
   277b0:	008000f4 	movhi	r2,3
   277b4:	10812204 	addi	r2,r2,1160
   277b8:	f800283a 	ret

000277bc <_malloc_r>:
   277bc:	defff504 	addi	sp,sp,-44
   277c0:	dc800315 	stw	r18,12(sp)
   277c4:	dfc00a15 	stw	ra,40(sp)
   277c8:	df000915 	stw	fp,36(sp)
   277cc:	ddc00815 	stw	r23,32(sp)
   277d0:	dd800715 	stw	r22,28(sp)
   277d4:	dd400615 	stw	r21,24(sp)
   277d8:	dd000515 	stw	r20,20(sp)
   277dc:	dcc00415 	stw	r19,16(sp)
   277e0:	dc400215 	stw	r17,8(sp)
   277e4:	dc000115 	stw	r16,4(sp)
   277e8:	288002c4 	addi	r2,r5,11
   277ec:	00c00584 	movi	r3,22
   277f0:	2025883a 	mov	r18,r4
   277f4:	18807f2e 	bgeu	r3,r2,279f4 <_malloc_r+0x238>
   277f8:	047ffe04 	movi	r17,-8
   277fc:	1462703a 	and	r17,r2,r17
   27800:	8800a316 	blt	r17,zero,27a90 <_malloc_r+0x2d4>
   27804:	8940a236 	bltu	r17,r5,27a90 <_malloc_r+0x2d4>
   27808:	002dbbc0 	call	2dbbc <__malloc_lock>
   2780c:	00807dc4 	movi	r2,503
   27810:	1441e92e 	bgeu	r2,r17,27fb8 <_malloc_r+0x7fc>
   27814:	8804d27a 	srli	r2,r17,9
   27818:	1000a126 	beq	r2,zero,27aa0 <_malloc_r+0x2e4>
   2781c:	00c00104 	movi	r3,4
   27820:	18811e36 	bltu	r3,r2,27c9c <_malloc_r+0x4e0>
   27824:	8804d1ba 	srli	r2,r17,6
   27828:	12000e44 	addi	r8,r2,57
   2782c:	11c00e04 	addi	r7,r2,56
   27830:	4209883a 	add	r4,r8,r8
   27834:	04c000f4 	movhi	r19,3
   27838:	2109883a 	add	r4,r4,r4
   2783c:	9cc13004 	addi	r19,r19,1216
   27840:	2109883a 	add	r4,r4,r4
   27844:	9909883a 	add	r4,r19,r4
   27848:	24000117 	ldw	r16,4(r4)
   2784c:	213ffe04 	addi	r4,r4,-8
   27850:	24009726 	beq	r4,r16,27ab0 <_malloc_r+0x2f4>
   27854:	80800117 	ldw	r2,4(r16)
   27858:	01bfff04 	movi	r6,-4
   2785c:	014003c4 	movi	r5,15
   27860:	1184703a 	and	r2,r2,r6
   27864:	1447c83a 	sub	r3,r2,r17
   27868:	28c00716 	blt	r5,r3,27888 <_malloc_r+0xcc>
   2786c:	1800920e 	bge	r3,zero,27ab8 <_malloc_r+0x2fc>
   27870:	84000317 	ldw	r16,12(r16)
   27874:	24008e26 	beq	r4,r16,27ab0 <_malloc_r+0x2f4>
   27878:	80800117 	ldw	r2,4(r16)
   2787c:	1184703a 	and	r2,r2,r6
   27880:	1447c83a 	sub	r3,r2,r17
   27884:	28fff90e 	bge	r5,r3,2786c <_gp+0xfffedd9c>
   27888:	3809883a 	mov	r4,r7
   2788c:	018000f4 	movhi	r6,3
   27890:	9c000417 	ldw	r16,16(r19)
   27894:	31813004 	addi	r6,r6,1216
   27898:	32000204 	addi	r8,r6,8
   2789c:	82013426 	beq	r16,r8,27d70 <_malloc_r+0x5b4>
   278a0:	80c00117 	ldw	r3,4(r16)
   278a4:	00bfff04 	movi	r2,-4
   278a8:	188e703a 	and	r7,r3,r2
   278ac:	3c45c83a 	sub	r2,r7,r17
   278b0:	00c003c4 	movi	r3,15
   278b4:	18811f16 	blt	r3,r2,27d34 <_malloc_r+0x578>
   278b8:	32000515 	stw	r8,20(r6)
   278bc:	32000415 	stw	r8,16(r6)
   278c0:	10007f0e 	bge	r2,zero,27ac0 <_malloc_r+0x304>
   278c4:	00807fc4 	movi	r2,511
   278c8:	11c0fd36 	bltu	r2,r7,27cc0 <_malloc_r+0x504>
   278cc:	3806d0fa 	srli	r3,r7,3
   278d0:	01c00044 	movi	r7,1
   278d4:	30800117 	ldw	r2,4(r6)
   278d8:	19400044 	addi	r5,r3,1
   278dc:	294b883a 	add	r5,r5,r5
   278e0:	1807d0ba 	srai	r3,r3,2
   278e4:	294b883a 	add	r5,r5,r5
   278e8:	294b883a 	add	r5,r5,r5
   278ec:	298b883a 	add	r5,r5,r6
   278f0:	38c6983a 	sll	r3,r7,r3
   278f4:	29c00017 	ldw	r7,0(r5)
   278f8:	2a7ffe04 	addi	r9,r5,-8
   278fc:	1886b03a 	or	r3,r3,r2
   27900:	82400315 	stw	r9,12(r16)
   27904:	81c00215 	stw	r7,8(r16)
   27908:	30c00115 	stw	r3,4(r6)
   2790c:	2c000015 	stw	r16,0(r5)
   27910:	3c000315 	stw	r16,12(r7)
   27914:	2005d0ba 	srai	r2,r4,2
   27918:	01400044 	movi	r5,1
   2791c:	288a983a 	sll	r5,r5,r2
   27920:	19406f36 	bltu	r3,r5,27ae0 <_malloc_r+0x324>
   27924:	28c4703a 	and	r2,r5,r3
   27928:	10000a1e 	bne	r2,zero,27954 <_malloc_r+0x198>
   2792c:	00bfff04 	movi	r2,-4
   27930:	294b883a 	add	r5,r5,r5
   27934:	2088703a 	and	r4,r4,r2
   27938:	28c4703a 	and	r2,r5,r3
   2793c:	21000104 	addi	r4,r4,4
   27940:	1000041e 	bne	r2,zero,27954 <_malloc_r+0x198>
   27944:	294b883a 	add	r5,r5,r5
   27948:	28c4703a 	and	r2,r5,r3
   2794c:	21000104 	addi	r4,r4,4
   27950:	103ffc26 	beq	r2,zero,27944 <_gp+0xfffede74>
   27954:	02bfff04 	movi	r10,-4
   27958:	024003c4 	movi	r9,15
   2795c:	21800044 	addi	r6,r4,1
   27960:	318d883a 	add	r6,r6,r6
   27964:	318d883a 	add	r6,r6,r6
   27968:	318d883a 	add	r6,r6,r6
   2796c:	998d883a 	add	r6,r19,r6
   27970:	333ffe04 	addi	r12,r6,-8
   27974:	2017883a 	mov	r11,r4
   27978:	31800104 	addi	r6,r6,4
   2797c:	34000017 	ldw	r16,0(r6)
   27980:	31fffd04 	addi	r7,r6,-12
   27984:	81c0041e 	bne	r16,r7,27998 <_malloc_r+0x1dc>
   27988:	0000fb06 	br	27d78 <_malloc_r+0x5bc>
   2798c:	1801030e 	bge	r3,zero,27d9c <_malloc_r+0x5e0>
   27990:	84000317 	ldw	r16,12(r16)
   27994:	81c0f826 	beq	r16,r7,27d78 <_malloc_r+0x5bc>
   27998:	80800117 	ldw	r2,4(r16)
   2799c:	1284703a 	and	r2,r2,r10
   279a0:	1447c83a 	sub	r3,r2,r17
   279a4:	48fff90e 	bge	r9,r3,2798c <_gp+0xfffedebc>
   279a8:	80800317 	ldw	r2,12(r16)
   279ac:	81000217 	ldw	r4,8(r16)
   279b0:	89400054 	ori	r5,r17,1
   279b4:	81400115 	stw	r5,4(r16)
   279b8:	20800315 	stw	r2,12(r4)
   279bc:	11000215 	stw	r4,8(r2)
   279c0:	8463883a 	add	r17,r16,r17
   279c4:	9c400515 	stw	r17,20(r19)
   279c8:	9c400415 	stw	r17,16(r19)
   279cc:	18800054 	ori	r2,r3,1
   279d0:	88800115 	stw	r2,4(r17)
   279d4:	8a000315 	stw	r8,12(r17)
   279d8:	8a000215 	stw	r8,8(r17)
   279dc:	88e3883a 	add	r17,r17,r3
   279e0:	88c00015 	stw	r3,0(r17)
   279e4:	9009883a 	mov	r4,r18
   279e8:	002dbe00 	call	2dbe0 <__malloc_unlock>
   279ec:	80800204 	addi	r2,r16,8
   279f0:	00001b06 	br	27a60 <_malloc_r+0x2a4>
   279f4:	04400404 	movi	r17,16
   279f8:	89402536 	bltu	r17,r5,27a90 <_malloc_r+0x2d4>
   279fc:	002dbbc0 	call	2dbbc <__malloc_lock>
   27a00:	00800184 	movi	r2,6
   27a04:	01000084 	movi	r4,2
   27a08:	04c000f4 	movhi	r19,3
   27a0c:	1085883a 	add	r2,r2,r2
   27a10:	9cc13004 	addi	r19,r19,1216
   27a14:	1085883a 	add	r2,r2,r2
   27a18:	9885883a 	add	r2,r19,r2
   27a1c:	14000117 	ldw	r16,4(r2)
   27a20:	10fffe04 	addi	r3,r2,-8
   27a24:	80c0d926 	beq	r16,r3,27d8c <_malloc_r+0x5d0>
   27a28:	80c00117 	ldw	r3,4(r16)
   27a2c:	81000317 	ldw	r4,12(r16)
   27a30:	00bfff04 	movi	r2,-4
   27a34:	1884703a 	and	r2,r3,r2
   27a38:	81400217 	ldw	r5,8(r16)
   27a3c:	8085883a 	add	r2,r16,r2
   27a40:	10c00117 	ldw	r3,4(r2)
   27a44:	29000315 	stw	r4,12(r5)
   27a48:	21400215 	stw	r5,8(r4)
   27a4c:	18c00054 	ori	r3,r3,1
   27a50:	10c00115 	stw	r3,4(r2)
   27a54:	9009883a 	mov	r4,r18
   27a58:	002dbe00 	call	2dbe0 <__malloc_unlock>
   27a5c:	80800204 	addi	r2,r16,8
   27a60:	dfc00a17 	ldw	ra,40(sp)
   27a64:	df000917 	ldw	fp,36(sp)
   27a68:	ddc00817 	ldw	r23,32(sp)
   27a6c:	dd800717 	ldw	r22,28(sp)
   27a70:	dd400617 	ldw	r21,24(sp)
   27a74:	dd000517 	ldw	r20,20(sp)
   27a78:	dcc00417 	ldw	r19,16(sp)
   27a7c:	dc800317 	ldw	r18,12(sp)
   27a80:	dc400217 	ldw	r17,8(sp)
   27a84:	dc000117 	ldw	r16,4(sp)
   27a88:	dec00b04 	addi	sp,sp,44
   27a8c:	f800283a 	ret
   27a90:	00800304 	movi	r2,12
   27a94:	90800015 	stw	r2,0(r18)
   27a98:	0005883a 	mov	r2,zero
   27a9c:	003ff006 	br	27a60 <_gp+0xfffedf90>
   27aa0:	01002004 	movi	r4,128
   27aa4:	02001004 	movi	r8,64
   27aa8:	01c00fc4 	movi	r7,63
   27aac:	003f6106 	br	27834 <_gp+0xfffedd64>
   27ab0:	4009883a 	mov	r4,r8
   27ab4:	003f7506 	br	2788c <_gp+0xfffeddbc>
   27ab8:	81000317 	ldw	r4,12(r16)
   27abc:	003fde06 	br	27a38 <_gp+0xfffedf68>
   27ac0:	81c5883a 	add	r2,r16,r7
   27ac4:	11400117 	ldw	r5,4(r2)
   27ac8:	9009883a 	mov	r4,r18
   27acc:	29400054 	ori	r5,r5,1
   27ad0:	11400115 	stw	r5,4(r2)
   27ad4:	002dbe00 	call	2dbe0 <__malloc_unlock>
   27ad8:	80800204 	addi	r2,r16,8
   27adc:	003fe006 	br	27a60 <_gp+0xfffedf90>
   27ae0:	9c000217 	ldw	r16,8(r19)
   27ae4:	00bfff04 	movi	r2,-4
   27ae8:	85800117 	ldw	r22,4(r16)
   27aec:	b0ac703a 	and	r22,r22,r2
   27af0:	b4400336 	bltu	r22,r17,27b00 <_malloc_r+0x344>
   27af4:	b445c83a 	sub	r2,r22,r17
   27af8:	00c003c4 	movi	r3,15
   27afc:	18805d16 	blt	r3,r2,27c74 <_malloc_r+0x4b8>
   27b00:	05c000f4 	movhi	r23,3
   27b04:	008000f4 	movhi	r2,3
   27b08:	108d8604 	addi	r2,r2,13848
   27b0c:	bdc6b904 	addi	r23,r23,6884
   27b10:	15400017 	ldw	r21,0(r2)
   27b14:	b8c00017 	ldw	r3,0(r23)
   27b18:	00bfffc4 	movi	r2,-1
   27b1c:	858d883a 	add	r6,r16,r22
   27b20:	8d6b883a 	add	r21,r17,r21
   27b24:	1880ea26 	beq	r3,r2,27ed0 <_malloc_r+0x714>
   27b28:	ad4403c4 	addi	r21,r21,4111
   27b2c:	00bc0004 	movi	r2,-4096
   27b30:	a8aa703a 	and	r21,r21,r2
   27b34:	a80b883a 	mov	r5,r21
   27b38:	9009883a 	mov	r4,r18
   27b3c:	d9800015 	stw	r6,0(sp)
   27b40:	0029a4c0 	call	29a4c <_sbrk_r>
   27b44:	1029883a 	mov	r20,r2
   27b48:	00bfffc4 	movi	r2,-1
   27b4c:	d9800017 	ldw	r6,0(sp)
   27b50:	a080e826 	beq	r20,r2,27ef4 <_malloc_r+0x738>
   27b54:	a180a636 	bltu	r20,r6,27df0 <_malloc_r+0x634>
   27b58:	070000f4 	movhi	fp,3
   27b5c:	e70d8f04 	addi	fp,fp,13884
   27b60:	e0800017 	ldw	r2,0(fp)
   27b64:	a887883a 	add	r3,r21,r2
   27b68:	e0c00015 	stw	r3,0(fp)
   27b6c:	3500e626 	beq	r6,r20,27f08 <_malloc_r+0x74c>
   27b70:	b9000017 	ldw	r4,0(r23)
   27b74:	00bfffc4 	movi	r2,-1
   27b78:	2080ee26 	beq	r4,r2,27f34 <_malloc_r+0x778>
   27b7c:	a185c83a 	sub	r2,r20,r6
   27b80:	10c5883a 	add	r2,r2,r3
   27b84:	e0800015 	stw	r2,0(fp)
   27b88:	a0c001cc 	andi	r3,r20,7
   27b8c:	1800bc26 	beq	r3,zero,27e80 <_malloc_r+0x6c4>
   27b90:	a0e9c83a 	sub	r20,r20,r3
   27b94:	00840204 	movi	r2,4104
   27b98:	a5000204 	addi	r20,r20,8
   27b9c:	10c7c83a 	sub	r3,r2,r3
   27ba0:	a545883a 	add	r2,r20,r21
   27ba4:	1083ffcc 	andi	r2,r2,4095
   27ba8:	18abc83a 	sub	r21,r3,r2
   27bac:	a80b883a 	mov	r5,r21
   27bb0:	9009883a 	mov	r4,r18
   27bb4:	0029a4c0 	call	29a4c <_sbrk_r>
   27bb8:	00ffffc4 	movi	r3,-1
   27bbc:	10c0e126 	beq	r2,r3,27f44 <_malloc_r+0x788>
   27bc0:	1505c83a 	sub	r2,r2,r20
   27bc4:	1545883a 	add	r2,r2,r21
   27bc8:	10800054 	ori	r2,r2,1
   27bcc:	e0c00017 	ldw	r3,0(fp)
   27bd0:	9d000215 	stw	r20,8(r19)
   27bd4:	a0800115 	stw	r2,4(r20)
   27bd8:	a8c7883a 	add	r3,r21,r3
   27bdc:	e0c00015 	stw	r3,0(fp)
   27be0:	84c00e26 	beq	r16,r19,27c1c <_malloc_r+0x460>
   27be4:	018003c4 	movi	r6,15
   27be8:	3580a72e 	bgeu	r6,r22,27e88 <_malloc_r+0x6cc>
   27bec:	81400117 	ldw	r5,4(r16)
   27bf0:	013ffe04 	movi	r4,-8
   27bf4:	b0bffd04 	addi	r2,r22,-12
   27bf8:	1104703a 	and	r2,r2,r4
   27bfc:	2900004c 	andi	r4,r5,1
   27c00:	2088b03a 	or	r4,r4,r2
   27c04:	81000115 	stw	r4,4(r16)
   27c08:	01400144 	movi	r5,5
   27c0c:	8089883a 	add	r4,r16,r2
   27c10:	21400115 	stw	r5,4(r4)
   27c14:	21400215 	stw	r5,8(r4)
   27c18:	3080cd36 	bltu	r6,r2,27f50 <_malloc_r+0x794>
   27c1c:	008000f4 	movhi	r2,3
   27c20:	108d8504 	addi	r2,r2,13844
   27c24:	11000017 	ldw	r4,0(r2)
   27c28:	20c0012e 	bgeu	r4,r3,27c30 <_malloc_r+0x474>
   27c2c:	10c00015 	stw	r3,0(r2)
   27c30:	008000f4 	movhi	r2,3
   27c34:	108d8404 	addi	r2,r2,13840
   27c38:	11000017 	ldw	r4,0(r2)
   27c3c:	9c000217 	ldw	r16,8(r19)
   27c40:	20c0012e 	bgeu	r4,r3,27c48 <_malloc_r+0x48c>
   27c44:	10c00015 	stw	r3,0(r2)
   27c48:	80c00117 	ldw	r3,4(r16)
   27c4c:	00bfff04 	movi	r2,-4
   27c50:	1886703a 	and	r3,r3,r2
   27c54:	1c45c83a 	sub	r2,r3,r17
   27c58:	1c400236 	bltu	r3,r17,27c64 <_malloc_r+0x4a8>
   27c5c:	00c003c4 	movi	r3,15
   27c60:	18800416 	blt	r3,r2,27c74 <_malloc_r+0x4b8>
   27c64:	9009883a 	mov	r4,r18
   27c68:	002dbe00 	call	2dbe0 <__malloc_unlock>
   27c6c:	0005883a 	mov	r2,zero
   27c70:	003f7b06 	br	27a60 <_gp+0xfffedf90>
   27c74:	88c00054 	ori	r3,r17,1
   27c78:	80c00115 	stw	r3,4(r16)
   27c7c:	8463883a 	add	r17,r16,r17
   27c80:	10800054 	ori	r2,r2,1
   27c84:	9c400215 	stw	r17,8(r19)
   27c88:	88800115 	stw	r2,4(r17)
   27c8c:	9009883a 	mov	r4,r18
   27c90:	002dbe00 	call	2dbe0 <__malloc_unlock>
   27c94:	80800204 	addi	r2,r16,8
   27c98:	003f7106 	br	27a60 <_gp+0xfffedf90>
   27c9c:	00c00504 	movi	r3,20
   27ca0:	18804a2e 	bgeu	r3,r2,27dcc <_malloc_r+0x610>
   27ca4:	00c01504 	movi	r3,84
   27ca8:	18806e36 	bltu	r3,r2,27e64 <_malloc_r+0x6a8>
   27cac:	8804d33a 	srli	r2,r17,12
   27cb0:	12001bc4 	addi	r8,r2,111
   27cb4:	11c01b84 	addi	r7,r2,110
   27cb8:	4209883a 	add	r4,r8,r8
   27cbc:	003edd06 	br	27834 <_gp+0xfffedd64>
   27cc0:	3804d27a 	srli	r2,r7,9
   27cc4:	00c00104 	movi	r3,4
   27cc8:	1880442e 	bgeu	r3,r2,27ddc <_malloc_r+0x620>
   27ccc:	00c00504 	movi	r3,20
   27cd0:	18808136 	bltu	r3,r2,27ed8 <_malloc_r+0x71c>
   27cd4:	11401704 	addi	r5,r2,92
   27cd8:	10c016c4 	addi	r3,r2,91
   27cdc:	294b883a 	add	r5,r5,r5
   27ce0:	294b883a 	add	r5,r5,r5
   27ce4:	294b883a 	add	r5,r5,r5
   27ce8:	994b883a 	add	r5,r19,r5
   27cec:	28800017 	ldw	r2,0(r5)
   27cf0:	018000f4 	movhi	r6,3
   27cf4:	297ffe04 	addi	r5,r5,-8
   27cf8:	31813004 	addi	r6,r6,1216
   27cfc:	28806526 	beq	r5,r2,27e94 <_malloc_r+0x6d8>
   27d00:	01bfff04 	movi	r6,-4
   27d04:	10c00117 	ldw	r3,4(r2)
   27d08:	1986703a 	and	r3,r3,r6
   27d0c:	38c0022e 	bgeu	r7,r3,27d18 <_malloc_r+0x55c>
   27d10:	10800217 	ldw	r2,8(r2)
   27d14:	28bffb1e 	bne	r5,r2,27d04 <_gp+0xfffee234>
   27d18:	11400317 	ldw	r5,12(r2)
   27d1c:	98c00117 	ldw	r3,4(r19)
   27d20:	81400315 	stw	r5,12(r16)
   27d24:	80800215 	stw	r2,8(r16)
   27d28:	2c000215 	stw	r16,8(r5)
   27d2c:	14000315 	stw	r16,12(r2)
   27d30:	003ef806 	br	27914 <_gp+0xfffede44>
   27d34:	88c00054 	ori	r3,r17,1
   27d38:	80c00115 	stw	r3,4(r16)
   27d3c:	8463883a 	add	r17,r16,r17
   27d40:	34400515 	stw	r17,20(r6)
   27d44:	34400415 	stw	r17,16(r6)
   27d48:	10c00054 	ori	r3,r2,1
   27d4c:	8a000315 	stw	r8,12(r17)
   27d50:	8a000215 	stw	r8,8(r17)
   27d54:	88c00115 	stw	r3,4(r17)
   27d58:	88a3883a 	add	r17,r17,r2
   27d5c:	88800015 	stw	r2,0(r17)
   27d60:	9009883a 	mov	r4,r18
   27d64:	002dbe00 	call	2dbe0 <__malloc_unlock>
   27d68:	80800204 	addi	r2,r16,8
   27d6c:	003f3c06 	br	27a60 <_gp+0xfffedf90>
   27d70:	30c00117 	ldw	r3,4(r6)
   27d74:	003ee706 	br	27914 <_gp+0xfffede44>
   27d78:	5ac00044 	addi	r11,r11,1
   27d7c:	588000cc 	andi	r2,r11,3
   27d80:	31800204 	addi	r6,r6,8
   27d84:	103efd1e 	bne	r2,zero,2797c <_gp+0xfffedeac>
   27d88:	00002406 	br	27e1c <_malloc_r+0x660>
   27d8c:	14000317 	ldw	r16,12(r2)
   27d90:	143f251e 	bne	r2,r16,27a28 <_gp+0xfffedf58>
   27d94:	21000084 	addi	r4,r4,2
   27d98:	003ebc06 	br	2788c <_gp+0xfffeddbc>
   27d9c:	8085883a 	add	r2,r16,r2
   27da0:	10c00117 	ldw	r3,4(r2)
   27da4:	81000317 	ldw	r4,12(r16)
   27da8:	81400217 	ldw	r5,8(r16)
   27dac:	18c00054 	ori	r3,r3,1
   27db0:	10c00115 	stw	r3,4(r2)
   27db4:	29000315 	stw	r4,12(r5)
   27db8:	21400215 	stw	r5,8(r4)
   27dbc:	9009883a 	mov	r4,r18
   27dc0:	002dbe00 	call	2dbe0 <__malloc_unlock>
   27dc4:	80800204 	addi	r2,r16,8
   27dc8:	003f2506 	br	27a60 <_gp+0xfffedf90>
   27dcc:	12001704 	addi	r8,r2,92
   27dd0:	11c016c4 	addi	r7,r2,91
   27dd4:	4209883a 	add	r4,r8,r8
   27dd8:	003e9606 	br	27834 <_gp+0xfffedd64>
   27ddc:	3804d1ba 	srli	r2,r7,6
   27de0:	11400e44 	addi	r5,r2,57
   27de4:	10c00e04 	addi	r3,r2,56
   27de8:	294b883a 	add	r5,r5,r5
   27dec:	003fbc06 	br	27ce0 <_gp+0xfffee210>
   27df0:	84ff5926 	beq	r16,r19,27b58 <_gp+0xfffee088>
   27df4:	008000f4 	movhi	r2,3
   27df8:	10813004 	addi	r2,r2,1216
   27dfc:	14000217 	ldw	r16,8(r2)
   27e00:	00bfff04 	movi	r2,-4
   27e04:	80c00117 	ldw	r3,4(r16)
   27e08:	1886703a 	and	r3,r3,r2
   27e0c:	003f9106 	br	27c54 <_gp+0xfffee184>
   27e10:	60800217 	ldw	r2,8(r12)
   27e14:	213fffc4 	addi	r4,r4,-1
   27e18:	1300651e 	bne	r2,r12,27fb0 <_malloc_r+0x7f4>
   27e1c:	208000cc 	andi	r2,r4,3
   27e20:	633ffe04 	addi	r12,r12,-8
   27e24:	103ffa1e 	bne	r2,zero,27e10 <_gp+0xfffee340>
   27e28:	98800117 	ldw	r2,4(r19)
   27e2c:	0146303a 	nor	r3,zero,r5
   27e30:	1884703a 	and	r2,r3,r2
   27e34:	98800115 	stw	r2,4(r19)
   27e38:	294b883a 	add	r5,r5,r5
   27e3c:	117f2836 	bltu	r2,r5,27ae0 <_gp+0xfffee010>
   27e40:	283f2726 	beq	r5,zero,27ae0 <_gp+0xfffee010>
   27e44:	2886703a 	and	r3,r5,r2
   27e48:	5809883a 	mov	r4,r11
   27e4c:	183ec31e 	bne	r3,zero,2795c <_gp+0xfffede8c>
   27e50:	294b883a 	add	r5,r5,r5
   27e54:	2886703a 	and	r3,r5,r2
   27e58:	21000104 	addi	r4,r4,4
   27e5c:	183ffc26 	beq	r3,zero,27e50 <_gp+0xfffee380>
   27e60:	003ebe06 	br	2795c <_gp+0xfffede8c>
   27e64:	00c05504 	movi	r3,340
   27e68:	18801236 	bltu	r3,r2,27eb4 <_malloc_r+0x6f8>
   27e6c:	8804d3fa 	srli	r2,r17,15
   27e70:	12001e04 	addi	r8,r2,120
   27e74:	11c01dc4 	addi	r7,r2,119
   27e78:	4209883a 	add	r4,r8,r8
   27e7c:	003e6d06 	br	27834 <_gp+0xfffedd64>
   27e80:	00c40004 	movi	r3,4096
   27e84:	003f4606 	br	27ba0 <_gp+0xfffee0d0>
   27e88:	00800044 	movi	r2,1
   27e8c:	a0800115 	stw	r2,4(r20)
   27e90:	003f7406 	br	27c64 <_gp+0xfffee194>
   27e94:	1805d0ba 	srai	r2,r3,2
   27e98:	01c00044 	movi	r7,1
   27e9c:	30c00117 	ldw	r3,4(r6)
   27ea0:	388e983a 	sll	r7,r7,r2
   27ea4:	2805883a 	mov	r2,r5
   27ea8:	38c6b03a 	or	r3,r7,r3
   27eac:	30c00115 	stw	r3,4(r6)
   27eb0:	003f9b06 	br	27d20 <_gp+0xfffee250>
   27eb4:	00c15504 	movi	r3,1364
   27eb8:	18801a36 	bltu	r3,r2,27f24 <_malloc_r+0x768>
   27ebc:	8804d4ba 	srli	r2,r17,18
   27ec0:	12001f44 	addi	r8,r2,125
   27ec4:	11c01f04 	addi	r7,r2,124
   27ec8:	4209883a 	add	r4,r8,r8
   27ecc:	003e5906 	br	27834 <_gp+0xfffedd64>
   27ed0:	ad400404 	addi	r21,r21,16
   27ed4:	003f1706 	br	27b34 <_gp+0xfffee064>
   27ed8:	00c01504 	movi	r3,84
   27edc:	18802336 	bltu	r3,r2,27f6c <_malloc_r+0x7b0>
   27ee0:	3804d33a 	srli	r2,r7,12
   27ee4:	11401bc4 	addi	r5,r2,111
   27ee8:	10c01b84 	addi	r3,r2,110
   27eec:	294b883a 	add	r5,r5,r5
   27ef0:	003f7b06 	br	27ce0 <_gp+0xfffee210>
   27ef4:	9c000217 	ldw	r16,8(r19)
   27ef8:	00bfff04 	movi	r2,-4
   27efc:	80c00117 	ldw	r3,4(r16)
   27f00:	1886703a 	and	r3,r3,r2
   27f04:	003f5306 	br	27c54 <_gp+0xfffee184>
   27f08:	3083ffcc 	andi	r2,r6,4095
   27f0c:	103f181e 	bne	r2,zero,27b70 <_gp+0xfffee0a0>
   27f10:	99000217 	ldw	r4,8(r19)
   27f14:	b545883a 	add	r2,r22,r21
   27f18:	10800054 	ori	r2,r2,1
   27f1c:	20800115 	stw	r2,4(r4)
   27f20:	003f3e06 	br	27c1c <_gp+0xfffee14c>
   27f24:	01003f84 	movi	r4,254
   27f28:	02001fc4 	movi	r8,127
   27f2c:	01c01f84 	movi	r7,126
   27f30:	003e4006 	br	27834 <_gp+0xfffedd64>
   27f34:	008000f4 	movhi	r2,3
   27f38:	1086b904 	addi	r2,r2,6884
   27f3c:	15000015 	stw	r20,0(r2)
   27f40:	003f1106 	br	27b88 <_gp+0xfffee0b8>
   27f44:	00800044 	movi	r2,1
   27f48:	002b883a 	mov	r21,zero
   27f4c:	003f1f06 	br	27bcc <_gp+0xfffee0fc>
   27f50:	81400204 	addi	r5,r16,8
   27f54:	9009883a 	mov	r4,r18
   27f58:	002b8600 	call	2b860 <_free_r>
   27f5c:	008000f4 	movhi	r2,3
   27f60:	108d8f04 	addi	r2,r2,13884
   27f64:	10c00017 	ldw	r3,0(r2)
   27f68:	003f2c06 	br	27c1c <_gp+0xfffee14c>
   27f6c:	00c05504 	movi	r3,340
   27f70:	18800536 	bltu	r3,r2,27f88 <_malloc_r+0x7cc>
   27f74:	3804d3fa 	srli	r2,r7,15
   27f78:	11401e04 	addi	r5,r2,120
   27f7c:	10c01dc4 	addi	r3,r2,119
   27f80:	294b883a 	add	r5,r5,r5
   27f84:	003f5606 	br	27ce0 <_gp+0xfffee210>
   27f88:	00c15504 	movi	r3,1364
   27f8c:	18800536 	bltu	r3,r2,27fa4 <_malloc_r+0x7e8>
   27f90:	3804d4ba 	srli	r2,r7,18
   27f94:	11401f44 	addi	r5,r2,125
   27f98:	10c01f04 	addi	r3,r2,124
   27f9c:	294b883a 	add	r5,r5,r5
   27fa0:	003f4f06 	br	27ce0 <_gp+0xfffee210>
   27fa4:	01403f84 	movi	r5,254
   27fa8:	00c01f84 	movi	r3,126
   27fac:	003f4c06 	br	27ce0 <_gp+0xfffee210>
   27fb0:	98800117 	ldw	r2,4(r19)
   27fb4:	003fa006 	br	27e38 <_gp+0xfffee368>
   27fb8:	8808d0fa 	srli	r4,r17,3
   27fbc:	20800044 	addi	r2,r4,1
   27fc0:	1085883a 	add	r2,r2,r2
   27fc4:	003e9006 	br	27a08 <_gp+0xfffedf38>

00027fc8 <memchr>:
   27fc8:	208000cc 	andi	r2,r4,3
   27fcc:	280f883a 	mov	r7,r5
   27fd0:	10003426 	beq	r2,zero,280a4 <memchr+0xdc>
   27fd4:	30bfffc4 	addi	r2,r6,-1
   27fd8:	30001a26 	beq	r6,zero,28044 <memchr+0x7c>
   27fdc:	20c00003 	ldbu	r3,0(r4)
   27fe0:	29803fcc 	andi	r6,r5,255
   27fe4:	30c0051e 	bne	r6,r3,27ffc <memchr+0x34>
   27fe8:	00001806 	br	2804c <memchr+0x84>
   27fec:	10001526 	beq	r2,zero,28044 <memchr+0x7c>
   27ff0:	20c00003 	ldbu	r3,0(r4)
   27ff4:	10bfffc4 	addi	r2,r2,-1
   27ff8:	30c01426 	beq	r6,r3,2804c <memchr+0x84>
   27ffc:	21000044 	addi	r4,r4,1
   28000:	20c000cc 	andi	r3,r4,3
   28004:	183ff91e 	bne	r3,zero,27fec <_gp+0xfffee51c>
   28008:	020000c4 	movi	r8,3
   2800c:	40801136 	bltu	r8,r2,28054 <memchr+0x8c>
   28010:	10000c26 	beq	r2,zero,28044 <memchr+0x7c>
   28014:	20c00003 	ldbu	r3,0(r4)
   28018:	29403fcc 	andi	r5,r5,255
   2801c:	28c00b26 	beq	r5,r3,2804c <memchr+0x84>
   28020:	20c00044 	addi	r3,r4,1
   28024:	39803fcc 	andi	r6,r7,255
   28028:	2089883a 	add	r4,r4,r2
   2802c:	00000306 	br	2803c <memchr+0x74>
   28030:	18c00044 	addi	r3,r3,1
   28034:	197fffc3 	ldbu	r5,-1(r3)
   28038:	31400526 	beq	r6,r5,28050 <memchr+0x88>
   2803c:	1805883a 	mov	r2,r3
   28040:	20fffb1e 	bne	r4,r3,28030 <_gp+0xfffee560>
   28044:	0005883a 	mov	r2,zero
   28048:	f800283a 	ret
   2804c:	2005883a 	mov	r2,r4
   28050:	f800283a 	ret
   28054:	28c03fcc 	andi	r3,r5,255
   28058:	1812923a 	slli	r9,r3,8
   2805c:	02ffbff4 	movhi	r11,65279
   28060:	02a02074 	movhi	r10,32897
   28064:	48d2b03a 	or	r9,r9,r3
   28068:	4806943a 	slli	r3,r9,16
   2806c:	5affbfc4 	addi	r11,r11,-257
   28070:	52a02004 	addi	r10,r10,-32640
   28074:	48d2b03a 	or	r9,r9,r3
   28078:	20c00017 	ldw	r3,0(r4)
   2807c:	48c6f03a 	xor	r3,r9,r3
   28080:	1acd883a 	add	r6,r3,r11
   28084:	00c6303a 	nor	r3,zero,r3
   28088:	30c6703a 	and	r3,r6,r3
   2808c:	1a86703a 	and	r3,r3,r10
   28090:	183fe01e 	bne	r3,zero,28014 <_gp+0xfffee544>
   28094:	10bfff04 	addi	r2,r2,-4
   28098:	21000104 	addi	r4,r4,4
   2809c:	40bff636 	bltu	r8,r2,28078 <_gp+0xfffee5a8>
   280a0:	003fdb06 	br	28010 <_gp+0xfffee540>
   280a4:	3005883a 	mov	r2,r6
   280a8:	003fd706 	br	28008 <_gp+0xfffee538>

000280ac <memcpy>:
   280ac:	defffd04 	addi	sp,sp,-12
   280b0:	dfc00215 	stw	ra,8(sp)
   280b4:	dc400115 	stw	r17,4(sp)
   280b8:	dc000015 	stw	r16,0(sp)
   280bc:	00c003c4 	movi	r3,15
   280c0:	2005883a 	mov	r2,r4
   280c4:	1980452e 	bgeu	r3,r6,281dc <memcpy+0x130>
   280c8:	2906b03a 	or	r3,r5,r4
   280cc:	18c000cc 	andi	r3,r3,3
   280d0:	1800441e 	bne	r3,zero,281e4 <memcpy+0x138>
   280d4:	347ffc04 	addi	r17,r6,-16
   280d8:	8822d13a 	srli	r17,r17,4
   280dc:	28c00104 	addi	r3,r5,4
   280e0:	23400104 	addi	r13,r4,4
   280e4:	8820913a 	slli	r16,r17,4
   280e8:	2b000204 	addi	r12,r5,8
   280ec:	22c00204 	addi	r11,r4,8
   280f0:	84000504 	addi	r16,r16,20
   280f4:	2a800304 	addi	r10,r5,12
   280f8:	22400304 	addi	r9,r4,12
   280fc:	2c21883a 	add	r16,r5,r16
   28100:	2811883a 	mov	r8,r5
   28104:	200f883a 	mov	r7,r4
   28108:	41000017 	ldw	r4,0(r8)
   2810c:	1fc00017 	ldw	ra,0(r3)
   28110:	63c00017 	ldw	r15,0(r12)
   28114:	39000015 	stw	r4,0(r7)
   28118:	53800017 	ldw	r14,0(r10)
   2811c:	6fc00015 	stw	ra,0(r13)
   28120:	5bc00015 	stw	r15,0(r11)
   28124:	4b800015 	stw	r14,0(r9)
   28128:	18c00404 	addi	r3,r3,16
   2812c:	39c00404 	addi	r7,r7,16
   28130:	42000404 	addi	r8,r8,16
   28134:	6b400404 	addi	r13,r13,16
   28138:	63000404 	addi	r12,r12,16
   2813c:	5ac00404 	addi	r11,r11,16
   28140:	52800404 	addi	r10,r10,16
   28144:	4a400404 	addi	r9,r9,16
   28148:	1c3fef1e 	bne	r3,r16,28108 <_gp+0xfffee638>
   2814c:	89c00044 	addi	r7,r17,1
   28150:	380e913a 	slli	r7,r7,4
   28154:	310003cc 	andi	r4,r6,15
   28158:	02c000c4 	movi	r11,3
   2815c:	11c7883a 	add	r3,r2,r7
   28160:	29cb883a 	add	r5,r5,r7
   28164:	5900212e 	bgeu	r11,r4,281ec <memcpy+0x140>
   28168:	1813883a 	mov	r9,r3
   2816c:	2811883a 	mov	r8,r5
   28170:	200f883a 	mov	r7,r4
   28174:	42800017 	ldw	r10,0(r8)
   28178:	4a400104 	addi	r9,r9,4
   2817c:	39ffff04 	addi	r7,r7,-4
   28180:	4abfff15 	stw	r10,-4(r9)
   28184:	42000104 	addi	r8,r8,4
   28188:	59fffa36 	bltu	r11,r7,28174 <_gp+0xfffee6a4>
   2818c:	213fff04 	addi	r4,r4,-4
   28190:	2008d0ba 	srli	r4,r4,2
   28194:	318000cc 	andi	r6,r6,3
   28198:	21000044 	addi	r4,r4,1
   2819c:	2109883a 	add	r4,r4,r4
   281a0:	2109883a 	add	r4,r4,r4
   281a4:	1907883a 	add	r3,r3,r4
   281a8:	290b883a 	add	r5,r5,r4
   281ac:	30000626 	beq	r6,zero,281c8 <memcpy+0x11c>
   281b0:	198d883a 	add	r6,r3,r6
   281b4:	29c00003 	ldbu	r7,0(r5)
   281b8:	18c00044 	addi	r3,r3,1
   281bc:	29400044 	addi	r5,r5,1
   281c0:	19ffffc5 	stb	r7,-1(r3)
   281c4:	19bffb1e 	bne	r3,r6,281b4 <_gp+0xfffee6e4>
   281c8:	dfc00217 	ldw	ra,8(sp)
   281cc:	dc400117 	ldw	r17,4(sp)
   281d0:	dc000017 	ldw	r16,0(sp)
   281d4:	dec00304 	addi	sp,sp,12
   281d8:	f800283a 	ret
   281dc:	2007883a 	mov	r3,r4
   281e0:	003ff206 	br	281ac <_gp+0xfffee6dc>
   281e4:	2007883a 	mov	r3,r4
   281e8:	003ff106 	br	281b0 <_gp+0xfffee6e0>
   281ec:	200d883a 	mov	r6,r4
   281f0:	003fee06 	br	281ac <_gp+0xfffee6dc>

000281f4 <memmove>:
   281f4:	2005883a 	mov	r2,r4
   281f8:	29000b2e 	bgeu	r5,r4,28228 <memmove+0x34>
   281fc:	298f883a 	add	r7,r5,r6
   28200:	21c0092e 	bgeu	r4,r7,28228 <memmove+0x34>
   28204:	2187883a 	add	r3,r4,r6
   28208:	198bc83a 	sub	r5,r3,r6
   2820c:	30004826 	beq	r6,zero,28330 <memmove+0x13c>
   28210:	39ffffc4 	addi	r7,r7,-1
   28214:	39000003 	ldbu	r4,0(r7)
   28218:	18ffffc4 	addi	r3,r3,-1
   2821c:	19000005 	stb	r4,0(r3)
   28220:	28fffb1e 	bne	r5,r3,28210 <_gp+0xfffee740>
   28224:	f800283a 	ret
   28228:	00c003c4 	movi	r3,15
   2822c:	1980412e 	bgeu	r3,r6,28334 <memmove+0x140>
   28230:	2886b03a 	or	r3,r5,r2
   28234:	18c000cc 	andi	r3,r3,3
   28238:	1800401e 	bne	r3,zero,2833c <memmove+0x148>
   2823c:	33fffc04 	addi	r15,r6,-16
   28240:	781ed13a 	srli	r15,r15,4
   28244:	28c00104 	addi	r3,r5,4
   28248:	13400104 	addi	r13,r2,4
   2824c:	781c913a 	slli	r14,r15,4
   28250:	2b000204 	addi	r12,r5,8
   28254:	12c00204 	addi	r11,r2,8
   28258:	73800504 	addi	r14,r14,20
   2825c:	2a800304 	addi	r10,r5,12
   28260:	12400304 	addi	r9,r2,12
   28264:	2b9d883a 	add	r14,r5,r14
   28268:	2811883a 	mov	r8,r5
   2826c:	100f883a 	mov	r7,r2
   28270:	41000017 	ldw	r4,0(r8)
   28274:	39c00404 	addi	r7,r7,16
   28278:	18c00404 	addi	r3,r3,16
   2827c:	393ffc15 	stw	r4,-16(r7)
   28280:	193ffc17 	ldw	r4,-16(r3)
   28284:	6b400404 	addi	r13,r13,16
   28288:	5ac00404 	addi	r11,r11,16
   2828c:	693ffc15 	stw	r4,-16(r13)
   28290:	61000017 	ldw	r4,0(r12)
   28294:	4a400404 	addi	r9,r9,16
   28298:	42000404 	addi	r8,r8,16
   2829c:	593ffc15 	stw	r4,-16(r11)
   282a0:	51000017 	ldw	r4,0(r10)
   282a4:	63000404 	addi	r12,r12,16
   282a8:	52800404 	addi	r10,r10,16
   282ac:	493ffc15 	stw	r4,-16(r9)
   282b0:	1bbfef1e 	bne	r3,r14,28270 <_gp+0xfffee7a0>
   282b4:	79000044 	addi	r4,r15,1
   282b8:	2008913a 	slli	r4,r4,4
   282bc:	328003cc 	andi	r10,r6,15
   282c0:	02c000c4 	movi	r11,3
   282c4:	1107883a 	add	r3,r2,r4
   282c8:	290b883a 	add	r5,r5,r4
   282cc:	5a801e2e 	bgeu	r11,r10,28348 <memmove+0x154>
   282d0:	1813883a 	mov	r9,r3
   282d4:	2811883a 	mov	r8,r5
   282d8:	500f883a 	mov	r7,r10
   282dc:	41000017 	ldw	r4,0(r8)
   282e0:	4a400104 	addi	r9,r9,4
   282e4:	39ffff04 	addi	r7,r7,-4
   282e8:	493fff15 	stw	r4,-4(r9)
   282ec:	42000104 	addi	r8,r8,4
   282f0:	59fffa36 	bltu	r11,r7,282dc <_gp+0xfffee80c>
   282f4:	513fff04 	addi	r4,r10,-4
   282f8:	2008d0ba 	srli	r4,r4,2
   282fc:	318000cc 	andi	r6,r6,3
   28300:	21000044 	addi	r4,r4,1
   28304:	2109883a 	add	r4,r4,r4
   28308:	2109883a 	add	r4,r4,r4
   2830c:	1907883a 	add	r3,r3,r4
   28310:	290b883a 	add	r5,r5,r4
   28314:	30000b26 	beq	r6,zero,28344 <memmove+0x150>
   28318:	198d883a 	add	r6,r3,r6
   2831c:	29c00003 	ldbu	r7,0(r5)
   28320:	18c00044 	addi	r3,r3,1
   28324:	29400044 	addi	r5,r5,1
   28328:	19ffffc5 	stb	r7,-1(r3)
   2832c:	19bffb1e 	bne	r3,r6,2831c <_gp+0xfffee84c>
   28330:	f800283a 	ret
   28334:	1007883a 	mov	r3,r2
   28338:	003ff606 	br	28314 <_gp+0xfffee844>
   2833c:	1007883a 	mov	r3,r2
   28340:	003ff506 	br	28318 <_gp+0xfffee848>
   28344:	f800283a 	ret
   28348:	500d883a 	mov	r6,r10
   2834c:	003ff106 	br	28314 <_gp+0xfffee844>

00028350 <memset>:
   28350:	20c000cc 	andi	r3,r4,3
   28354:	2005883a 	mov	r2,r4
   28358:	18004426 	beq	r3,zero,2846c <memset+0x11c>
   2835c:	31ffffc4 	addi	r7,r6,-1
   28360:	30004026 	beq	r6,zero,28464 <memset+0x114>
   28364:	2813883a 	mov	r9,r5
   28368:	200d883a 	mov	r6,r4
   2836c:	2007883a 	mov	r3,r4
   28370:	00000406 	br	28384 <memset+0x34>
   28374:	3a3fffc4 	addi	r8,r7,-1
   28378:	31800044 	addi	r6,r6,1
   2837c:	38003926 	beq	r7,zero,28464 <memset+0x114>
   28380:	400f883a 	mov	r7,r8
   28384:	18c00044 	addi	r3,r3,1
   28388:	32400005 	stb	r9,0(r6)
   2838c:	1a0000cc 	andi	r8,r3,3
   28390:	403ff81e 	bne	r8,zero,28374 <_gp+0xfffee8a4>
   28394:	010000c4 	movi	r4,3
   28398:	21c02d2e 	bgeu	r4,r7,28450 <memset+0x100>
   2839c:	29003fcc 	andi	r4,r5,255
   283a0:	200c923a 	slli	r6,r4,8
   283a4:	3108b03a 	or	r4,r6,r4
   283a8:	200c943a 	slli	r6,r4,16
   283ac:	218cb03a 	or	r6,r4,r6
   283b0:	010003c4 	movi	r4,15
   283b4:	21c0182e 	bgeu	r4,r7,28418 <memset+0xc8>
   283b8:	3b3ffc04 	addi	r12,r7,-16
   283bc:	6018d13a 	srli	r12,r12,4
   283c0:	1a000104 	addi	r8,r3,4
   283c4:	1ac00204 	addi	r11,r3,8
   283c8:	6008913a 	slli	r4,r12,4
   283cc:	1a800304 	addi	r10,r3,12
   283d0:	1813883a 	mov	r9,r3
   283d4:	21000504 	addi	r4,r4,20
   283d8:	1909883a 	add	r4,r3,r4
   283dc:	49800015 	stw	r6,0(r9)
   283e0:	41800015 	stw	r6,0(r8)
   283e4:	59800015 	stw	r6,0(r11)
   283e8:	51800015 	stw	r6,0(r10)
   283ec:	42000404 	addi	r8,r8,16
   283f0:	4a400404 	addi	r9,r9,16
   283f4:	5ac00404 	addi	r11,r11,16
   283f8:	52800404 	addi	r10,r10,16
   283fc:	413ff71e 	bne	r8,r4,283dc <_gp+0xfffee90c>
   28400:	63000044 	addi	r12,r12,1
   28404:	6018913a 	slli	r12,r12,4
   28408:	39c003cc 	andi	r7,r7,15
   2840c:	010000c4 	movi	r4,3
   28410:	1b07883a 	add	r3,r3,r12
   28414:	21c00e2e 	bgeu	r4,r7,28450 <memset+0x100>
   28418:	1813883a 	mov	r9,r3
   2841c:	3811883a 	mov	r8,r7
   28420:	010000c4 	movi	r4,3
   28424:	49800015 	stw	r6,0(r9)
   28428:	423fff04 	addi	r8,r8,-4
   2842c:	4a400104 	addi	r9,r9,4
   28430:	223ffc36 	bltu	r4,r8,28424 <_gp+0xfffee954>
   28434:	393fff04 	addi	r4,r7,-4
   28438:	2008d0ba 	srli	r4,r4,2
   2843c:	39c000cc 	andi	r7,r7,3
   28440:	21000044 	addi	r4,r4,1
   28444:	2109883a 	add	r4,r4,r4
   28448:	2109883a 	add	r4,r4,r4
   2844c:	1907883a 	add	r3,r3,r4
   28450:	38000526 	beq	r7,zero,28468 <memset+0x118>
   28454:	19cf883a 	add	r7,r3,r7
   28458:	19400005 	stb	r5,0(r3)
   2845c:	18c00044 	addi	r3,r3,1
   28460:	38fffd1e 	bne	r7,r3,28458 <_gp+0xfffee988>
   28464:	f800283a 	ret
   28468:	f800283a 	ret
   2846c:	2007883a 	mov	r3,r4
   28470:	300f883a 	mov	r7,r6
   28474:	003fc706 	br	28394 <_gp+0xfffee8c4>

00028478 <_Balloc>:
   28478:	20801317 	ldw	r2,76(r4)
   2847c:	defffc04 	addi	sp,sp,-16
   28480:	dc400115 	stw	r17,4(sp)
   28484:	dc000015 	stw	r16,0(sp)
   28488:	dfc00315 	stw	ra,12(sp)
   2848c:	dc800215 	stw	r18,8(sp)
   28490:	2023883a 	mov	r17,r4
   28494:	2821883a 	mov	r16,r5
   28498:	10000f26 	beq	r2,zero,284d8 <_Balloc+0x60>
   2849c:	8407883a 	add	r3,r16,r16
   284a0:	18c7883a 	add	r3,r3,r3
   284a4:	10c7883a 	add	r3,r2,r3
   284a8:	18800017 	ldw	r2,0(r3)
   284ac:	10001126 	beq	r2,zero,284f4 <_Balloc+0x7c>
   284b0:	11000017 	ldw	r4,0(r2)
   284b4:	19000015 	stw	r4,0(r3)
   284b8:	10000415 	stw	zero,16(r2)
   284bc:	10000315 	stw	zero,12(r2)
   284c0:	dfc00317 	ldw	ra,12(sp)
   284c4:	dc800217 	ldw	r18,8(sp)
   284c8:	dc400117 	ldw	r17,4(sp)
   284cc:	dc000017 	ldw	r16,0(sp)
   284d0:	dec00404 	addi	sp,sp,16
   284d4:	f800283a 	ret
   284d8:	01800844 	movi	r6,33
   284dc:	01400104 	movi	r5,4
   284e0:	002b2cc0 	call	2b2cc <_calloc_r>
   284e4:	88801315 	stw	r2,76(r17)
   284e8:	103fec1e 	bne	r2,zero,2849c <_gp+0xfffee9cc>
   284ec:	0005883a 	mov	r2,zero
   284f0:	003ff306 	br	284c0 <_gp+0xfffee9f0>
   284f4:	01400044 	movi	r5,1
   284f8:	2c24983a 	sll	r18,r5,r16
   284fc:	8809883a 	mov	r4,r17
   28500:	91800144 	addi	r6,r18,5
   28504:	318d883a 	add	r6,r6,r6
   28508:	318d883a 	add	r6,r6,r6
   2850c:	002b2cc0 	call	2b2cc <_calloc_r>
   28510:	103ff626 	beq	r2,zero,284ec <_gp+0xfffeea1c>
   28514:	14000115 	stw	r16,4(r2)
   28518:	14800215 	stw	r18,8(r2)
   2851c:	003fe606 	br	284b8 <_gp+0xfffee9e8>

00028520 <_Bfree>:
   28520:	28000826 	beq	r5,zero,28544 <_Bfree+0x24>
   28524:	28c00117 	ldw	r3,4(r5)
   28528:	20801317 	ldw	r2,76(r4)
   2852c:	18c7883a 	add	r3,r3,r3
   28530:	18c7883a 	add	r3,r3,r3
   28534:	10c5883a 	add	r2,r2,r3
   28538:	10c00017 	ldw	r3,0(r2)
   2853c:	28c00015 	stw	r3,0(r5)
   28540:	11400015 	stw	r5,0(r2)
   28544:	f800283a 	ret

00028548 <__multadd>:
   28548:	defffa04 	addi	sp,sp,-24
   2854c:	dc800315 	stw	r18,12(sp)
   28550:	dc400215 	stw	r17,8(sp)
   28554:	dc000115 	stw	r16,4(sp)
   28558:	2823883a 	mov	r17,r5
   2855c:	2c000417 	ldw	r16,16(r5)
   28560:	dfc00515 	stw	ra,20(sp)
   28564:	dcc00415 	stw	r19,16(sp)
   28568:	2025883a 	mov	r18,r4
   2856c:	29400504 	addi	r5,r5,20
   28570:	0011883a 	mov	r8,zero
   28574:	28c00017 	ldw	r3,0(r5)
   28578:	29400104 	addi	r5,r5,4
   2857c:	42000044 	addi	r8,r8,1
   28580:	18bfffcc 	andi	r2,r3,65535
   28584:	1185383a 	mul	r2,r2,r6
   28588:	1806d43a 	srli	r3,r3,16
   2858c:	11cf883a 	add	r7,r2,r7
   28590:	3808d43a 	srli	r4,r7,16
   28594:	1987383a 	mul	r3,r3,r6
   28598:	38bfffcc 	andi	r2,r7,65535
   2859c:	1907883a 	add	r3,r3,r4
   285a0:	1808943a 	slli	r4,r3,16
   285a4:	180ed43a 	srli	r7,r3,16
   285a8:	2085883a 	add	r2,r4,r2
   285ac:	28bfff15 	stw	r2,-4(r5)
   285b0:	443ff016 	blt	r8,r16,28574 <_gp+0xfffeeaa4>
   285b4:	38000926 	beq	r7,zero,285dc <__multadd+0x94>
   285b8:	88800217 	ldw	r2,8(r17)
   285bc:	80800f0e 	bge	r16,r2,285fc <__multadd+0xb4>
   285c0:	80800144 	addi	r2,r16,5
   285c4:	1085883a 	add	r2,r2,r2
   285c8:	1085883a 	add	r2,r2,r2
   285cc:	8885883a 	add	r2,r17,r2
   285d0:	11c00015 	stw	r7,0(r2)
   285d4:	84000044 	addi	r16,r16,1
   285d8:	8c000415 	stw	r16,16(r17)
   285dc:	8805883a 	mov	r2,r17
   285e0:	dfc00517 	ldw	ra,20(sp)
   285e4:	dcc00417 	ldw	r19,16(sp)
   285e8:	dc800317 	ldw	r18,12(sp)
   285ec:	dc400217 	ldw	r17,8(sp)
   285f0:	dc000117 	ldw	r16,4(sp)
   285f4:	dec00604 	addi	sp,sp,24
   285f8:	f800283a 	ret
   285fc:	89400117 	ldw	r5,4(r17)
   28600:	9009883a 	mov	r4,r18
   28604:	d9c00015 	stw	r7,0(sp)
   28608:	29400044 	addi	r5,r5,1
   2860c:	00284780 	call	28478 <_Balloc>
   28610:	89800417 	ldw	r6,16(r17)
   28614:	89400304 	addi	r5,r17,12
   28618:	11000304 	addi	r4,r2,12
   2861c:	31800084 	addi	r6,r6,2
   28620:	318d883a 	add	r6,r6,r6
   28624:	318d883a 	add	r6,r6,r6
   28628:	1027883a 	mov	r19,r2
   2862c:	00280ac0 	call	280ac <memcpy>
   28630:	d9c00017 	ldw	r7,0(sp)
   28634:	88000a26 	beq	r17,zero,28660 <__multadd+0x118>
   28638:	88c00117 	ldw	r3,4(r17)
   2863c:	90801317 	ldw	r2,76(r18)
   28640:	18c7883a 	add	r3,r3,r3
   28644:	18c7883a 	add	r3,r3,r3
   28648:	10c5883a 	add	r2,r2,r3
   2864c:	10c00017 	ldw	r3,0(r2)
   28650:	88c00015 	stw	r3,0(r17)
   28654:	14400015 	stw	r17,0(r2)
   28658:	9823883a 	mov	r17,r19
   2865c:	003fd806 	br	285c0 <_gp+0xfffeeaf0>
   28660:	9823883a 	mov	r17,r19
   28664:	003fd606 	br	285c0 <_gp+0xfffeeaf0>

00028668 <__s2b>:
   28668:	defff904 	addi	sp,sp,-28
   2866c:	dc400115 	stw	r17,4(sp)
   28670:	dc000015 	stw	r16,0(sp)
   28674:	2023883a 	mov	r17,r4
   28678:	2821883a 	mov	r16,r5
   2867c:	39000204 	addi	r4,r7,8
   28680:	01400244 	movi	r5,9
   28684:	dcc00315 	stw	r19,12(sp)
   28688:	dc800215 	stw	r18,8(sp)
   2868c:	dfc00615 	stw	ra,24(sp)
   28690:	dd400515 	stw	r21,20(sp)
   28694:	dd000415 	stw	r20,16(sp)
   28698:	3825883a 	mov	r18,r7
   2869c:	3027883a 	mov	r19,r6
   286a0:	002c94c0 	call	2c94c <__divsi3>
   286a4:	00c00044 	movi	r3,1
   286a8:	000b883a 	mov	r5,zero
   286ac:	1880030e 	bge	r3,r2,286bc <__s2b+0x54>
   286b0:	18c7883a 	add	r3,r3,r3
   286b4:	29400044 	addi	r5,r5,1
   286b8:	18bffd16 	blt	r3,r2,286b0 <_gp+0xfffeebe0>
   286bc:	8809883a 	mov	r4,r17
   286c0:	00284780 	call	28478 <_Balloc>
   286c4:	d8c00717 	ldw	r3,28(sp)
   286c8:	10c00515 	stw	r3,20(r2)
   286cc:	00c00044 	movi	r3,1
   286d0:	10c00415 	stw	r3,16(r2)
   286d4:	00c00244 	movi	r3,9
   286d8:	1cc0210e 	bge	r3,r19,28760 <__s2b+0xf8>
   286dc:	80eb883a 	add	r21,r16,r3
   286e0:	a829883a 	mov	r20,r21
   286e4:	84e1883a 	add	r16,r16,r19
   286e8:	a1c00007 	ldb	r7,0(r20)
   286ec:	01800284 	movi	r6,10
   286f0:	a5000044 	addi	r20,r20,1
   286f4:	100b883a 	mov	r5,r2
   286f8:	39fff404 	addi	r7,r7,-48
   286fc:	8809883a 	mov	r4,r17
   28700:	00285480 	call	28548 <__multadd>
   28704:	a43ff81e 	bne	r20,r16,286e8 <_gp+0xfffeec18>
   28708:	ace1883a 	add	r16,r21,r19
   2870c:	843ffe04 	addi	r16,r16,-8
   28710:	9c800a0e 	bge	r19,r18,2873c <__s2b+0xd4>
   28714:	94e5c83a 	sub	r18,r18,r19
   28718:	84a5883a 	add	r18,r16,r18
   2871c:	81c00007 	ldb	r7,0(r16)
   28720:	01800284 	movi	r6,10
   28724:	84000044 	addi	r16,r16,1
   28728:	100b883a 	mov	r5,r2
   2872c:	39fff404 	addi	r7,r7,-48
   28730:	8809883a 	mov	r4,r17
   28734:	00285480 	call	28548 <__multadd>
   28738:	84bff81e 	bne	r16,r18,2871c <_gp+0xfffeec4c>
   2873c:	dfc00617 	ldw	ra,24(sp)
   28740:	dd400517 	ldw	r21,20(sp)
   28744:	dd000417 	ldw	r20,16(sp)
   28748:	dcc00317 	ldw	r19,12(sp)
   2874c:	dc800217 	ldw	r18,8(sp)
   28750:	dc400117 	ldw	r17,4(sp)
   28754:	dc000017 	ldw	r16,0(sp)
   28758:	dec00704 	addi	sp,sp,28
   2875c:	f800283a 	ret
   28760:	84000284 	addi	r16,r16,10
   28764:	1827883a 	mov	r19,r3
   28768:	003fe906 	br	28710 <_gp+0xfffeec40>

0002876c <__hi0bits>:
   2876c:	20bfffec 	andhi	r2,r4,65535
   28770:	1000141e 	bne	r2,zero,287c4 <__hi0bits+0x58>
   28774:	2008943a 	slli	r4,r4,16
   28778:	00800404 	movi	r2,16
   2877c:	20ffc02c 	andhi	r3,r4,65280
   28780:	1800021e 	bne	r3,zero,2878c <__hi0bits+0x20>
   28784:	2008923a 	slli	r4,r4,8
   28788:	10800204 	addi	r2,r2,8
   2878c:	20fc002c 	andhi	r3,r4,61440
   28790:	1800021e 	bne	r3,zero,2879c <__hi0bits+0x30>
   28794:	2008913a 	slli	r4,r4,4
   28798:	10800104 	addi	r2,r2,4
   2879c:	20f0002c 	andhi	r3,r4,49152
   287a0:	1800031e 	bne	r3,zero,287b0 <__hi0bits+0x44>
   287a4:	2109883a 	add	r4,r4,r4
   287a8:	10800084 	addi	r2,r2,2
   287ac:	2109883a 	add	r4,r4,r4
   287b0:	20000316 	blt	r4,zero,287c0 <__hi0bits+0x54>
   287b4:	2110002c 	andhi	r4,r4,16384
   287b8:	2000041e 	bne	r4,zero,287cc <__hi0bits+0x60>
   287bc:	00800804 	movi	r2,32
   287c0:	f800283a 	ret
   287c4:	0005883a 	mov	r2,zero
   287c8:	003fec06 	br	2877c <_gp+0xfffeecac>
   287cc:	10800044 	addi	r2,r2,1
   287d0:	f800283a 	ret

000287d4 <__lo0bits>:
   287d4:	20c00017 	ldw	r3,0(r4)
   287d8:	188001cc 	andi	r2,r3,7
   287dc:	10000826 	beq	r2,zero,28800 <__lo0bits+0x2c>
   287e0:	1880004c 	andi	r2,r3,1
   287e4:	1000211e 	bne	r2,zero,2886c <__lo0bits+0x98>
   287e8:	1880008c 	andi	r2,r3,2
   287ec:	1000211e 	bne	r2,zero,28874 <__lo0bits+0xa0>
   287f0:	1806d0ba 	srli	r3,r3,2
   287f4:	00800084 	movi	r2,2
   287f8:	20c00015 	stw	r3,0(r4)
   287fc:	f800283a 	ret
   28800:	18bfffcc 	andi	r2,r3,65535
   28804:	10001326 	beq	r2,zero,28854 <__lo0bits+0x80>
   28808:	0005883a 	mov	r2,zero
   2880c:	19403fcc 	andi	r5,r3,255
   28810:	2800021e 	bne	r5,zero,2881c <__lo0bits+0x48>
   28814:	1806d23a 	srli	r3,r3,8
   28818:	10800204 	addi	r2,r2,8
   2881c:	194003cc 	andi	r5,r3,15
   28820:	2800021e 	bne	r5,zero,2882c <__lo0bits+0x58>
   28824:	1806d13a 	srli	r3,r3,4
   28828:	10800104 	addi	r2,r2,4
   2882c:	194000cc 	andi	r5,r3,3
   28830:	2800021e 	bne	r5,zero,2883c <__lo0bits+0x68>
   28834:	1806d0ba 	srli	r3,r3,2
   28838:	10800084 	addi	r2,r2,2
   2883c:	1940004c 	andi	r5,r3,1
   28840:	2800081e 	bne	r5,zero,28864 <__lo0bits+0x90>
   28844:	1806d07a 	srli	r3,r3,1
   28848:	1800051e 	bne	r3,zero,28860 <__lo0bits+0x8c>
   2884c:	00800804 	movi	r2,32
   28850:	f800283a 	ret
   28854:	1806d43a 	srli	r3,r3,16
   28858:	00800404 	movi	r2,16
   2885c:	003feb06 	br	2880c <_gp+0xfffeed3c>
   28860:	10800044 	addi	r2,r2,1
   28864:	20c00015 	stw	r3,0(r4)
   28868:	f800283a 	ret
   2886c:	0005883a 	mov	r2,zero
   28870:	f800283a 	ret
   28874:	1806d07a 	srli	r3,r3,1
   28878:	00800044 	movi	r2,1
   2887c:	20c00015 	stw	r3,0(r4)
   28880:	f800283a 	ret

00028884 <__i2b>:
   28884:	defffd04 	addi	sp,sp,-12
   28888:	dc000015 	stw	r16,0(sp)
   2888c:	04000044 	movi	r16,1
   28890:	dc400115 	stw	r17,4(sp)
   28894:	2823883a 	mov	r17,r5
   28898:	800b883a 	mov	r5,r16
   2889c:	dfc00215 	stw	ra,8(sp)
   288a0:	00284780 	call	28478 <_Balloc>
   288a4:	14400515 	stw	r17,20(r2)
   288a8:	14000415 	stw	r16,16(r2)
   288ac:	dfc00217 	ldw	ra,8(sp)
   288b0:	dc400117 	ldw	r17,4(sp)
   288b4:	dc000017 	ldw	r16,0(sp)
   288b8:	dec00304 	addi	sp,sp,12
   288bc:	f800283a 	ret

000288c0 <__multiply>:
   288c0:	defffa04 	addi	sp,sp,-24
   288c4:	dcc00315 	stw	r19,12(sp)
   288c8:	dc800215 	stw	r18,8(sp)
   288cc:	34c00417 	ldw	r19,16(r6)
   288d0:	2c800417 	ldw	r18,16(r5)
   288d4:	dd000415 	stw	r20,16(sp)
   288d8:	dc400115 	stw	r17,4(sp)
   288dc:	dfc00515 	stw	ra,20(sp)
   288e0:	dc000015 	stw	r16,0(sp)
   288e4:	2829883a 	mov	r20,r5
   288e8:	3023883a 	mov	r17,r6
   288ec:	94c0050e 	bge	r18,r19,28904 <__multiply+0x44>
   288f0:	9007883a 	mov	r3,r18
   288f4:	3029883a 	mov	r20,r6
   288f8:	9825883a 	mov	r18,r19
   288fc:	2823883a 	mov	r17,r5
   28900:	1827883a 	mov	r19,r3
   28904:	a0800217 	ldw	r2,8(r20)
   28908:	94e1883a 	add	r16,r18,r19
   2890c:	a1400117 	ldw	r5,4(r20)
   28910:	1400010e 	bge	r2,r16,28918 <__multiply+0x58>
   28914:	29400044 	addi	r5,r5,1
   28918:	00284780 	call	28478 <_Balloc>
   2891c:	8415883a 	add	r10,r16,r16
   28920:	12c00504 	addi	r11,r2,20
   28924:	5295883a 	add	r10,r10,r10
   28928:	5a95883a 	add	r10,r11,r10
   2892c:	5807883a 	mov	r3,r11
   28930:	5a80032e 	bgeu	r11,r10,28940 <__multiply+0x80>
   28934:	18000015 	stw	zero,0(r3)
   28938:	18c00104 	addi	r3,r3,4
   2893c:	1abffd36 	bltu	r3,r10,28934 <_gp+0xfffeee64>
   28940:	9ce7883a 	add	r19,r19,r19
   28944:	94a5883a 	add	r18,r18,r18
   28948:	89800504 	addi	r6,r17,20
   2894c:	9ce7883a 	add	r19,r19,r19
   28950:	a3400504 	addi	r13,r20,20
   28954:	94a5883a 	add	r18,r18,r18
   28958:	34d9883a 	add	r12,r6,r19
   2895c:	6c93883a 	add	r9,r13,r18
   28960:	3300422e 	bgeu	r6,r12,28a6c <__multiply+0x1ac>
   28964:	37c00017 	ldw	ra,0(r6)
   28968:	fbffffcc 	andi	r15,ra,65535
   2896c:	78001b26 	beq	r15,zero,289dc <__multiply+0x11c>
   28970:	5811883a 	mov	r8,r11
   28974:	681d883a 	mov	r14,r13
   28978:	000f883a 	mov	r7,zero
   2897c:	71000017 	ldw	r4,0(r14)
   28980:	40c00017 	ldw	r3,0(r8)
   28984:	73800104 	addi	r14,r14,4
   28988:	217fffcc 	andi	r5,r4,65535
   2898c:	2bcb383a 	mul	r5,r5,r15
   28990:	2008d43a 	srli	r4,r4,16
   28994:	1c7fffcc 	andi	r17,r3,65535
   28998:	2c4b883a 	add	r5,r5,r17
   2899c:	29cb883a 	add	r5,r5,r7
   289a0:	23c9383a 	mul	r4,r4,r15
   289a4:	1806d43a 	srli	r3,r3,16
   289a8:	280ed43a 	srli	r7,r5,16
   289ac:	297fffcc 	andi	r5,r5,65535
   289b0:	20c7883a 	add	r3,r4,r3
   289b4:	19c7883a 	add	r3,r3,r7
   289b8:	1808943a 	slli	r4,r3,16
   289bc:	4023883a 	mov	r17,r8
   289c0:	180ed43a 	srli	r7,r3,16
   289c4:	214ab03a 	or	r5,r4,r5
   289c8:	41400015 	stw	r5,0(r8)
   289cc:	42000104 	addi	r8,r8,4
   289d0:	727fea36 	bltu	r14,r9,2897c <_gp+0xfffeeeac>
   289d4:	89c00115 	stw	r7,4(r17)
   289d8:	37c00017 	ldw	ra,0(r6)
   289dc:	f83ed43a 	srli	ra,ra,16
   289e0:	f8001f26 	beq	ra,zero,28a60 <__multiply+0x1a0>
   289e4:	58c00017 	ldw	r3,0(r11)
   289e8:	681d883a 	mov	r14,r13
   289ec:	581f883a 	mov	r15,r11
   289f0:	1811883a 	mov	r8,r3
   289f4:	5825883a 	mov	r18,r11
   289f8:	000f883a 	mov	r7,zero
   289fc:	00000106 	br	28a04 <__multiply+0x144>
   28a00:	8825883a 	mov	r18,r17
   28a04:	7140000b 	ldhu	r5,0(r14)
   28a08:	4010d43a 	srli	r8,r8,16
   28a0c:	193fffcc 	andi	r4,r3,65535
   28a10:	2fcb383a 	mul	r5,r5,ra
   28a14:	7bc00104 	addi	r15,r15,4
   28a18:	73800104 	addi	r14,r14,4
   28a1c:	2a0b883a 	add	r5,r5,r8
   28a20:	29cb883a 	add	r5,r5,r7
   28a24:	2806943a 	slli	r3,r5,16
   28a28:	94400104 	addi	r17,r18,4
   28a2c:	280ad43a 	srli	r5,r5,16
   28a30:	1908b03a 	or	r4,r3,r4
   28a34:	793fff15 	stw	r4,-4(r15)
   28a38:	70ffff17 	ldw	r3,-4(r14)
   28a3c:	8a000017 	ldw	r8,0(r17)
   28a40:	1806d43a 	srli	r3,r3,16
   28a44:	413fffcc 	andi	r4,r8,65535
   28a48:	1fc7383a 	mul	r3,r3,ra
   28a4c:	1907883a 	add	r3,r3,r4
   28a50:	1947883a 	add	r3,r3,r5
   28a54:	180ed43a 	srli	r7,r3,16
   28a58:	727fe936 	bltu	r14,r9,28a00 <_gp+0xfffeef30>
   28a5c:	90c00115 	stw	r3,4(r18)
   28a60:	31800104 	addi	r6,r6,4
   28a64:	5ac00104 	addi	r11,r11,4
   28a68:	333fbe36 	bltu	r6,r12,28964 <_gp+0xfffeee94>
   28a6c:	0400090e 	bge	zero,r16,28a94 <__multiply+0x1d4>
   28a70:	50ffff17 	ldw	r3,-4(r10)
   28a74:	52bfff04 	addi	r10,r10,-4
   28a78:	18000326 	beq	r3,zero,28a88 <__multiply+0x1c8>
   28a7c:	00000506 	br	28a94 <__multiply+0x1d4>
   28a80:	50c00017 	ldw	r3,0(r10)
   28a84:	1800031e 	bne	r3,zero,28a94 <__multiply+0x1d4>
   28a88:	843fffc4 	addi	r16,r16,-1
   28a8c:	52bfff04 	addi	r10,r10,-4
   28a90:	803ffb1e 	bne	r16,zero,28a80 <_gp+0xfffeefb0>
   28a94:	14000415 	stw	r16,16(r2)
   28a98:	dfc00517 	ldw	ra,20(sp)
   28a9c:	dd000417 	ldw	r20,16(sp)
   28aa0:	dcc00317 	ldw	r19,12(sp)
   28aa4:	dc800217 	ldw	r18,8(sp)
   28aa8:	dc400117 	ldw	r17,4(sp)
   28aac:	dc000017 	ldw	r16,0(sp)
   28ab0:	dec00604 	addi	sp,sp,24
   28ab4:	f800283a 	ret

00028ab8 <__pow5mult>:
   28ab8:	defffa04 	addi	sp,sp,-24
   28abc:	dcc00315 	stw	r19,12(sp)
   28ac0:	dc000015 	stw	r16,0(sp)
   28ac4:	dfc00515 	stw	ra,20(sp)
   28ac8:	dd000415 	stw	r20,16(sp)
   28acc:	dc800215 	stw	r18,8(sp)
   28ad0:	dc400115 	stw	r17,4(sp)
   28ad4:	308000cc 	andi	r2,r6,3
   28ad8:	3021883a 	mov	r16,r6
   28adc:	2027883a 	mov	r19,r4
   28ae0:	10002f1e 	bne	r2,zero,28ba0 <__pow5mult+0xe8>
   28ae4:	2825883a 	mov	r18,r5
   28ae8:	8021d0ba 	srai	r16,r16,2
   28aec:	80001a26 	beq	r16,zero,28b58 <__pow5mult+0xa0>
   28af0:	9c401217 	ldw	r17,72(r19)
   28af4:	8800061e 	bne	r17,zero,28b10 <__pow5mult+0x58>
   28af8:	00003406 	br	28bcc <__pow5mult+0x114>
   28afc:	8021d07a 	srai	r16,r16,1
   28b00:	80001526 	beq	r16,zero,28b58 <__pow5mult+0xa0>
   28b04:	88800017 	ldw	r2,0(r17)
   28b08:	10001c26 	beq	r2,zero,28b7c <__pow5mult+0xc4>
   28b0c:	1023883a 	mov	r17,r2
   28b10:	8080004c 	andi	r2,r16,1
   28b14:	103ff926 	beq	r2,zero,28afc <_gp+0xfffef02c>
   28b18:	880d883a 	mov	r6,r17
   28b1c:	900b883a 	mov	r5,r18
   28b20:	9809883a 	mov	r4,r19
   28b24:	00288c00 	call	288c0 <__multiply>
   28b28:	90001b26 	beq	r18,zero,28b98 <__pow5mult+0xe0>
   28b2c:	91000117 	ldw	r4,4(r18)
   28b30:	98c01317 	ldw	r3,76(r19)
   28b34:	8021d07a 	srai	r16,r16,1
   28b38:	2109883a 	add	r4,r4,r4
   28b3c:	2109883a 	add	r4,r4,r4
   28b40:	1907883a 	add	r3,r3,r4
   28b44:	19000017 	ldw	r4,0(r3)
   28b48:	91000015 	stw	r4,0(r18)
   28b4c:	1c800015 	stw	r18,0(r3)
   28b50:	1025883a 	mov	r18,r2
   28b54:	803feb1e 	bne	r16,zero,28b04 <_gp+0xfffef034>
   28b58:	9005883a 	mov	r2,r18
   28b5c:	dfc00517 	ldw	ra,20(sp)
   28b60:	dd000417 	ldw	r20,16(sp)
   28b64:	dcc00317 	ldw	r19,12(sp)
   28b68:	dc800217 	ldw	r18,8(sp)
   28b6c:	dc400117 	ldw	r17,4(sp)
   28b70:	dc000017 	ldw	r16,0(sp)
   28b74:	dec00604 	addi	sp,sp,24
   28b78:	f800283a 	ret
   28b7c:	880d883a 	mov	r6,r17
   28b80:	880b883a 	mov	r5,r17
   28b84:	9809883a 	mov	r4,r19
   28b88:	00288c00 	call	288c0 <__multiply>
   28b8c:	88800015 	stw	r2,0(r17)
   28b90:	10000015 	stw	zero,0(r2)
   28b94:	003fdd06 	br	28b0c <_gp+0xfffef03c>
   28b98:	1025883a 	mov	r18,r2
   28b9c:	003fd706 	br	28afc <_gp+0xfffef02c>
   28ba0:	10bfffc4 	addi	r2,r2,-1
   28ba4:	1085883a 	add	r2,r2,r2
   28ba8:	00c000f4 	movhi	r3,3
   28bac:	18ffad04 	addi	r3,r3,-332
   28bb0:	1085883a 	add	r2,r2,r2
   28bb4:	1885883a 	add	r2,r3,r2
   28bb8:	11800017 	ldw	r6,0(r2)
   28bbc:	000f883a 	mov	r7,zero
   28bc0:	00285480 	call	28548 <__multadd>
   28bc4:	1025883a 	mov	r18,r2
   28bc8:	003fc706 	br	28ae8 <_gp+0xfffef018>
   28bcc:	05000044 	movi	r20,1
   28bd0:	a00b883a 	mov	r5,r20
   28bd4:	9809883a 	mov	r4,r19
   28bd8:	00284780 	call	28478 <_Balloc>
   28bdc:	1023883a 	mov	r17,r2
   28be0:	00809c44 	movi	r2,625
   28be4:	88800515 	stw	r2,20(r17)
   28be8:	8d000415 	stw	r20,16(r17)
   28bec:	9c401215 	stw	r17,72(r19)
   28bf0:	88000015 	stw	zero,0(r17)
   28bf4:	003fc606 	br	28b10 <_gp+0xfffef040>

00028bf8 <__lshift>:
   28bf8:	defff904 	addi	sp,sp,-28
   28bfc:	dd400515 	stw	r21,20(sp)
   28c00:	dcc00315 	stw	r19,12(sp)
   28c04:	302bd17a 	srai	r21,r6,5
   28c08:	2cc00417 	ldw	r19,16(r5)
   28c0c:	28800217 	ldw	r2,8(r5)
   28c10:	dd000415 	stw	r20,16(sp)
   28c14:	ace7883a 	add	r19,r21,r19
   28c18:	dc800215 	stw	r18,8(sp)
   28c1c:	dc400115 	stw	r17,4(sp)
   28c20:	dc000015 	stw	r16,0(sp)
   28c24:	dfc00615 	stw	ra,24(sp)
   28c28:	9c000044 	addi	r16,r19,1
   28c2c:	2823883a 	mov	r17,r5
   28c30:	3029883a 	mov	r20,r6
   28c34:	2025883a 	mov	r18,r4
   28c38:	29400117 	ldw	r5,4(r5)
   28c3c:	1400030e 	bge	r2,r16,28c4c <__lshift+0x54>
   28c40:	1085883a 	add	r2,r2,r2
   28c44:	29400044 	addi	r5,r5,1
   28c48:	143ffd16 	blt	r2,r16,28c40 <_gp+0xfffef170>
   28c4c:	9009883a 	mov	r4,r18
   28c50:	00284780 	call	28478 <_Balloc>
   28c54:	10c00504 	addi	r3,r2,20
   28c58:	0540070e 	bge	zero,r21,28c78 <__lshift+0x80>
   28c5c:	ad6b883a 	add	r21,r21,r21
   28c60:	ad6b883a 	add	r21,r21,r21
   28c64:	1809883a 	mov	r4,r3
   28c68:	1d47883a 	add	r3,r3,r21
   28c6c:	20000015 	stw	zero,0(r4)
   28c70:	21000104 	addi	r4,r4,4
   28c74:	193ffd1e 	bne	r3,r4,28c6c <_gp+0xfffef19c>
   28c78:	8a000417 	ldw	r8,16(r17)
   28c7c:	89000504 	addi	r4,r17,20
   28c80:	a18007cc 	andi	r6,r20,31
   28c84:	4211883a 	add	r8,r8,r8
   28c88:	4211883a 	add	r8,r8,r8
   28c8c:	2211883a 	add	r8,r4,r8
   28c90:	30002326 	beq	r6,zero,28d20 <__lshift+0x128>
   28c94:	02400804 	movi	r9,32
   28c98:	4993c83a 	sub	r9,r9,r6
   28c9c:	000b883a 	mov	r5,zero
   28ca0:	21c00017 	ldw	r7,0(r4)
   28ca4:	1815883a 	mov	r10,r3
   28ca8:	18c00104 	addi	r3,r3,4
   28cac:	398e983a 	sll	r7,r7,r6
   28cb0:	21000104 	addi	r4,r4,4
   28cb4:	394ab03a 	or	r5,r7,r5
   28cb8:	197fff15 	stw	r5,-4(r3)
   28cbc:	217fff17 	ldw	r5,-4(r4)
   28cc0:	2a4ad83a 	srl	r5,r5,r9
   28cc4:	223ff636 	bltu	r4,r8,28ca0 <_gp+0xfffef1d0>
   28cc8:	51400115 	stw	r5,4(r10)
   28ccc:	28001a1e 	bne	r5,zero,28d38 <__lshift+0x140>
   28cd0:	843fffc4 	addi	r16,r16,-1
   28cd4:	14000415 	stw	r16,16(r2)
   28cd8:	88000826 	beq	r17,zero,28cfc <__lshift+0x104>
   28cdc:	89000117 	ldw	r4,4(r17)
   28ce0:	90c01317 	ldw	r3,76(r18)
   28ce4:	2109883a 	add	r4,r4,r4
   28ce8:	2109883a 	add	r4,r4,r4
   28cec:	1907883a 	add	r3,r3,r4
   28cf0:	19000017 	ldw	r4,0(r3)
   28cf4:	89000015 	stw	r4,0(r17)
   28cf8:	1c400015 	stw	r17,0(r3)
   28cfc:	dfc00617 	ldw	ra,24(sp)
   28d00:	dd400517 	ldw	r21,20(sp)
   28d04:	dd000417 	ldw	r20,16(sp)
   28d08:	dcc00317 	ldw	r19,12(sp)
   28d0c:	dc800217 	ldw	r18,8(sp)
   28d10:	dc400117 	ldw	r17,4(sp)
   28d14:	dc000017 	ldw	r16,0(sp)
   28d18:	dec00704 	addi	sp,sp,28
   28d1c:	f800283a 	ret
   28d20:	21400017 	ldw	r5,0(r4)
   28d24:	18c00104 	addi	r3,r3,4
   28d28:	21000104 	addi	r4,r4,4
   28d2c:	197fff15 	stw	r5,-4(r3)
   28d30:	223ffb36 	bltu	r4,r8,28d20 <_gp+0xfffef250>
   28d34:	003fe606 	br	28cd0 <_gp+0xfffef200>
   28d38:	9c000084 	addi	r16,r19,2
   28d3c:	003fe406 	br	28cd0 <_gp+0xfffef200>

00028d40 <__mcmp>:
   28d40:	20800417 	ldw	r2,16(r4)
   28d44:	28c00417 	ldw	r3,16(r5)
   28d48:	10c5c83a 	sub	r2,r2,r3
   28d4c:	1000111e 	bne	r2,zero,28d94 <__mcmp+0x54>
   28d50:	18c7883a 	add	r3,r3,r3
   28d54:	18c7883a 	add	r3,r3,r3
   28d58:	21000504 	addi	r4,r4,20
   28d5c:	29400504 	addi	r5,r5,20
   28d60:	20c5883a 	add	r2,r4,r3
   28d64:	28cb883a 	add	r5,r5,r3
   28d68:	00000106 	br	28d70 <__mcmp+0x30>
   28d6c:	20800a2e 	bgeu	r4,r2,28d98 <__mcmp+0x58>
   28d70:	10bfff04 	addi	r2,r2,-4
   28d74:	297fff04 	addi	r5,r5,-4
   28d78:	11800017 	ldw	r6,0(r2)
   28d7c:	28c00017 	ldw	r3,0(r5)
   28d80:	30fffa26 	beq	r6,r3,28d6c <_gp+0xfffef29c>
   28d84:	30c00236 	bltu	r6,r3,28d90 <__mcmp+0x50>
   28d88:	00800044 	movi	r2,1
   28d8c:	f800283a 	ret
   28d90:	00bfffc4 	movi	r2,-1
   28d94:	f800283a 	ret
   28d98:	0005883a 	mov	r2,zero
   28d9c:	f800283a 	ret

00028da0 <__mdiff>:
   28da0:	28c00417 	ldw	r3,16(r5)
   28da4:	30800417 	ldw	r2,16(r6)
   28da8:	defffa04 	addi	sp,sp,-24
   28dac:	dcc00315 	stw	r19,12(sp)
   28db0:	dc800215 	stw	r18,8(sp)
   28db4:	dfc00515 	stw	ra,20(sp)
   28db8:	dd000415 	stw	r20,16(sp)
   28dbc:	dc400115 	stw	r17,4(sp)
   28dc0:	dc000015 	stw	r16,0(sp)
   28dc4:	1887c83a 	sub	r3,r3,r2
   28dc8:	2825883a 	mov	r18,r5
   28dcc:	3027883a 	mov	r19,r6
   28dd0:	1800141e 	bne	r3,zero,28e24 <__mdiff+0x84>
   28dd4:	1085883a 	add	r2,r2,r2
   28dd8:	1085883a 	add	r2,r2,r2
   28ddc:	2a000504 	addi	r8,r5,20
   28de0:	34000504 	addi	r16,r6,20
   28de4:	4087883a 	add	r3,r8,r2
   28de8:	8085883a 	add	r2,r16,r2
   28dec:	00000106 	br	28df4 <__mdiff+0x54>
   28df0:	40c0592e 	bgeu	r8,r3,28f58 <__mdiff+0x1b8>
   28df4:	18ffff04 	addi	r3,r3,-4
   28df8:	10bfff04 	addi	r2,r2,-4
   28dfc:	19c00017 	ldw	r7,0(r3)
   28e00:	11400017 	ldw	r5,0(r2)
   28e04:	397ffa26 	beq	r7,r5,28df0 <_gp+0xfffef320>
   28e08:	3940592e 	bgeu	r7,r5,28f70 <__mdiff+0x1d0>
   28e0c:	9005883a 	mov	r2,r18
   28e10:	4023883a 	mov	r17,r8
   28e14:	9825883a 	mov	r18,r19
   28e18:	05000044 	movi	r20,1
   28e1c:	1027883a 	mov	r19,r2
   28e20:	00000406 	br	28e34 <__mdiff+0x94>
   28e24:	18005616 	blt	r3,zero,28f80 <__mdiff+0x1e0>
   28e28:	34400504 	addi	r17,r6,20
   28e2c:	2c000504 	addi	r16,r5,20
   28e30:	0029883a 	mov	r20,zero
   28e34:	91400117 	ldw	r5,4(r18)
   28e38:	00284780 	call	28478 <_Balloc>
   28e3c:	92400417 	ldw	r9,16(r18)
   28e40:	9b000417 	ldw	r12,16(r19)
   28e44:	12c00504 	addi	r11,r2,20
   28e48:	4a51883a 	add	r8,r9,r9
   28e4c:	6319883a 	add	r12,r12,r12
   28e50:	4211883a 	add	r8,r8,r8
   28e54:	6319883a 	add	r12,r12,r12
   28e58:	15000315 	stw	r20,12(r2)
   28e5c:	8211883a 	add	r8,r16,r8
   28e60:	8b19883a 	add	r12,r17,r12
   28e64:	0007883a 	mov	r3,zero
   28e68:	81400017 	ldw	r5,0(r16)
   28e6c:	89c00017 	ldw	r7,0(r17)
   28e70:	59800104 	addi	r6,r11,4
   28e74:	293fffcc 	andi	r4,r5,65535
   28e78:	20c7883a 	add	r3,r4,r3
   28e7c:	393fffcc 	andi	r4,r7,65535
   28e80:	1909c83a 	sub	r4,r3,r4
   28e84:	280ad43a 	srli	r5,r5,16
   28e88:	380ed43a 	srli	r7,r7,16
   28e8c:	2007d43a 	srai	r3,r4,16
   28e90:	213fffcc 	andi	r4,r4,65535
   28e94:	29cbc83a 	sub	r5,r5,r7
   28e98:	28c7883a 	add	r3,r5,r3
   28e9c:	180a943a 	slli	r5,r3,16
   28ea0:	8c400104 	addi	r17,r17,4
   28ea4:	84000104 	addi	r16,r16,4
   28ea8:	2908b03a 	or	r4,r5,r4
   28eac:	59000015 	stw	r4,0(r11)
   28eb0:	1807d43a 	srai	r3,r3,16
   28eb4:	3015883a 	mov	r10,r6
   28eb8:	3017883a 	mov	r11,r6
   28ebc:	8b3fea36 	bltu	r17,r12,28e68 <_gp+0xfffef398>
   28ec0:	8200162e 	bgeu	r16,r8,28f1c <__mdiff+0x17c>
   28ec4:	8017883a 	mov	r11,r16
   28ec8:	59400017 	ldw	r5,0(r11)
   28ecc:	31800104 	addi	r6,r6,4
   28ed0:	5ac00104 	addi	r11,r11,4
   28ed4:	293fffcc 	andi	r4,r5,65535
   28ed8:	20c7883a 	add	r3,r4,r3
   28edc:	280ed43a 	srli	r7,r5,16
   28ee0:	180bd43a 	srai	r5,r3,16
   28ee4:	193fffcc 	andi	r4,r3,65535
   28ee8:	3947883a 	add	r3,r7,r5
   28eec:	180a943a 	slli	r5,r3,16
   28ef0:	1807d43a 	srai	r3,r3,16
   28ef4:	2908b03a 	or	r4,r5,r4
   28ef8:	313fff15 	stw	r4,-4(r6)
   28efc:	5a3ff236 	bltu	r11,r8,28ec8 <_gp+0xfffef3f8>
   28f00:	0406303a 	nor	r3,zero,r16
   28f04:	1a07883a 	add	r3,r3,r8
   28f08:	1806d0ba 	srli	r3,r3,2
   28f0c:	18c00044 	addi	r3,r3,1
   28f10:	18c7883a 	add	r3,r3,r3
   28f14:	18c7883a 	add	r3,r3,r3
   28f18:	50d5883a 	add	r10,r10,r3
   28f1c:	50ffff04 	addi	r3,r10,-4
   28f20:	2000041e 	bne	r4,zero,28f34 <__mdiff+0x194>
   28f24:	18ffff04 	addi	r3,r3,-4
   28f28:	19000017 	ldw	r4,0(r3)
   28f2c:	4a7fffc4 	addi	r9,r9,-1
   28f30:	203ffc26 	beq	r4,zero,28f24 <_gp+0xfffef454>
   28f34:	12400415 	stw	r9,16(r2)
   28f38:	dfc00517 	ldw	ra,20(sp)
   28f3c:	dd000417 	ldw	r20,16(sp)
   28f40:	dcc00317 	ldw	r19,12(sp)
   28f44:	dc800217 	ldw	r18,8(sp)
   28f48:	dc400117 	ldw	r17,4(sp)
   28f4c:	dc000017 	ldw	r16,0(sp)
   28f50:	dec00604 	addi	sp,sp,24
   28f54:	f800283a 	ret
   28f58:	000b883a 	mov	r5,zero
   28f5c:	00284780 	call	28478 <_Balloc>
   28f60:	00c00044 	movi	r3,1
   28f64:	10c00415 	stw	r3,16(r2)
   28f68:	10000515 	stw	zero,20(r2)
   28f6c:	003ff206 	br	28f38 <_gp+0xfffef468>
   28f70:	8023883a 	mov	r17,r16
   28f74:	0029883a 	mov	r20,zero
   28f78:	4021883a 	mov	r16,r8
   28f7c:	003fad06 	br	28e34 <_gp+0xfffef364>
   28f80:	9005883a 	mov	r2,r18
   28f84:	94400504 	addi	r17,r18,20
   28f88:	9c000504 	addi	r16,r19,20
   28f8c:	9825883a 	mov	r18,r19
   28f90:	05000044 	movi	r20,1
   28f94:	1027883a 	mov	r19,r2
   28f98:	003fa606 	br	28e34 <_gp+0xfffef364>

00028f9c <__ulp>:
   28f9c:	295ffc2c 	andhi	r5,r5,32752
   28fa0:	00bf3034 	movhi	r2,64704
   28fa4:	2887883a 	add	r3,r5,r2
   28fa8:	00c0020e 	bge	zero,r3,28fb4 <__ulp+0x18>
   28fac:	0005883a 	mov	r2,zero
   28fb0:	f800283a 	ret
   28fb4:	00c7c83a 	sub	r3,zero,r3
   28fb8:	1807d53a 	srai	r3,r3,20
   28fbc:	008004c4 	movi	r2,19
   28fc0:	10c00b0e 	bge	r2,r3,28ff0 <__ulp+0x54>
   28fc4:	18bffb04 	addi	r2,r3,-20
   28fc8:	01000784 	movi	r4,30
   28fcc:	0007883a 	mov	r3,zero
   28fd0:	20800516 	blt	r4,r2,28fe8 <__ulp+0x4c>
   28fd4:	010007c4 	movi	r4,31
   28fd8:	2089c83a 	sub	r4,r4,r2
   28fdc:	00800044 	movi	r2,1
   28fe0:	1104983a 	sll	r2,r2,r4
   28fe4:	f800283a 	ret
   28fe8:	00800044 	movi	r2,1
   28fec:	f800283a 	ret
   28ff0:	01400234 	movhi	r5,8
   28ff4:	28c7d83a 	sra	r3,r5,r3
   28ff8:	0005883a 	mov	r2,zero
   28ffc:	f800283a 	ret

00029000 <__b2d>:
   29000:	defffa04 	addi	sp,sp,-24
   29004:	dc000015 	stw	r16,0(sp)
   29008:	24000417 	ldw	r16,16(r4)
   2900c:	dc400115 	stw	r17,4(sp)
   29010:	24400504 	addi	r17,r4,20
   29014:	8421883a 	add	r16,r16,r16
   29018:	8421883a 	add	r16,r16,r16
   2901c:	8c21883a 	add	r16,r17,r16
   29020:	dc800215 	stw	r18,8(sp)
   29024:	84bfff17 	ldw	r18,-4(r16)
   29028:	dd000415 	stw	r20,16(sp)
   2902c:	dcc00315 	stw	r19,12(sp)
   29030:	9009883a 	mov	r4,r18
   29034:	2829883a 	mov	r20,r5
   29038:	dfc00515 	stw	ra,20(sp)
   2903c:	002876c0 	call	2876c <__hi0bits>
   29040:	00c00804 	movi	r3,32
   29044:	1889c83a 	sub	r4,r3,r2
   29048:	a1000015 	stw	r4,0(r20)
   2904c:	01000284 	movi	r4,10
   29050:	84ffff04 	addi	r19,r16,-4
   29054:	20801216 	blt	r4,r2,290a0 <__b2d+0xa0>
   29058:	018002c4 	movi	r6,11
   2905c:	308dc83a 	sub	r6,r6,r2
   29060:	9186d83a 	srl	r3,r18,r6
   29064:	18cffc34 	orhi	r3,r3,16368
   29068:	8cc0212e 	bgeu	r17,r19,290f0 <__b2d+0xf0>
   2906c:	813ffe17 	ldw	r4,-8(r16)
   29070:	218cd83a 	srl	r6,r4,r6
   29074:	10800544 	addi	r2,r2,21
   29078:	9084983a 	sll	r2,r18,r2
   2907c:	1184b03a 	or	r2,r2,r6
   29080:	dfc00517 	ldw	ra,20(sp)
   29084:	dd000417 	ldw	r20,16(sp)
   29088:	dcc00317 	ldw	r19,12(sp)
   2908c:	dc800217 	ldw	r18,8(sp)
   29090:	dc400117 	ldw	r17,4(sp)
   29094:	dc000017 	ldw	r16,0(sp)
   29098:	dec00604 	addi	sp,sp,24
   2909c:	f800283a 	ret
   290a0:	8cc00f2e 	bgeu	r17,r19,290e0 <__b2d+0xe0>
   290a4:	117ffd44 	addi	r5,r2,-11
   290a8:	80bffe17 	ldw	r2,-8(r16)
   290ac:	28000e26 	beq	r5,zero,290e8 <__b2d+0xe8>
   290b0:	1949c83a 	sub	r4,r3,r5
   290b4:	9164983a 	sll	r18,r18,r5
   290b8:	1106d83a 	srl	r3,r2,r4
   290bc:	81bffe04 	addi	r6,r16,-8
   290c0:	948ffc34 	orhi	r18,r18,16368
   290c4:	90c6b03a 	or	r3,r18,r3
   290c8:	89800e2e 	bgeu	r17,r6,29104 <__b2d+0x104>
   290cc:	81bffd17 	ldw	r6,-12(r16)
   290d0:	1144983a 	sll	r2,r2,r5
   290d4:	310ad83a 	srl	r5,r6,r4
   290d8:	2884b03a 	or	r2,r5,r2
   290dc:	003fe806 	br	29080 <_gp+0xfffef5b0>
   290e0:	10bffd44 	addi	r2,r2,-11
   290e4:	1000041e 	bne	r2,zero,290f8 <__b2d+0xf8>
   290e8:	90cffc34 	orhi	r3,r18,16368
   290ec:	003fe406 	br	29080 <_gp+0xfffef5b0>
   290f0:	000d883a 	mov	r6,zero
   290f4:	003fdf06 	br	29074 <_gp+0xfffef5a4>
   290f8:	90a4983a 	sll	r18,r18,r2
   290fc:	0005883a 	mov	r2,zero
   29100:	003ff906 	br	290e8 <_gp+0xfffef618>
   29104:	1144983a 	sll	r2,r2,r5
   29108:	003fdd06 	br	29080 <_gp+0xfffef5b0>

0002910c <__d2b>:
   2910c:	defff804 	addi	sp,sp,-32
   29110:	dc000215 	stw	r16,8(sp)
   29114:	3021883a 	mov	r16,r6
   29118:	dc400315 	stw	r17,12(sp)
   2911c:	8022907a 	slli	r17,r16,1
   29120:	dd000615 	stw	r20,24(sp)
   29124:	2829883a 	mov	r20,r5
   29128:	01400044 	movi	r5,1
   2912c:	dcc00515 	stw	r19,20(sp)
   29130:	dc800415 	stw	r18,16(sp)
   29134:	dfc00715 	stw	ra,28(sp)
   29138:	3825883a 	mov	r18,r7
   2913c:	8822d57a 	srli	r17,r17,21
   29140:	00284780 	call	28478 <_Balloc>
   29144:	1027883a 	mov	r19,r2
   29148:	00800434 	movhi	r2,16
   2914c:	10bfffc4 	addi	r2,r2,-1
   29150:	808c703a 	and	r6,r16,r2
   29154:	88000126 	beq	r17,zero,2915c <__d2b+0x50>
   29158:	31800434 	orhi	r6,r6,16
   2915c:	d9800015 	stw	r6,0(sp)
   29160:	a0002426 	beq	r20,zero,291f4 <__d2b+0xe8>
   29164:	d9000104 	addi	r4,sp,4
   29168:	dd000115 	stw	r20,4(sp)
   2916c:	00287d40 	call	287d4 <__lo0bits>
   29170:	d8c00017 	ldw	r3,0(sp)
   29174:	10002f1e 	bne	r2,zero,29234 <__d2b+0x128>
   29178:	d9000117 	ldw	r4,4(sp)
   2917c:	99000515 	stw	r4,20(r19)
   29180:	1821003a 	cmpeq	r16,r3,zero
   29184:	01000084 	movi	r4,2
   29188:	2421c83a 	sub	r16,r4,r16
   2918c:	98c00615 	stw	r3,24(r19)
   29190:	9c000415 	stw	r16,16(r19)
   29194:	88001f1e 	bne	r17,zero,29214 <__d2b+0x108>
   29198:	10bef384 	addi	r2,r2,-1074
   2919c:	90800015 	stw	r2,0(r18)
   291a0:	00900034 	movhi	r2,16384
   291a4:	10bfffc4 	addi	r2,r2,-1
   291a8:	8085883a 	add	r2,r16,r2
   291ac:	1085883a 	add	r2,r2,r2
   291b0:	1085883a 	add	r2,r2,r2
   291b4:	9885883a 	add	r2,r19,r2
   291b8:	11000517 	ldw	r4,20(r2)
   291bc:	8020917a 	slli	r16,r16,5
   291c0:	002876c0 	call	2876c <__hi0bits>
   291c4:	d8c00817 	ldw	r3,32(sp)
   291c8:	8085c83a 	sub	r2,r16,r2
   291cc:	18800015 	stw	r2,0(r3)
   291d0:	9805883a 	mov	r2,r19
   291d4:	dfc00717 	ldw	ra,28(sp)
   291d8:	dd000617 	ldw	r20,24(sp)
   291dc:	dcc00517 	ldw	r19,20(sp)
   291e0:	dc800417 	ldw	r18,16(sp)
   291e4:	dc400317 	ldw	r17,12(sp)
   291e8:	dc000217 	ldw	r16,8(sp)
   291ec:	dec00804 	addi	sp,sp,32
   291f0:	f800283a 	ret
   291f4:	d809883a 	mov	r4,sp
   291f8:	00287d40 	call	287d4 <__lo0bits>
   291fc:	d8c00017 	ldw	r3,0(sp)
   29200:	04000044 	movi	r16,1
   29204:	9c000415 	stw	r16,16(r19)
   29208:	98c00515 	stw	r3,20(r19)
   2920c:	10800804 	addi	r2,r2,32
   29210:	883fe126 	beq	r17,zero,29198 <_gp+0xfffef6c8>
   29214:	00c00d44 	movi	r3,53
   29218:	8c7ef344 	addi	r17,r17,-1075
   2921c:	88a3883a 	add	r17,r17,r2
   29220:	1885c83a 	sub	r2,r3,r2
   29224:	d8c00817 	ldw	r3,32(sp)
   29228:	94400015 	stw	r17,0(r18)
   2922c:	18800015 	stw	r2,0(r3)
   29230:	003fe706 	br	291d0 <_gp+0xfffef700>
   29234:	01000804 	movi	r4,32
   29238:	2089c83a 	sub	r4,r4,r2
   2923c:	1908983a 	sll	r4,r3,r4
   29240:	d9400117 	ldw	r5,4(sp)
   29244:	1886d83a 	srl	r3,r3,r2
   29248:	2148b03a 	or	r4,r4,r5
   2924c:	99000515 	stw	r4,20(r19)
   29250:	d8c00015 	stw	r3,0(sp)
   29254:	003fca06 	br	29180 <_gp+0xfffef6b0>

00029258 <__ratio>:
   29258:	defff904 	addi	sp,sp,-28
   2925c:	dc400315 	stw	r17,12(sp)
   29260:	2823883a 	mov	r17,r5
   29264:	d9400104 	addi	r5,sp,4
   29268:	dfc00615 	stw	ra,24(sp)
   2926c:	dcc00515 	stw	r19,20(sp)
   29270:	dc800415 	stw	r18,16(sp)
   29274:	2027883a 	mov	r19,r4
   29278:	dc000215 	stw	r16,8(sp)
   2927c:	00290000 	call	29000 <__b2d>
   29280:	d80b883a 	mov	r5,sp
   29284:	8809883a 	mov	r4,r17
   29288:	1025883a 	mov	r18,r2
   2928c:	1821883a 	mov	r16,r3
   29290:	00290000 	call	29000 <__b2d>
   29294:	8a000417 	ldw	r8,16(r17)
   29298:	99000417 	ldw	r4,16(r19)
   2929c:	d9400117 	ldw	r5,4(sp)
   292a0:	2209c83a 	sub	r4,r4,r8
   292a4:	2010917a 	slli	r8,r4,5
   292a8:	d9000017 	ldw	r4,0(sp)
   292ac:	2909c83a 	sub	r4,r5,r4
   292b0:	4109883a 	add	r4,r8,r4
   292b4:	01000e0e 	bge	zero,r4,292f0 <__ratio+0x98>
   292b8:	2008953a 	slli	r4,r4,20
   292bc:	2421883a 	add	r16,r4,r16
   292c0:	100d883a 	mov	r6,r2
   292c4:	180f883a 	mov	r7,r3
   292c8:	9009883a 	mov	r4,r18
   292cc:	800b883a 	mov	r5,r16
   292d0:	002cb000 	call	2cb00 <__divdf3>
   292d4:	dfc00617 	ldw	ra,24(sp)
   292d8:	dcc00517 	ldw	r19,20(sp)
   292dc:	dc800417 	ldw	r18,16(sp)
   292e0:	dc400317 	ldw	r17,12(sp)
   292e4:	dc000217 	ldw	r16,8(sp)
   292e8:	dec00704 	addi	sp,sp,28
   292ec:	f800283a 	ret
   292f0:	2008953a 	slli	r4,r4,20
   292f4:	1907c83a 	sub	r3,r3,r4
   292f8:	003ff106 	br	292c0 <_gp+0xfffef7f0>

000292fc <_mprec_log10>:
   292fc:	defffe04 	addi	sp,sp,-8
   29300:	dc000015 	stw	r16,0(sp)
   29304:	dfc00115 	stw	ra,4(sp)
   29308:	008005c4 	movi	r2,23
   2930c:	2021883a 	mov	r16,r4
   29310:	11000d0e 	bge	r2,r4,29348 <_mprec_log10+0x4c>
   29314:	0005883a 	mov	r2,zero
   29318:	00cffc34 	movhi	r3,16368
   2931c:	843fffc4 	addi	r16,r16,-1
   29320:	000d883a 	mov	r6,zero
   29324:	01d00934 	movhi	r7,16420
   29328:	1009883a 	mov	r4,r2
   2932c:	180b883a 	mov	r5,r3
   29330:	00219cc0 	call	219cc <__muldf3>
   29334:	803ff91e 	bne	r16,zero,2931c <_gp+0xfffef84c>
   29338:	dfc00117 	ldw	ra,4(sp)
   2933c:	dc000017 	ldw	r16,0(sp)
   29340:	dec00204 	addi	sp,sp,8
   29344:	f800283a 	ret
   29348:	202090fa 	slli	r16,r4,3
   2934c:	008000f4 	movhi	r2,3
   29350:	10bfc404 	addi	r2,r2,-240
   29354:	1421883a 	add	r16,r2,r16
   29358:	80800017 	ldw	r2,0(r16)
   2935c:	80c00117 	ldw	r3,4(r16)
   29360:	dfc00117 	ldw	ra,4(sp)
   29364:	dc000017 	ldw	r16,0(sp)
   29368:	dec00204 	addi	sp,sp,8
   2936c:	f800283a 	ret

00029370 <__copybits>:
   29370:	297fffc4 	addi	r5,r5,-1
   29374:	280fd17a 	srai	r7,r5,5
   29378:	30c00417 	ldw	r3,16(r6)
   2937c:	30800504 	addi	r2,r6,20
   29380:	39c00044 	addi	r7,r7,1
   29384:	18c7883a 	add	r3,r3,r3
   29388:	39cf883a 	add	r7,r7,r7
   2938c:	18c7883a 	add	r3,r3,r3
   29390:	39cf883a 	add	r7,r7,r7
   29394:	10c7883a 	add	r3,r2,r3
   29398:	21cf883a 	add	r7,r4,r7
   2939c:	10c00d2e 	bgeu	r2,r3,293d4 <__copybits+0x64>
   293a0:	200b883a 	mov	r5,r4
   293a4:	12000017 	ldw	r8,0(r2)
   293a8:	29400104 	addi	r5,r5,4
   293ac:	10800104 	addi	r2,r2,4
   293b0:	2a3fff15 	stw	r8,-4(r5)
   293b4:	10fffb36 	bltu	r2,r3,293a4 <_gp+0xfffef8d4>
   293b8:	1985c83a 	sub	r2,r3,r6
   293bc:	10bffac4 	addi	r2,r2,-21
   293c0:	1004d0ba 	srli	r2,r2,2
   293c4:	10800044 	addi	r2,r2,1
   293c8:	1085883a 	add	r2,r2,r2
   293cc:	1085883a 	add	r2,r2,r2
   293d0:	2089883a 	add	r4,r4,r2
   293d4:	21c0032e 	bgeu	r4,r7,293e4 <__copybits+0x74>
   293d8:	20000015 	stw	zero,0(r4)
   293dc:	21000104 	addi	r4,r4,4
   293e0:	21fffd36 	bltu	r4,r7,293d8 <_gp+0xfffef908>
   293e4:	f800283a 	ret

000293e8 <__any_on>:
   293e8:	20c00417 	ldw	r3,16(r4)
   293ec:	2805d17a 	srai	r2,r5,5
   293f0:	21000504 	addi	r4,r4,20
   293f4:	18800d0e 	bge	r3,r2,2942c <__any_on+0x44>
   293f8:	18c7883a 	add	r3,r3,r3
   293fc:	18c7883a 	add	r3,r3,r3
   29400:	20c7883a 	add	r3,r4,r3
   29404:	20c0192e 	bgeu	r4,r3,2946c <__any_on+0x84>
   29408:	18bfff17 	ldw	r2,-4(r3)
   2940c:	18ffff04 	addi	r3,r3,-4
   29410:	1000041e 	bne	r2,zero,29424 <__any_on+0x3c>
   29414:	20c0142e 	bgeu	r4,r3,29468 <__any_on+0x80>
   29418:	18ffff04 	addi	r3,r3,-4
   2941c:	19400017 	ldw	r5,0(r3)
   29420:	283ffc26 	beq	r5,zero,29414 <_gp+0xfffef944>
   29424:	00800044 	movi	r2,1
   29428:	f800283a 	ret
   2942c:	10c00a0e 	bge	r2,r3,29458 <__any_on+0x70>
   29430:	1085883a 	add	r2,r2,r2
   29434:	1085883a 	add	r2,r2,r2
   29438:	294007cc 	andi	r5,r5,31
   2943c:	2087883a 	add	r3,r4,r2
   29440:	283ff026 	beq	r5,zero,29404 <_gp+0xfffef934>
   29444:	19800017 	ldw	r6,0(r3)
   29448:	3144d83a 	srl	r2,r6,r5
   2944c:	114a983a 	sll	r5,r2,r5
   29450:	317ff41e 	bne	r6,r5,29424 <_gp+0xfffef954>
   29454:	003feb06 	br	29404 <_gp+0xfffef934>
   29458:	1085883a 	add	r2,r2,r2
   2945c:	1085883a 	add	r2,r2,r2
   29460:	2087883a 	add	r3,r4,r2
   29464:	003fe706 	br	29404 <_gp+0xfffef934>
   29468:	f800283a 	ret
   2946c:	0005883a 	mov	r2,zero
   29470:	f800283a 	ret

00029474 <_realloc_r>:
   29474:	defff604 	addi	sp,sp,-40
   29478:	dc800215 	stw	r18,8(sp)
   2947c:	dfc00915 	stw	ra,36(sp)
   29480:	df000815 	stw	fp,32(sp)
   29484:	ddc00715 	stw	r23,28(sp)
   29488:	dd800615 	stw	r22,24(sp)
   2948c:	dd400515 	stw	r21,20(sp)
   29490:	dd000415 	stw	r20,16(sp)
   29494:	dcc00315 	stw	r19,12(sp)
   29498:	dc400115 	stw	r17,4(sp)
   2949c:	dc000015 	stw	r16,0(sp)
   294a0:	3025883a 	mov	r18,r6
   294a4:	2800b726 	beq	r5,zero,29784 <_realloc_r+0x310>
   294a8:	282b883a 	mov	r21,r5
   294ac:	2029883a 	mov	r20,r4
   294b0:	002dbbc0 	call	2dbbc <__malloc_lock>
   294b4:	a8bfff17 	ldw	r2,-4(r21)
   294b8:	043fff04 	movi	r16,-4
   294bc:	90c002c4 	addi	r3,r18,11
   294c0:	01000584 	movi	r4,22
   294c4:	acfffe04 	addi	r19,r21,-8
   294c8:	1420703a 	and	r16,r2,r16
   294cc:	20c0332e 	bgeu	r4,r3,2959c <_realloc_r+0x128>
   294d0:	047ffe04 	movi	r17,-8
   294d4:	1c62703a 	and	r17,r3,r17
   294d8:	8807883a 	mov	r3,r17
   294dc:	88005816 	blt	r17,zero,29640 <_realloc_r+0x1cc>
   294e0:	8c805736 	bltu	r17,r18,29640 <_realloc_r+0x1cc>
   294e4:	80c0300e 	bge	r16,r3,295a8 <_realloc_r+0x134>
   294e8:	070000f4 	movhi	fp,3
   294ec:	e7013004 	addi	fp,fp,1216
   294f0:	e1c00217 	ldw	r7,8(fp)
   294f4:	9c09883a 	add	r4,r19,r16
   294f8:	22000117 	ldw	r8,4(r4)
   294fc:	21c06326 	beq	r4,r7,2968c <_realloc_r+0x218>
   29500:	017fff84 	movi	r5,-2
   29504:	414a703a 	and	r5,r8,r5
   29508:	214b883a 	add	r5,r4,r5
   2950c:	29800117 	ldw	r6,4(r5)
   29510:	3180004c 	andi	r6,r6,1
   29514:	30003f26 	beq	r6,zero,29614 <_realloc_r+0x1a0>
   29518:	1080004c 	andi	r2,r2,1
   2951c:	10008326 	beq	r2,zero,2972c <_realloc_r+0x2b8>
   29520:	900b883a 	mov	r5,r18
   29524:	a009883a 	mov	r4,r20
   29528:	00277bc0 	call	277bc <_malloc_r>
   2952c:	1025883a 	mov	r18,r2
   29530:	10011e26 	beq	r2,zero,299ac <_realloc_r+0x538>
   29534:	a93fff17 	ldw	r4,-4(r21)
   29538:	10fffe04 	addi	r3,r2,-8
   2953c:	00bfff84 	movi	r2,-2
   29540:	2084703a 	and	r2,r4,r2
   29544:	9885883a 	add	r2,r19,r2
   29548:	1880ee26 	beq	r3,r2,29904 <_realloc_r+0x490>
   2954c:	81bfff04 	addi	r6,r16,-4
   29550:	00800904 	movi	r2,36
   29554:	1180b836 	bltu	r2,r6,29838 <_realloc_r+0x3c4>
   29558:	00c004c4 	movi	r3,19
   2955c:	19809636 	bltu	r3,r6,297b8 <_realloc_r+0x344>
   29560:	9005883a 	mov	r2,r18
   29564:	a807883a 	mov	r3,r21
   29568:	19000017 	ldw	r4,0(r3)
   2956c:	11000015 	stw	r4,0(r2)
   29570:	19000117 	ldw	r4,4(r3)
   29574:	11000115 	stw	r4,4(r2)
   29578:	18c00217 	ldw	r3,8(r3)
   2957c:	10c00215 	stw	r3,8(r2)
   29580:	a80b883a 	mov	r5,r21
   29584:	a009883a 	mov	r4,r20
   29588:	002b8600 	call	2b860 <_free_r>
   2958c:	a009883a 	mov	r4,r20
   29590:	002dbe00 	call	2dbe0 <__malloc_unlock>
   29594:	9005883a 	mov	r2,r18
   29598:	00001206 	br	295e4 <_realloc_r+0x170>
   2959c:	00c00404 	movi	r3,16
   295a0:	1823883a 	mov	r17,r3
   295a4:	003fce06 	br	294e0 <_gp+0xfffefa10>
   295a8:	a825883a 	mov	r18,r21
   295ac:	8445c83a 	sub	r2,r16,r17
   295b0:	00c003c4 	movi	r3,15
   295b4:	18802636 	bltu	r3,r2,29650 <_realloc_r+0x1dc>
   295b8:	99800117 	ldw	r6,4(r19)
   295bc:	9c07883a 	add	r3,r19,r16
   295c0:	3180004c 	andi	r6,r6,1
   295c4:	3420b03a 	or	r16,r6,r16
   295c8:	9c000115 	stw	r16,4(r19)
   295cc:	18800117 	ldw	r2,4(r3)
   295d0:	10800054 	ori	r2,r2,1
   295d4:	18800115 	stw	r2,4(r3)
   295d8:	a009883a 	mov	r4,r20
   295dc:	002dbe00 	call	2dbe0 <__malloc_unlock>
   295e0:	9005883a 	mov	r2,r18
   295e4:	dfc00917 	ldw	ra,36(sp)
   295e8:	df000817 	ldw	fp,32(sp)
   295ec:	ddc00717 	ldw	r23,28(sp)
   295f0:	dd800617 	ldw	r22,24(sp)
   295f4:	dd400517 	ldw	r21,20(sp)
   295f8:	dd000417 	ldw	r20,16(sp)
   295fc:	dcc00317 	ldw	r19,12(sp)
   29600:	dc800217 	ldw	r18,8(sp)
   29604:	dc400117 	ldw	r17,4(sp)
   29608:	dc000017 	ldw	r16,0(sp)
   2960c:	dec00a04 	addi	sp,sp,40
   29610:	f800283a 	ret
   29614:	017fff04 	movi	r5,-4
   29618:	414a703a 	and	r5,r8,r5
   2961c:	814d883a 	add	r6,r16,r5
   29620:	30c01f16 	blt	r6,r3,296a0 <_realloc_r+0x22c>
   29624:	20800317 	ldw	r2,12(r4)
   29628:	20c00217 	ldw	r3,8(r4)
   2962c:	a825883a 	mov	r18,r21
   29630:	3021883a 	mov	r16,r6
   29634:	18800315 	stw	r2,12(r3)
   29638:	10c00215 	stw	r3,8(r2)
   2963c:	003fdb06 	br	295ac <_gp+0xfffefadc>
   29640:	00800304 	movi	r2,12
   29644:	a0800015 	stw	r2,0(r20)
   29648:	0005883a 	mov	r2,zero
   2964c:	003fe506 	br	295e4 <_gp+0xfffefb14>
   29650:	98c00117 	ldw	r3,4(r19)
   29654:	9c4b883a 	add	r5,r19,r17
   29658:	11000054 	ori	r4,r2,1
   2965c:	18c0004c 	andi	r3,r3,1
   29660:	1c62b03a 	or	r17,r3,r17
   29664:	9c400115 	stw	r17,4(r19)
   29668:	29000115 	stw	r4,4(r5)
   2966c:	2885883a 	add	r2,r5,r2
   29670:	10c00117 	ldw	r3,4(r2)
   29674:	29400204 	addi	r5,r5,8
   29678:	a009883a 	mov	r4,r20
   2967c:	18c00054 	ori	r3,r3,1
   29680:	10c00115 	stw	r3,4(r2)
   29684:	002b8600 	call	2b860 <_free_r>
   29688:	003fd306 	br	295d8 <_gp+0xfffefb08>
   2968c:	017fff04 	movi	r5,-4
   29690:	414a703a 	and	r5,r8,r5
   29694:	89800404 	addi	r6,r17,16
   29698:	8151883a 	add	r8,r16,r5
   2969c:	4180590e 	bge	r8,r6,29804 <_realloc_r+0x390>
   296a0:	1080004c 	andi	r2,r2,1
   296a4:	103f9e1e 	bne	r2,zero,29520 <_gp+0xfffefa50>
   296a8:	adbffe17 	ldw	r22,-8(r21)
   296ac:	00bfff04 	movi	r2,-4
   296b0:	9dadc83a 	sub	r22,r19,r22
   296b4:	b1800117 	ldw	r6,4(r22)
   296b8:	3084703a 	and	r2,r6,r2
   296bc:	20002026 	beq	r4,zero,29740 <_realloc_r+0x2cc>
   296c0:	80af883a 	add	r23,r16,r2
   296c4:	b96f883a 	add	r23,r23,r5
   296c8:	21c05f26 	beq	r4,r7,29848 <_realloc_r+0x3d4>
   296cc:	b8c01c16 	blt	r23,r3,29740 <_realloc_r+0x2cc>
   296d0:	20800317 	ldw	r2,12(r4)
   296d4:	20c00217 	ldw	r3,8(r4)
   296d8:	81bfff04 	addi	r6,r16,-4
   296dc:	01000904 	movi	r4,36
   296e0:	18800315 	stw	r2,12(r3)
   296e4:	10c00215 	stw	r3,8(r2)
   296e8:	b0c00217 	ldw	r3,8(r22)
   296ec:	b0800317 	ldw	r2,12(r22)
   296f0:	b4800204 	addi	r18,r22,8
   296f4:	18800315 	stw	r2,12(r3)
   296f8:	10c00215 	stw	r3,8(r2)
   296fc:	21801b36 	bltu	r4,r6,2976c <_realloc_r+0x2f8>
   29700:	008004c4 	movi	r2,19
   29704:	1180352e 	bgeu	r2,r6,297dc <_realloc_r+0x368>
   29708:	a8800017 	ldw	r2,0(r21)
   2970c:	b0800215 	stw	r2,8(r22)
   29710:	a8800117 	ldw	r2,4(r21)
   29714:	b0800315 	stw	r2,12(r22)
   29718:	008006c4 	movi	r2,27
   2971c:	11807f36 	bltu	r2,r6,2991c <_realloc_r+0x4a8>
   29720:	b0800404 	addi	r2,r22,16
   29724:	ad400204 	addi	r21,r21,8
   29728:	00002d06 	br	297e0 <_realloc_r+0x36c>
   2972c:	adbffe17 	ldw	r22,-8(r21)
   29730:	00bfff04 	movi	r2,-4
   29734:	9dadc83a 	sub	r22,r19,r22
   29738:	b1000117 	ldw	r4,4(r22)
   2973c:	2084703a 	and	r2,r4,r2
   29740:	b03f7726 	beq	r22,zero,29520 <_gp+0xfffefa50>
   29744:	80af883a 	add	r23,r16,r2
   29748:	b8ff7516 	blt	r23,r3,29520 <_gp+0xfffefa50>
   2974c:	b0800317 	ldw	r2,12(r22)
   29750:	b0c00217 	ldw	r3,8(r22)
   29754:	81bfff04 	addi	r6,r16,-4
   29758:	01000904 	movi	r4,36
   2975c:	18800315 	stw	r2,12(r3)
   29760:	10c00215 	stw	r3,8(r2)
   29764:	b4800204 	addi	r18,r22,8
   29768:	21bfe52e 	bgeu	r4,r6,29700 <_gp+0xfffefc30>
   2976c:	a80b883a 	mov	r5,r21
   29770:	9009883a 	mov	r4,r18
   29774:	00281f40 	call	281f4 <memmove>
   29778:	b821883a 	mov	r16,r23
   2977c:	b027883a 	mov	r19,r22
   29780:	003f8a06 	br	295ac <_gp+0xfffefadc>
   29784:	300b883a 	mov	r5,r6
   29788:	dfc00917 	ldw	ra,36(sp)
   2978c:	df000817 	ldw	fp,32(sp)
   29790:	ddc00717 	ldw	r23,28(sp)
   29794:	dd800617 	ldw	r22,24(sp)
   29798:	dd400517 	ldw	r21,20(sp)
   2979c:	dd000417 	ldw	r20,16(sp)
   297a0:	dcc00317 	ldw	r19,12(sp)
   297a4:	dc800217 	ldw	r18,8(sp)
   297a8:	dc400117 	ldw	r17,4(sp)
   297ac:	dc000017 	ldw	r16,0(sp)
   297b0:	dec00a04 	addi	sp,sp,40
   297b4:	00277bc1 	jmpi	277bc <_malloc_r>
   297b8:	a8c00017 	ldw	r3,0(r21)
   297bc:	90c00015 	stw	r3,0(r18)
   297c0:	a8c00117 	ldw	r3,4(r21)
   297c4:	90c00115 	stw	r3,4(r18)
   297c8:	00c006c4 	movi	r3,27
   297cc:	19804536 	bltu	r3,r6,298e4 <_realloc_r+0x470>
   297d0:	90800204 	addi	r2,r18,8
   297d4:	a8c00204 	addi	r3,r21,8
   297d8:	003f6306 	br	29568 <_gp+0xfffefa98>
   297dc:	9005883a 	mov	r2,r18
   297e0:	a8c00017 	ldw	r3,0(r21)
   297e4:	b821883a 	mov	r16,r23
   297e8:	b027883a 	mov	r19,r22
   297ec:	10c00015 	stw	r3,0(r2)
   297f0:	a8c00117 	ldw	r3,4(r21)
   297f4:	10c00115 	stw	r3,4(r2)
   297f8:	a8c00217 	ldw	r3,8(r21)
   297fc:	10c00215 	stw	r3,8(r2)
   29800:	003f6a06 	br	295ac <_gp+0xfffefadc>
   29804:	9c67883a 	add	r19,r19,r17
   29808:	4445c83a 	sub	r2,r8,r17
   2980c:	e4c00215 	stw	r19,8(fp)
   29810:	10800054 	ori	r2,r2,1
   29814:	98800115 	stw	r2,4(r19)
   29818:	a8bfff17 	ldw	r2,-4(r21)
   2981c:	a009883a 	mov	r4,r20
   29820:	1080004c 	andi	r2,r2,1
   29824:	1462b03a 	or	r17,r2,r17
   29828:	ac7fff15 	stw	r17,-4(r21)
   2982c:	002dbe00 	call	2dbe0 <__malloc_unlock>
   29830:	a805883a 	mov	r2,r21
   29834:	003f6b06 	br	295e4 <_gp+0xfffefb14>
   29838:	a80b883a 	mov	r5,r21
   2983c:	9009883a 	mov	r4,r18
   29840:	00281f40 	call	281f4 <memmove>
   29844:	003f4e06 	br	29580 <_gp+0xfffefab0>
   29848:	89000404 	addi	r4,r17,16
   2984c:	b93fbc16 	blt	r23,r4,29740 <_gp+0xfffefc70>
   29850:	b0800317 	ldw	r2,12(r22)
   29854:	b0c00217 	ldw	r3,8(r22)
   29858:	81bfff04 	addi	r6,r16,-4
   2985c:	01000904 	movi	r4,36
   29860:	18800315 	stw	r2,12(r3)
   29864:	10c00215 	stw	r3,8(r2)
   29868:	b4800204 	addi	r18,r22,8
   2986c:	21804336 	bltu	r4,r6,2997c <_realloc_r+0x508>
   29870:	008004c4 	movi	r2,19
   29874:	11803f2e 	bgeu	r2,r6,29974 <_realloc_r+0x500>
   29878:	a8800017 	ldw	r2,0(r21)
   2987c:	b0800215 	stw	r2,8(r22)
   29880:	a8800117 	ldw	r2,4(r21)
   29884:	b0800315 	stw	r2,12(r22)
   29888:	008006c4 	movi	r2,27
   2988c:	11803f36 	bltu	r2,r6,2998c <_realloc_r+0x518>
   29890:	b0800404 	addi	r2,r22,16
   29894:	ad400204 	addi	r21,r21,8
   29898:	a8c00017 	ldw	r3,0(r21)
   2989c:	10c00015 	stw	r3,0(r2)
   298a0:	a8c00117 	ldw	r3,4(r21)
   298a4:	10c00115 	stw	r3,4(r2)
   298a8:	a8c00217 	ldw	r3,8(r21)
   298ac:	10c00215 	stw	r3,8(r2)
   298b0:	b447883a 	add	r3,r22,r17
   298b4:	bc45c83a 	sub	r2,r23,r17
   298b8:	e0c00215 	stw	r3,8(fp)
   298bc:	10800054 	ori	r2,r2,1
   298c0:	18800115 	stw	r2,4(r3)
   298c4:	b0800117 	ldw	r2,4(r22)
   298c8:	a009883a 	mov	r4,r20
   298cc:	1080004c 	andi	r2,r2,1
   298d0:	1462b03a 	or	r17,r2,r17
   298d4:	b4400115 	stw	r17,4(r22)
   298d8:	002dbe00 	call	2dbe0 <__malloc_unlock>
   298dc:	9005883a 	mov	r2,r18
   298e0:	003f4006 	br	295e4 <_gp+0xfffefb14>
   298e4:	a8c00217 	ldw	r3,8(r21)
   298e8:	90c00215 	stw	r3,8(r18)
   298ec:	a8c00317 	ldw	r3,12(r21)
   298f0:	90c00315 	stw	r3,12(r18)
   298f4:	30801126 	beq	r6,r2,2993c <_realloc_r+0x4c8>
   298f8:	90800404 	addi	r2,r18,16
   298fc:	a8c00404 	addi	r3,r21,16
   29900:	003f1906 	br	29568 <_gp+0xfffefa98>
   29904:	90ffff17 	ldw	r3,-4(r18)
   29908:	00bfff04 	movi	r2,-4
   2990c:	a825883a 	mov	r18,r21
   29910:	1884703a 	and	r2,r3,r2
   29914:	80a1883a 	add	r16,r16,r2
   29918:	003f2406 	br	295ac <_gp+0xfffefadc>
   2991c:	a8800217 	ldw	r2,8(r21)
   29920:	b0800415 	stw	r2,16(r22)
   29924:	a8800317 	ldw	r2,12(r21)
   29928:	b0800515 	stw	r2,20(r22)
   2992c:	31000a26 	beq	r6,r4,29958 <_realloc_r+0x4e4>
   29930:	b0800604 	addi	r2,r22,24
   29934:	ad400404 	addi	r21,r21,16
   29938:	003fa906 	br	297e0 <_gp+0xfffefd10>
   2993c:	a9000417 	ldw	r4,16(r21)
   29940:	90800604 	addi	r2,r18,24
   29944:	a8c00604 	addi	r3,r21,24
   29948:	91000415 	stw	r4,16(r18)
   2994c:	a9000517 	ldw	r4,20(r21)
   29950:	91000515 	stw	r4,20(r18)
   29954:	003f0406 	br	29568 <_gp+0xfffefa98>
   29958:	a8c00417 	ldw	r3,16(r21)
   2995c:	ad400604 	addi	r21,r21,24
   29960:	b0800804 	addi	r2,r22,32
   29964:	b0c00615 	stw	r3,24(r22)
   29968:	a8ffff17 	ldw	r3,-4(r21)
   2996c:	b0c00715 	stw	r3,28(r22)
   29970:	003f9b06 	br	297e0 <_gp+0xfffefd10>
   29974:	9005883a 	mov	r2,r18
   29978:	003fc706 	br	29898 <_gp+0xfffefdc8>
   2997c:	a80b883a 	mov	r5,r21
   29980:	9009883a 	mov	r4,r18
   29984:	00281f40 	call	281f4 <memmove>
   29988:	003fc906 	br	298b0 <_gp+0xfffefde0>
   2998c:	a8800217 	ldw	r2,8(r21)
   29990:	b0800415 	stw	r2,16(r22)
   29994:	a8800317 	ldw	r2,12(r21)
   29998:	b0800515 	stw	r2,20(r22)
   2999c:	31000726 	beq	r6,r4,299bc <_realloc_r+0x548>
   299a0:	b0800604 	addi	r2,r22,24
   299a4:	ad400404 	addi	r21,r21,16
   299a8:	003fbb06 	br	29898 <_gp+0xfffefdc8>
   299ac:	a009883a 	mov	r4,r20
   299b0:	002dbe00 	call	2dbe0 <__malloc_unlock>
   299b4:	0005883a 	mov	r2,zero
   299b8:	003f0a06 	br	295e4 <_gp+0xfffefb14>
   299bc:	a8c00417 	ldw	r3,16(r21)
   299c0:	ad400604 	addi	r21,r21,24
   299c4:	b0800804 	addi	r2,r22,32
   299c8:	b0c00615 	stw	r3,24(r22)
   299cc:	a8ffff17 	ldw	r3,-4(r21)
   299d0:	b0c00715 	stw	r3,28(r22)
   299d4:	003fb006 	br	29898 <_gp+0xfffefdc8>

000299d8 <__fpclassifyd>:
   299d8:	00a00034 	movhi	r2,32768
   299dc:	10bfffc4 	addi	r2,r2,-1
   299e0:	2884703a 	and	r2,r5,r2
   299e4:	10000726 	beq	r2,zero,29a04 <__fpclassifyd+0x2c>
   299e8:	00fffc34 	movhi	r3,65520
   299ec:	019ff834 	movhi	r6,32736
   299f0:	28c7883a 	add	r3,r5,r3
   299f4:	31bfffc4 	addi	r6,r6,-1
   299f8:	30c00536 	bltu	r6,r3,29a10 <__fpclassifyd+0x38>
   299fc:	00800104 	movi	r2,4
   29a00:	f800283a 	ret
   29a04:	2000021e 	bne	r4,zero,29a10 <__fpclassifyd+0x38>
   29a08:	00800084 	movi	r2,2
   29a0c:	f800283a 	ret
   29a10:	00dffc34 	movhi	r3,32752
   29a14:	019ff834 	movhi	r6,32736
   29a18:	28cb883a 	add	r5,r5,r3
   29a1c:	31bfffc4 	addi	r6,r6,-1
   29a20:	317ff62e 	bgeu	r6,r5,299fc <_gp+0xfffeff2c>
   29a24:	01400434 	movhi	r5,16
   29a28:	297fffc4 	addi	r5,r5,-1
   29a2c:	28800236 	bltu	r5,r2,29a38 <__fpclassifyd+0x60>
   29a30:	008000c4 	movi	r2,3
   29a34:	f800283a 	ret
   29a38:	10c00226 	beq	r2,r3,29a44 <__fpclassifyd+0x6c>
   29a3c:	0005883a 	mov	r2,zero
   29a40:	f800283a 	ret
   29a44:	2005003a 	cmpeq	r2,r4,zero
   29a48:	f800283a 	ret

00029a4c <_sbrk_r>:
   29a4c:	defffd04 	addi	sp,sp,-12
   29a50:	dc000015 	stw	r16,0(sp)
   29a54:	040000f4 	movhi	r16,3
   29a58:	dc400115 	stw	r17,4(sp)
   29a5c:	840d8704 	addi	r16,r16,13852
   29a60:	2023883a 	mov	r17,r4
   29a64:	2809883a 	mov	r4,r5
   29a68:	dfc00215 	stw	ra,8(sp)
   29a6c:	80000015 	stw	zero,0(r16)
   29a70:	002dda00 	call	2dda0 <sbrk>
   29a74:	00ffffc4 	movi	r3,-1
   29a78:	10c00526 	beq	r2,r3,29a90 <_sbrk_r+0x44>
   29a7c:	dfc00217 	ldw	ra,8(sp)
   29a80:	dc400117 	ldw	r17,4(sp)
   29a84:	dc000017 	ldw	r16,0(sp)
   29a88:	dec00304 	addi	sp,sp,12
   29a8c:	f800283a 	ret
   29a90:	80c00017 	ldw	r3,0(r16)
   29a94:	183ff926 	beq	r3,zero,29a7c <_gp+0xfffeffac>
   29a98:	88c00015 	stw	r3,0(r17)
   29a9c:	003ff706 	br	29a7c <_gp+0xfffeffac>

00029aa0 <__sread>:
   29aa0:	defffe04 	addi	sp,sp,-8
   29aa4:	dc000015 	stw	r16,0(sp)
   29aa8:	2821883a 	mov	r16,r5
   29aac:	2940038f 	ldh	r5,14(r5)
   29ab0:	dfc00115 	stw	ra,4(sp)
   29ab4:	002bd8c0 	call	2bd8c <_read_r>
   29ab8:	10000716 	blt	r2,zero,29ad8 <__sread+0x38>
   29abc:	80c01417 	ldw	r3,80(r16)
   29ac0:	1887883a 	add	r3,r3,r2
   29ac4:	80c01415 	stw	r3,80(r16)
   29ac8:	dfc00117 	ldw	ra,4(sp)
   29acc:	dc000017 	ldw	r16,0(sp)
   29ad0:	dec00204 	addi	sp,sp,8
   29ad4:	f800283a 	ret
   29ad8:	80c0030b 	ldhu	r3,12(r16)
   29adc:	18fbffcc 	andi	r3,r3,61439
   29ae0:	80c0030d 	sth	r3,12(r16)
   29ae4:	dfc00117 	ldw	ra,4(sp)
   29ae8:	dc000017 	ldw	r16,0(sp)
   29aec:	dec00204 	addi	sp,sp,8
   29af0:	f800283a 	ret

00029af4 <__seofread>:
   29af4:	0005883a 	mov	r2,zero
   29af8:	f800283a 	ret

00029afc <__swrite>:
   29afc:	2880030b 	ldhu	r2,12(r5)
   29b00:	defffb04 	addi	sp,sp,-20
   29b04:	dcc00315 	stw	r19,12(sp)
   29b08:	dc800215 	stw	r18,8(sp)
   29b0c:	dc400115 	stw	r17,4(sp)
   29b10:	dc000015 	stw	r16,0(sp)
   29b14:	dfc00415 	stw	ra,16(sp)
   29b18:	10c0400c 	andi	r3,r2,256
   29b1c:	2821883a 	mov	r16,r5
   29b20:	2023883a 	mov	r17,r4
   29b24:	3025883a 	mov	r18,r6
   29b28:	3827883a 	mov	r19,r7
   29b2c:	18000526 	beq	r3,zero,29b44 <__swrite+0x48>
   29b30:	2940038f 	ldh	r5,14(r5)
   29b34:	01c00084 	movi	r7,2
   29b38:	000d883a 	mov	r6,zero
   29b3c:	002bb700 	call	2bb70 <_lseek_r>
   29b40:	8080030b 	ldhu	r2,12(r16)
   29b44:	8140038f 	ldh	r5,14(r16)
   29b48:	10bbffcc 	andi	r2,r2,61439
   29b4c:	980f883a 	mov	r7,r19
   29b50:	900d883a 	mov	r6,r18
   29b54:	8809883a 	mov	r4,r17
   29b58:	8080030d 	sth	r2,12(r16)
   29b5c:	dfc00417 	ldw	ra,16(sp)
   29b60:	dcc00317 	ldw	r19,12(sp)
   29b64:	dc800217 	ldw	r18,8(sp)
   29b68:	dc400117 	ldw	r17,4(sp)
   29b6c:	dc000017 	ldw	r16,0(sp)
   29b70:	dec00504 	addi	sp,sp,20
   29b74:	002b0c41 	jmpi	2b0c4 <_write_r>

00029b78 <__sseek>:
   29b78:	defffe04 	addi	sp,sp,-8
   29b7c:	dc000015 	stw	r16,0(sp)
   29b80:	2821883a 	mov	r16,r5
   29b84:	2940038f 	ldh	r5,14(r5)
   29b88:	dfc00115 	stw	ra,4(sp)
   29b8c:	002bb700 	call	2bb70 <_lseek_r>
   29b90:	00ffffc4 	movi	r3,-1
   29b94:	10c00826 	beq	r2,r3,29bb8 <__sseek+0x40>
   29b98:	80c0030b 	ldhu	r3,12(r16)
   29b9c:	80801415 	stw	r2,80(r16)
   29ba0:	18c40014 	ori	r3,r3,4096
   29ba4:	80c0030d 	sth	r3,12(r16)
   29ba8:	dfc00117 	ldw	ra,4(sp)
   29bac:	dc000017 	ldw	r16,0(sp)
   29bb0:	dec00204 	addi	sp,sp,8
   29bb4:	f800283a 	ret
   29bb8:	80c0030b 	ldhu	r3,12(r16)
   29bbc:	18fbffcc 	andi	r3,r3,61439
   29bc0:	80c0030d 	sth	r3,12(r16)
   29bc4:	dfc00117 	ldw	ra,4(sp)
   29bc8:	dc000017 	ldw	r16,0(sp)
   29bcc:	dec00204 	addi	sp,sp,8
   29bd0:	f800283a 	ret

00029bd4 <__sclose>:
   29bd4:	2940038f 	ldh	r5,14(r5)
   29bd8:	002b2781 	jmpi	2b278 <_close_r>

00029bdc <strcmp>:
   29bdc:	2144b03a 	or	r2,r4,r5
   29be0:	108000cc 	andi	r2,r2,3
   29be4:	1000171e 	bne	r2,zero,29c44 <strcmp+0x68>
   29be8:	20800017 	ldw	r2,0(r4)
   29bec:	28c00017 	ldw	r3,0(r5)
   29bf0:	10c0141e 	bne	r2,r3,29c44 <strcmp+0x68>
   29bf4:	027fbff4 	movhi	r9,65279
   29bf8:	4a7fbfc4 	addi	r9,r9,-257
   29bfc:	0086303a 	nor	r3,zero,r2
   29c00:	02202074 	movhi	r8,32897
   29c04:	1245883a 	add	r2,r2,r9
   29c08:	42202004 	addi	r8,r8,-32640
   29c0c:	10c4703a 	and	r2,r2,r3
   29c10:	1204703a 	and	r2,r2,r8
   29c14:	10000226 	beq	r2,zero,29c20 <strcmp+0x44>
   29c18:	00002306 	br	29ca8 <strcmp+0xcc>
   29c1c:	1000221e 	bne	r2,zero,29ca8 <strcmp+0xcc>
   29c20:	21000104 	addi	r4,r4,4
   29c24:	20c00017 	ldw	r3,0(r4)
   29c28:	29400104 	addi	r5,r5,4
   29c2c:	29800017 	ldw	r6,0(r5)
   29c30:	1a4f883a 	add	r7,r3,r9
   29c34:	00c4303a 	nor	r2,zero,r3
   29c38:	3884703a 	and	r2,r7,r2
   29c3c:	1204703a 	and	r2,r2,r8
   29c40:	19bff626 	beq	r3,r6,29c1c <_gp+0xffff014c>
   29c44:	20800003 	ldbu	r2,0(r4)
   29c48:	10c03fcc 	andi	r3,r2,255
   29c4c:	18c0201c 	xori	r3,r3,128
   29c50:	18ffe004 	addi	r3,r3,-128
   29c54:	18000c26 	beq	r3,zero,29c88 <strcmp+0xac>
   29c58:	29800007 	ldb	r6,0(r5)
   29c5c:	19800326 	beq	r3,r6,29c6c <strcmp+0x90>
   29c60:	00001306 	br	29cb0 <strcmp+0xd4>
   29c64:	29800007 	ldb	r6,0(r5)
   29c68:	11800b1e 	bne	r2,r6,29c98 <strcmp+0xbc>
   29c6c:	21000044 	addi	r4,r4,1
   29c70:	20c00003 	ldbu	r3,0(r4)
   29c74:	29400044 	addi	r5,r5,1
   29c78:	18803fcc 	andi	r2,r3,255
   29c7c:	1080201c 	xori	r2,r2,128
   29c80:	10bfe004 	addi	r2,r2,-128
   29c84:	103ff71e 	bne	r2,zero,29c64 <_gp+0xffff0194>
   29c88:	0007883a 	mov	r3,zero
   29c8c:	28800003 	ldbu	r2,0(r5)
   29c90:	1885c83a 	sub	r2,r3,r2
   29c94:	f800283a 	ret
   29c98:	28800003 	ldbu	r2,0(r5)
   29c9c:	18c03fcc 	andi	r3,r3,255
   29ca0:	1885c83a 	sub	r2,r3,r2
   29ca4:	f800283a 	ret
   29ca8:	0005883a 	mov	r2,zero
   29cac:	f800283a 	ret
   29cb0:	10c03fcc 	andi	r3,r2,255
   29cb4:	003ff506 	br	29c8c <_gp+0xffff01bc>

00029cb8 <__ssprint_r>:
   29cb8:	30800217 	ldw	r2,8(r6)
   29cbc:	defff604 	addi	sp,sp,-40
   29cc0:	dc800215 	stw	r18,8(sp)
   29cc4:	dfc00915 	stw	ra,36(sp)
   29cc8:	df000815 	stw	fp,32(sp)
   29ccc:	ddc00715 	stw	r23,28(sp)
   29cd0:	dd800615 	stw	r22,24(sp)
   29cd4:	dd400515 	stw	r21,20(sp)
   29cd8:	dd000415 	stw	r20,16(sp)
   29cdc:	dcc00315 	stw	r19,12(sp)
   29ce0:	dc400115 	stw	r17,4(sp)
   29ce4:	dc000015 	stw	r16,0(sp)
   29ce8:	3025883a 	mov	r18,r6
   29cec:	10005826 	beq	r2,zero,29e50 <__ssprint_r+0x198>
   29cf0:	2027883a 	mov	r19,r4
   29cf4:	35c00017 	ldw	r23,0(r6)
   29cf8:	29000017 	ldw	r4,0(r5)
   29cfc:	28800217 	ldw	r2,8(r5)
   29d00:	2823883a 	mov	r17,r5
   29d04:	0039883a 	mov	fp,zero
   29d08:	0021883a 	mov	r16,zero
   29d0c:	80003926 	beq	r16,zero,29df4 <__ssprint_r+0x13c>
   29d10:	102b883a 	mov	r21,r2
   29d14:	102d883a 	mov	r22,r2
   29d18:	80803a36 	bltu	r16,r2,29e04 <__ssprint_r+0x14c>
   29d1c:	88c0030b 	ldhu	r3,12(r17)
   29d20:	1881200c 	andi	r2,r3,1152
   29d24:	10002626 	beq	r2,zero,29dc0 <__ssprint_r+0x108>
   29d28:	88800517 	ldw	r2,20(r17)
   29d2c:	89400417 	ldw	r5,16(r17)
   29d30:	81800044 	addi	r6,r16,1
   29d34:	108f883a 	add	r7,r2,r2
   29d38:	3885883a 	add	r2,r7,r2
   29d3c:	100ed7fa 	srli	r7,r2,31
   29d40:	216dc83a 	sub	r22,r4,r5
   29d44:	3589883a 	add	r4,r6,r22
   29d48:	3885883a 	add	r2,r7,r2
   29d4c:	102bd07a 	srai	r21,r2,1
   29d50:	a80d883a 	mov	r6,r21
   29d54:	a900022e 	bgeu	r21,r4,29d60 <__ssprint_r+0xa8>
   29d58:	202b883a 	mov	r21,r4
   29d5c:	200d883a 	mov	r6,r4
   29d60:	18c1000c 	andi	r3,r3,1024
   29d64:	18002a26 	beq	r3,zero,29e10 <__ssprint_r+0x158>
   29d68:	300b883a 	mov	r5,r6
   29d6c:	9809883a 	mov	r4,r19
   29d70:	00277bc0 	call	277bc <_malloc_r>
   29d74:	1029883a 	mov	r20,r2
   29d78:	10002c26 	beq	r2,zero,29e2c <__ssprint_r+0x174>
   29d7c:	89400417 	ldw	r5,16(r17)
   29d80:	b00d883a 	mov	r6,r22
   29d84:	1009883a 	mov	r4,r2
   29d88:	00280ac0 	call	280ac <memcpy>
   29d8c:	8880030b 	ldhu	r2,12(r17)
   29d90:	00fedfc4 	movi	r3,-1153
   29d94:	10c4703a 	and	r2,r2,r3
   29d98:	10802014 	ori	r2,r2,128
   29d9c:	8880030d 	sth	r2,12(r17)
   29da0:	a589883a 	add	r4,r20,r22
   29da4:	adadc83a 	sub	r22,r21,r22
   29da8:	8d400515 	stw	r21,20(r17)
   29dac:	8d800215 	stw	r22,8(r17)
   29db0:	8d000415 	stw	r20,16(r17)
   29db4:	89000015 	stw	r4,0(r17)
   29db8:	802b883a 	mov	r21,r16
   29dbc:	802d883a 	mov	r22,r16
   29dc0:	b00d883a 	mov	r6,r22
   29dc4:	e00b883a 	mov	r5,fp
   29dc8:	00281f40 	call	281f4 <memmove>
   29dcc:	88800217 	ldw	r2,8(r17)
   29dd0:	89000017 	ldw	r4,0(r17)
   29dd4:	90c00217 	ldw	r3,8(r18)
   29dd8:	1545c83a 	sub	r2,r2,r21
   29ddc:	2589883a 	add	r4,r4,r22
   29de0:	88800215 	stw	r2,8(r17)
   29de4:	89000015 	stw	r4,0(r17)
   29de8:	1c21c83a 	sub	r16,r3,r16
   29dec:	94000215 	stw	r16,8(r18)
   29df0:	80001726 	beq	r16,zero,29e50 <__ssprint_r+0x198>
   29df4:	bf000017 	ldw	fp,0(r23)
   29df8:	bc000117 	ldw	r16,4(r23)
   29dfc:	bdc00204 	addi	r23,r23,8
   29e00:	003fc206 	br	29d0c <_gp+0xffff023c>
   29e04:	802b883a 	mov	r21,r16
   29e08:	802d883a 	mov	r22,r16
   29e0c:	003fec06 	br	29dc0 <_gp+0xffff02f0>
   29e10:	9809883a 	mov	r4,r19
   29e14:	00294740 	call	29474 <_realloc_r>
   29e18:	1029883a 	mov	r20,r2
   29e1c:	103fe01e 	bne	r2,zero,29da0 <_gp+0xffff02d0>
   29e20:	89400417 	ldw	r5,16(r17)
   29e24:	9809883a 	mov	r4,r19
   29e28:	002b8600 	call	2b860 <_free_r>
   29e2c:	88c0030b 	ldhu	r3,12(r17)
   29e30:	00800304 	movi	r2,12
   29e34:	98800015 	stw	r2,0(r19)
   29e38:	18c01014 	ori	r3,r3,64
   29e3c:	88c0030d 	sth	r3,12(r17)
   29e40:	00bfffc4 	movi	r2,-1
   29e44:	90000215 	stw	zero,8(r18)
   29e48:	90000115 	stw	zero,4(r18)
   29e4c:	00000206 	br	29e58 <__ssprint_r+0x1a0>
   29e50:	90000115 	stw	zero,4(r18)
   29e54:	0005883a 	mov	r2,zero
   29e58:	dfc00917 	ldw	ra,36(sp)
   29e5c:	df000817 	ldw	fp,32(sp)
   29e60:	ddc00717 	ldw	r23,28(sp)
   29e64:	dd800617 	ldw	r22,24(sp)
   29e68:	dd400517 	ldw	r21,20(sp)
   29e6c:	dd000417 	ldw	r20,16(sp)
   29e70:	dcc00317 	ldw	r19,12(sp)
   29e74:	dc800217 	ldw	r18,8(sp)
   29e78:	dc400117 	ldw	r17,4(sp)
   29e7c:	dc000017 	ldw	r16,0(sp)
   29e80:	dec00a04 	addi	sp,sp,40
   29e84:	f800283a 	ret

00029e88 <___svfiprintf_internal_r>:
   29e88:	2880030b 	ldhu	r2,12(r5)
   29e8c:	deffc804 	addi	sp,sp,-224
   29e90:	dcc03115 	stw	r19,196(sp)
   29e94:	dfc03715 	stw	ra,220(sp)
   29e98:	df003615 	stw	fp,216(sp)
   29e9c:	ddc03515 	stw	r23,212(sp)
   29ea0:	dd803415 	stw	r22,208(sp)
   29ea4:	dd403315 	stw	r21,204(sp)
   29ea8:	dd003215 	stw	r20,200(sp)
   29eac:	dc803015 	stw	r18,192(sp)
   29eb0:	dc402f15 	stw	r17,188(sp)
   29eb4:	dc002e15 	stw	r16,184(sp)
   29eb8:	d9402715 	stw	r5,156(sp)
   29ebc:	d9002a15 	stw	r4,168(sp)
   29ec0:	1080200c 	andi	r2,r2,128
   29ec4:	d9c02315 	stw	r7,140(sp)
   29ec8:	3027883a 	mov	r19,r6
   29ecc:	10000226 	beq	r2,zero,29ed8 <___svfiprintf_internal_r+0x50>
   29ed0:	28800417 	ldw	r2,16(r5)
   29ed4:	10041d26 	beq	r2,zero,2af4c <___svfiprintf_internal_r+0x10c4>
   29ed8:	dac01a04 	addi	r11,sp,104
   29edc:	dac01e15 	stw	r11,120(sp)
   29ee0:	d8801e17 	ldw	r2,120(sp)
   29ee4:	dac019c4 	addi	r11,sp,103
   29ee8:	dd402a17 	ldw	r21,168(sp)
   29eec:	ddc02717 	ldw	r23,156(sp)
   29ef0:	058000f4 	movhi	r22,3
   29ef4:	050000f4 	movhi	r20,3
   29ef8:	dac01f15 	stw	r11,124(sp)
   29efc:	12d7c83a 	sub	r11,r2,r11
   29f00:	b5bffa04 	addi	r22,r22,-24
   29f04:	a53ff604 	addi	r20,r20,-40
   29f08:	dec01a15 	stw	sp,104(sp)
   29f0c:	d8001c15 	stw	zero,112(sp)
   29f10:	d8001b15 	stw	zero,108(sp)
   29f14:	d811883a 	mov	r8,sp
   29f18:	d8002915 	stw	zero,164(sp)
   29f1c:	d8002515 	stw	zero,148(sp)
   29f20:	dac02b15 	stw	r11,172(sp)
   29f24:	98800007 	ldb	r2,0(r19)
   29f28:	1002dd26 	beq	r2,zero,2aaa0 <___svfiprintf_internal_r+0xc18>
   29f2c:	00c00944 	movi	r3,37
   29f30:	9823883a 	mov	r17,r19
   29f34:	10c0021e 	bne	r2,r3,29f40 <___svfiprintf_internal_r+0xb8>
   29f38:	00001406 	br	29f8c <___svfiprintf_internal_r+0x104>
   29f3c:	10c00326 	beq	r2,r3,29f4c <___svfiprintf_internal_r+0xc4>
   29f40:	8c400044 	addi	r17,r17,1
   29f44:	88800007 	ldb	r2,0(r17)
   29f48:	103ffc1e 	bne	r2,zero,29f3c <_gp+0xffff046c>
   29f4c:	8ce1c83a 	sub	r16,r17,r19
   29f50:	80000e26 	beq	r16,zero,29f8c <___svfiprintf_internal_r+0x104>
   29f54:	d8c01c17 	ldw	r3,112(sp)
   29f58:	d8801b17 	ldw	r2,108(sp)
   29f5c:	44c00015 	stw	r19,0(r8)
   29f60:	1c07883a 	add	r3,r3,r16
   29f64:	10800044 	addi	r2,r2,1
   29f68:	d8c01c15 	stw	r3,112(sp)
   29f6c:	44000115 	stw	r16,4(r8)
   29f70:	d8801b15 	stw	r2,108(sp)
   29f74:	00c001c4 	movi	r3,7
   29f78:	18831e16 	blt	r3,r2,2abf4 <___svfiprintf_internal_r+0xd6c>
   29f7c:	42000204 	addi	r8,r8,8
   29f80:	dac02517 	ldw	r11,148(sp)
   29f84:	5c17883a 	add	r11,r11,r16
   29f88:	dac02515 	stw	r11,148(sp)
   29f8c:	88800007 	ldb	r2,0(r17)
   29f90:	1002c526 	beq	r2,zero,2aaa8 <___svfiprintf_internal_r+0xc20>
   29f94:	88c00047 	ldb	r3,1(r17)
   29f98:	8cc00044 	addi	r19,r17,1
   29f9c:	d8001d85 	stb	zero,118(sp)
   29fa0:	0009883a 	mov	r4,zero
   29fa4:	000f883a 	mov	r7,zero
   29fa8:	043fffc4 	movi	r16,-1
   29fac:	d8002415 	stw	zero,144(sp)
   29fb0:	0025883a 	mov	r18,zero
   29fb4:	01401604 	movi	r5,88
   29fb8:	01800244 	movi	r6,9
   29fbc:	02800a84 	movi	r10,42
   29fc0:	02401b04 	movi	r9,108
   29fc4:	9cc00044 	addi	r19,r19,1
   29fc8:	18bff804 	addi	r2,r3,-32
   29fcc:	2881dd36 	bltu	r5,r2,2a744 <___svfiprintf_internal_r+0x8bc>
   29fd0:	100490ba 	slli	r2,r2,2
   29fd4:	02c000f4 	movhi	r11,3
   29fd8:	5ae7fa04 	addi	r11,r11,-24600
   29fdc:	12c5883a 	add	r2,r2,r11
   29fe0:	10800017 	ldw	r2,0(r2)
   29fe4:	1000683a 	jmp	r2
   29fe8:	0002a1e4 	muli	zero,zero,2695
   29fec:	0002a744 	movi	zero,2717
   29ff0:	0002a744 	movi	zero,2717
   29ff4:	0002a1d8 	cmpnei	zero,zero,2695
   29ff8:	0002a744 	movi	zero,2717
   29ffc:	0002a744 	movi	zero,2717
   2a000:	0002a744 	movi	zero,2717
   2a004:	0002a744 	movi	zero,2717
   2a008:	0002a744 	movi	zero,2717
   2a00c:	0002a744 	movi	zero,2717
   2a010:	0002a14c 	andi	zero,zero,2693
   2a014:	0002a328 	cmpgeui	zero,zero,2700
   2a018:	0002a744 	movi	zero,2717
   2a01c:	0002a178 	rdprs	zero,zero,2693
   2a020:	0002a778 	rdprs	zero,zero,2717
   2a024:	0002a744 	movi	zero,2717
   2a028:	0002a76c 	andhi	zero,zero,2717
   2a02c:	0002a70c 	andi	zero,zero,2716
   2a030:	0002a70c 	andi	zero,zero,2716
   2a034:	0002a70c 	andi	zero,zero,2716
   2a038:	0002a70c 	andi	zero,zero,2716
   2a03c:	0002a70c 	andi	zero,zero,2716
   2a040:	0002a70c 	andi	zero,zero,2716
   2a044:	0002a70c 	andi	zero,zero,2716
   2a048:	0002a70c 	andi	zero,zero,2716
   2a04c:	0002a70c 	andi	zero,zero,2716
   2a050:	0002a744 	movi	zero,2717
   2a054:	0002a744 	movi	zero,2717
   2a058:	0002a744 	movi	zero,2717
   2a05c:	0002a744 	movi	zero,2717
   2a060:	0002a744 	movi	zero,2717
   2a064:	0002a744 	movi	zero,2717
   2a068:	0002a744 	movi	zero,2717
   2a06c:	0002a744 	movi	zero,2717
   2a070:	0002a744 	movi	zero,2717
   2a074:	0002a744 	movi	zero,2717
   2a078:	0002a6a8 	cmpgeui	zero,zero,2714
   2a07c:	0002a744 	movi	zero,2717
   2a080:	0002a744 	movi	zero,2717
   2a084:	0002a744 	movi	zero,2717
   2a088:	0002a744 	movi	zero,2717
   2a08c:	0002a744 	movi	zero,2717
   2a090:	0002a744 	movi	zero,2717
   2a094:	0002a744 	movi	zero,2717
   2a098:	0002a744 	movi	zero,2717
   2a09c:	0002a744 	movi	zero,2717
   2a0a0:	0002a744 	movi	zero,2717
   2a0a4:	0002a820 	cmpeqi	zero,zero,2720
   2a0a8:	0002a744 	movi	zero,2717
   2a0ac:	0002a744 	movi	zero,2717
   2a0b0:	0002a744 	movi	zero,2717
   2a0b4:	0002a744 	movi	zero,2717
   2a0b8:	0002a744 	movi	zero,2717
   2a0bc:	0002a7b8 	rdprs	zero,zero,2718
   2a0c0:	0002a744 	movi	zero,2717
   2a0c4:	0002a744 	movi	zero,2717
   2a0c8:	0002a4ec 	andhi	zero,zero,2707
   2a0cc:	0002a744 	movi	zero,2717
   2a0d0:	0002a744 	movi	zero,2717
   2a0d4:	0002a744 	movi	zero,2717
   2a0d8:	0002a744 	movi	zero,2717
   2a0dc:	0002a744 	movi	zero,2717
   2a0e0:	0002a744 	movi	zero,2717
   2a0e4:	0002a744 	movi	zero,2717
   2a0e8:	0002a744 	movi	zero,2717
   2a0ec:	0002a744 	movi	zero,2717
   2a0f0:	0002a744 	movi	zero,2717
   2a0f4:	0002a3dc 	xori	zero,zero,2703
   2a0f8:	0002a588 	cmpgei	zero,zero,2710
   2a0fc:	0002a744 	movi	zero,2717
   2a100:	0002a744 	movi	zero,2717
   2a104:	0002a744 	movi	zero,2717
   2a108:	0002a57c 	xorhi	zero,zero,2709
   2a10c:	0002a588 	cmpgei	zero,zero,2710
   2a110:	0002a744 	movi	zero,2717
   2a114:	0002a744 	movi	zero,2717
   2a118:	0002a56c 	andhi	zero,zero,2709
   2a11c:	0002a744 	movi	zero,2717
   2a120:	0002a530 	cmpltui	zero,zero,2708
   2a124:	0002a338 	rdprs	zero,zero,2700
   2a128:	0002a184 	movi	zero,2694
   2a12c:	0002a69c 	xori	zero,zero,2714
   2a130:	0002a744 	movi	zero,2717
   2a134:	0002a650 	cmplti	zero,zero,2713
   2a138:	0002a744 	movi	zero,2717
   2a13c:	0002a2a8 	cmpgeui	zero,zero,2698
   2a140:	0002a744 	movi	zero,2717
   2a144:	0002a744 	movi	zero,2717
   2a148:	0002a204 	movi	zero,2696
   2a14c:	dac02317 	ldw	r11,140(sp)
   2a150:	5ac00017 	ldw	r11,0(r11)
   2a154:	dac02415 	stw	r11,144(sp)
   2a158:	dac02317 	ldw	r11,140(sp)
   2a15c:	58800104 	addi	r2,r11,4
   2a160:	dac02417 	ldw	r11,144(sp)
   2a164:	5802e90e 	bge	r11,zero,2ad0c <___svfiprintf_internal_r+0xe84>
   2a168:	dac02417 	ldw	r11,144(sp)
   2a16c:	d8802315 	stw	r2,140(sp)
   2a170:	02d7c83a 	sub	r11,zero,r11
   2a174:	dac02415 	stw	r11,144(sp)
   2a178:	94800114 	ori	r18,r18,4
   2a17c:	98c00007 	ldb	r3,0(r19)
   2a180:	003f9006 	br	29fc4 <_gp+0xffff04f4>
   2a184:	00800c04 	movi	r2,48
   2a188:	dac02317 	ldw	r11,140(sp)
   2a18c:	d8801d05 	stb	r2,116(sp)
   2a190:	00801e04 	movi	r2,120
   2a194:	d8801d45 	stb	r2,117(sp)
   2a198:	d8001d85 	stb	zero,118(sp)
   2a19c:	58c00104 	addi	r3,r11,4
   2a1a0:	5f000017 	ldw	fp,0(r11)
   2a1a4:	0013883a 	mov	r9,zero
   2a1a8:	90800094 	ori	r2,r18,2
   2a1ac:	80032b16 	blt	r16,zero,2ae5c <___svfiprintf_internal_r+0xfd4>
   2a1b0:	00bfdfc4 	movi	r2,-129
   2a1b4:	90a4703a 	and	r18,r18,r2
   2a1b8:	d8c02315 	stw	r3,140(sp)
   2a1bc:	94800094 	ori	r18,r18,2
   2a1c0:	e002dc26 	beq	fp,zero,2ad34 <___svfiprintf_internal_r+0xeac>
   2a1c4:	010000f4 	movhi	r4,3
   2a1c8:	213f9504 	addi	r4,r4,-428
   2a1cc:	0015883a 	mov	r10,zero
   2a1d0:	d9002915 	stw	r4,164(sp)
   2a1d4:	00002306 	br	2a264 <___svfiprintf_internal_r+0x3dc>
   2a1d8:	94800054 	ori	r18,r18,1
   2a1dc:	98c00007 	ldb	r3,0(r19)
   2a1e0:	003f7806 	br	29fc4 <_gp+0xffff04f4>
   2a1e4:	38803fcc 	andi	r2,r7,255
   2a1e8:	1080201c 	xori	r2,r2,128
   2a1ec:	10bfe004 	addi	r2,r2,-128
   2a1f0:	1002f31e 	bne	r2,zero,2adc0 <___svfiprintf_internal_r+0xf38>
   2a1f4:	01000044 	movi	r4,1
   2a1f8:	01c00804 	movi	r7,32
   2a1fc:	98c00007 	ldb	r3,0(r19)
   2a200:	003f7006 	br	29fc4 <_gp+0xffff04f4>
   2a204:	21003fcc 	andi	r4,r4,255
   2a208:	2003aa1e 	bne	r4,zero,2b0b4 <___svfiprintf_internal_r+0x122c>
   2a20c:	008000f4 	movhi	r2,3
   2a210:	10bf9504 	addi	r2,r2,-428
   2a214:	d8802915 	stw	r2,164(sp)
   2a218:	9080080c 	andi	r2,r18,32
   2a21c:	1000ba26 	beq	r2,zero,2a508 <___svfiprintf_internal_r+0x680>
   2a220:	dac02317 	ldw	r11,140(sp)
   2a224:	5f000017 	ldw	fp,0(r11)
   2a228:	5a400117 	ldw	r9,4(r11)
   2a22c:	5ac00204 	addi	r11,r11,8
   2a230:	dac02315 	stw	r11,140(sp)
   2a234:	9080004c 	andi	r2,r18,1
   2a238:	10029026 	beq	r2,zero,2ac7c <___svfiprintf_internal_r+0xdf4>
   2a23c:	e244b03a 	or	r2,fp,r9
   2a240:	1002d41e 	bne	r2,zero,2ad94 <___svfiprintf_internal_r+0xf0c>
   2a244:	d8001d85 	stb	zero,118(sp)
   2a248:	80030b16 	blt	r16,zero,2ae78 <___svfiprintf_internal_r+0xff0>
   2a24c:	00bfdfc4 	movi	r2,-129
   2a250:	90a4703a 	and	r18,r18,r2
   2a254:	0015883a 	mov	r10,zero
   2a258:	80002426 	beq	r16,zero,2a2ec <___svfiprintf_internal_r+0x464>
   2a25c:	0039883a 	mov	fp,zero
   2a260:	0013883a 	mov	r9,zero
   2a264:	d9002917 	ldw	r4,164(sp)
   2a268:	dc401a04 	addi	r17,sp,104
   2a26c:	e08003cc 	andi	r2,fp,15
   2a270:	4806973a 	slli	r3,r9,28
   2a274:	2085883a 	add	r2,r4,r2
   2a278:	e038d13a 	srli	fp,fp,4
   2a27c:	10800003 	ldbu	r2,0(r2)
   2a280:	4812d13a 	srli	r9,r9,4
   2a284:	8c7fffc4 	addi	r17,r17,-1
   2a288:	1f38b03a 	or	fp,r3,fp
   2a28c:	88800005 	stb	r2,0(r17)
   2a290:	e244b03a 	or	r2,fp,r9
   2a294:	103ff51e 	bne	r2,zero,2a26c <_gp+0xffff079c>
   2a298:	dac01e17 	ldw	r11,120(sp)
   2a29c:	5c57c83a 	sub	r11,r11,r17
   2a2a0:	dac02115 	stw	r11,132(sp)
   2a2a4:	00001406 	br	2a2f8 <___svfiprintf_internal_r+0x470>
   2a2a8:	21003fcc 	andi	r4,r4,255
   2a2ac:	2003741e 	bne	r4,zero,2b080 <___svfiprintf_internal_r+0x11f8>
   2a2b0:	9080080c 	andi	r2,r18,32
   2a2b4:	10014526 	beq	r2,zero,2a7cc <___svfiprintf_internal_r+0x944>
   2a2b8:	dac02317 	ldw	r11,140(sp)
   2a2bc:	d8001d85 	stb	zero,118(sp)
   2a2c0:	58c00204 	addi	r3,r11,8
   2a2c4:	5f000017 	ldw	fp,0(r11)
   2a2c8:	5a400117 	ldw	r9,4(r11)
   2a2cc:	8002d916 	blt	r16,zero,2ae34 <___svfiprintf_internal_r+0xfac>
   2a2d0:	013fdfc4 	movi	r4,-129
   2a2d4:	e244b03a 	or	r2,fp,r9
   2a2d8:	d8c02315 	stw	r3,140(sp)
   2a2dc:	9124703a 	and	r18,r18,r4
   2a2e0:	0015883a 	mov	r10,zero
   2a2e4:	1000b91e 	bne	r2,zero,2a5cc <___svfiprintf_internal_r+0x744>
   2a2e8:	8002e61e 	bne	r16,zero,2ae84 <___svfiprintf_internal_r+0xffc>
   2a2ec:	0021883a 	mov	r16,zero
   2a2f0:	d8002115 	stw	zero,132(sp)
   2a2f4:	dc401a04 	addi	r17,sp,104
   2a2f8:	d8c02117 	ldw	r3,132(sp)
   2a2fc:	dc002015 	stw	r16,128(sp)
   2a300:	80c0010e 	bge	r16,r3,2a308 <___svfiprintf_internal_r+0x480>
   2a304:	d8c02015 	stw	r3,128(sp)
   2a308:	52803fcc 	andi	r10,r10,255
   2a30c:	5280201c 	xori	r10,r10,128
   2a310:	52bfe004 	addi	r10,r10,-128
   2a314:	50003c26 	beq	r10,zero,2a408 <___svfiprintf_internal_r+0x580>
   2a318:	dac02017 	ldw	r11,128(sp)
   2a31c:	5ac00044 	addi	r11,r11,1
   2a320:	dac02015 	stw	r11,128(sp)
   2a324:	00003806 	br	2a408 <___svfiprintf_internal_r+0x580>
   2a328:	01000044 	movi	r4,1
   2a32c:	01c00ac4 	movi	r7,43
   2a330:	98c00007 	ldb	r3,0(r19)
   2a334:	003f2306 	br	29fc4 <_gp+0xffff04f4>
   2a338:	21003fcc 	andi	r4,r4,255
   2a33c:	2003481e 	bne	r4,zero,2b060 <___svfiprintf_internal_r+0x11d8>
   2a340:	9080080c 	andi	r2,r18,32
   2a344:	10013b26 	beq	r2,zero,2a834 <___svfiprintf_internal_r+0x9ac>
   2a348:	dac02317 	ldw	r11,140(sp)
   2a34c:	d8001d85 	stb	zero,118(sp)
   2a350:	58800204 	addi	r2,r11,8
   2a354:	5f000017 	ldw	fp,0(r11)
   2a358:	5a400117 	ldw	r9,4(r11)
   2a35c:	8002a816 	blt	r16,zero,2ae00 <___svfiprintf_internal_r+0xf78>
   2a360:	013fdfc4 	movi	r4,-129
   2a364:	e246b03a 	or	r3,fp,r9
   2a368:	d8802315 	stw	r2,140(sp)
   2a36c:	9124703a 	and	r18,r18,r4
   2a370:	18013c26 	beq	r3,zero,2a864 <___svfiprintf_internal_r+0x9dc>
   2a374:	0015883a 	mov	r10,zero
   2a378:	dc401a04 	addi	r17,sp,104
   2a37c:	e006d0fa 	srli	r3,fp,3
   2a380:	4808977a 	slli	r4,r9,29
   2a384:	4812d0fa 	srli	r9,r9,3
   2a388:	e70001cc 	andi	fp,fp,7
   2a38c:	e0800c04 	addi	r2,fp,48
   2a390:	8c7fffc4 	addi	r17,r17,-1
   2a394:	20f8b03a 	or	fp,r4,r3
   2a398:	88800005 	stb	r2,0(r17)
   2a39c:	e246b03a 	or	r3,fp,r9
   2a3a0:	183ff61e 	bne	r3,zero,2a37c <_gp+0xffff08ac>
   2a3a4:	90c0004c 	andi	r3,r18,1
   2a3a8:	1800a526 	beq	r3,zero,2a640 <___svfiprintf_internal_r+0x7b8>
   2a3ac:	10803fcc 	andi	r2,r2,255
   2a3b0:	1080201c 	xori	r2,r2,128
   2a3b4:	10bfe004 	addi	r2,r2,-128
   2a3b8:	00c00c04 	movi	r3,48
   2a3bc:	10ffb626 	beq	r2,r3,2a298 <_gp+0xffff07c8>
   2a3c0:	88ffffc5 	stb	r3,-1(r17)
   2a3c4:	d8c01e17 	ldw	r3,120(sp)
   2a3c8:	88bfffc4 	addi	r2,r17,-1
   2a3cc:	1023883a 	mov	r17,r2
   2a3d0:	1887c83a 	sub	r3,r3,r2
   2a3d4:	d8c02115 	stw	r3,132(sp)
   2a3d8:	003fc706 	br	2a2f8 <_gp+0xffff0828>
   2a3dc:	dac02317 	ldw	r11,140(sp)
   2a3e0:	00c00044 	movi	r3,1
   2a3e4:	d8c02015 	stw	r3,128(sp)
   2a3e8:	58800017 	ldw	r2,0(r11)
   2a3ec:	5ac00104 	addi	r11,r11,4
   2a3f0:	d8001d85 	stb	zero,118(sp)
   2a3f4:	d8801005 	stb	r2,64(sp)
   2a3f8:	dac02315 	stw	r11,140(sp)
   2a3fc:	d8c02115 	stw	r3,132(sp)
   2a400:	dc401004 	addi	r17,sp,64
   2a404:	0021883a 	mov	r16,zero
   2a408:	90c0008c 	andi	r3,r18,2
   2a40c:	d8c02215 	stw	r3,136(sp)
   2a410:	18000326 	beq	r3,zero,2a420 <___svfiprintf_internal_r+0x598>
   2a414:	dac02017 	ldw	r11,128(sp)
   2a418:	5ac00084 	addi	r11,r11,2
   2a41c:	dac02015 	stw	r11,128(sp)
   2a420:	90c0210c 	andi	r3,r18,132
   2a424:	d8c02615 	stw	r3,152(sp)
   2a428:	1801131e 	bne	r3,zero,2a878 <___svfiprintf_internal_r+0x9f0>
   2a42c:	dac02417 	ldw	r11,144(sp)
   2a430:	d8c02017 	ldw	r3,128(sp)
   2a434:	58f9c83a 	sub	fp,r11,r3
   2a438:	07010f0e 	bge	zero,fp,2a878 <___svfiprintf_internal_r+0x9f0>
   2a43c:	02400404 	movi	r9,16
   2a440:	d8c01c17 	ldw	r3,112(sp)
   2a444:	d8801b17 	ldw	r2,108(sp)
   2a448:	4f02d60e 	bge	r9,fp,2afa4 <___svfiprintf_internal_r+0x111c>
   2a44c:	014000f4 	movhi	r5,3
   2a450:	297ffa04 	addi	r5,r5,-24
   2a454:	d9402815 	stw	r5,160(sp)
   2a458:	028001c4 	movi	r10,7
   2a45c:	00000306 	br	2a46c <___svfiprintf_internal_r+0x5e4>
   2a460:	e73ffc04 	addi	fp,fp,-16
   2a464:	42000204 	addi	r8,r8,8
   2a468:	4f00150e 	bge	r9,fp,2a4c0 <___svfiprintf_internal_r+0x638>
   2a46c:	18c00404 	addi	r3,r3,16
   2a470:	10800044 	addi	r2,r2,1
   2a474:	45800015 	stw	r22,0(r8)
   2a478:	42400115 	stw	r9,4(r8)
   2a47c:	d8c01c15 	stw	r3,112(sp)
   2a480:	d8801b15 	stw	r2,108(sp)
   2a484:	50bff60e 	bge	r10,r2,2a460 <_gp+0xffff0990>
   2a488:	d9801a04 	addi	r6,sp,104
   2a48c:	b80b883a 	mov	r5,r23
   2a490:	a809883a 	mov	r4,r21
   2a494:	da402c15 	stw	r9,176(sp)
   2a498:	da802d15 	stw	r10,180(sp)
   2a49c:	0029cb80 	call	29cb8 <__ssprint_r>
   2a4a0:	da402c17 	ldw	r9,176(sp)
   2a4a4:	da802d17 	ldw	r10,180(sp)
   2a4a8:	1001851e 	bne	r2,zero,2aac0 <___svfiprintf_internal_r+0xc38>
   2a4ac:	e73ffc04 	addi	fp,fp,-16
   2a4b0:	d8c01c17 	ldw	r3,112(sp)
   2a4b4:	d8801b17 	ldw	r2,108(sp)
   2a4b8:	d811883a 	mov	r8,sp
   2a4bc:	4f3feb16 	blt	r9,fp,2a46c <_gp+0xffff099c>
   2a4c0:	dac02817 	ldw	r11,160(sp)
   2a4c4:	e0c7883a 	add	r3,fp,r3
   2a4c8:	10800044 	addi	r2,r2,1
   2a4cc:	42c00015 	stw	r11,0(r8)
   2a4d0:	47000115 	stw	fp,4(r8)
   2a4d4:	d8c01c15 	stw	r3,112(sp)
   2a4d8:	d8801b15 	stw	r2,108(sp)
   2a4dc:	010001c4 	movi	r4,7
   2a4e0:	2081ee16 	blt	r4,r2,2ac9c <___svfiprintf_internal_r+0xe14>
   2a4e4:	42000204 	addi	r8,r8,8
   2a4e8:	0000e506 	br	2a880 <___svfiprintf_internal_r+0x9f8>
   2a4ec:	21003fcc 	andi	r4,r4,255
   2a4f0:	2002dd1e 	bne	r4,zero,2b068 <___svfiprintf_internal_r+0x11e0>
   2a4f4:	008000f4 	movhi	r2,3
   2a4f8:	10bf9004 	addi	r2,r2,-448
   2a4fc:	d8802915 	stw	r2,164(sp)
   2a500:	9080080c 	andi	r2,r18,32
   2a504:	103f461e 	bne	r2,zero,2a220 <_gp+0xffff0750>
   2a508:	9080040c 	andi	r2,r18,16
   2a50c:	10022e1e 	bne	r2,zero,2adc8 <___svfiprintf_internal_r+0xf40>
   2a510:	9080100c 	andi	r2,r18,64
   2a514:	dac02317 	ldw	r11,140(sp)
   2a518:	10027326 	beq	r2,zero,2aee8 <___svfiprintf_internal_r+0x1060>
   2a51c:	5f00000b 	ldhu	fp,0(r11)
   2a520:	5ac00104 	addi	r11,r11,4
   2a524:	0013883a 	mov	r9,zero
   2a528:	dac02315 	stw	r11,140(sp)
   2a52c:	003f4106 	br	2a234 <_gp+0xffff0764>
   2a530:	21003fcc 	andi	r4,r4,255
   2a534:	2002e11e 	bne	r4,zero,2b0bc <___svfiprintf_internal_r+0x1234>
   2a538:	9080080c 	andi	r2,r18,32
   2a53c:	1002011e 	bne	r2,zero,2ad44 <___svfiprintf_internal_r+0xebc>
   2a540:	9080040c 	andi	r2,r18,16
   2a544:	10023e1e 	bne	r2,zero,2ae40 <___svfiprintf_internal_r+0xfb8>
   2a548:	9480100c 	andi	r18,r18,64
   2a54c:	90023c26 	beq	r18,zero,2ae40 <___svfiprintf_internal_r+0xfb8>
   2a550:	dac02317 	ldw	r11,140(sp)
   2a554:	58800017 	ldw	r2,0(r11)
   2a558:	5ac00104 	addi	r11,r11,4
   2a55c:	dac02315 	stw	r11,140(sp)
   2a560:	dac02517 	ldw	r11,148(sp)
   2a564:	12c0000d 	sth	r11,0(r2)
   2a568:	003e6e06 	br	29f24 <_gp+0xffff0454>
   2a56c:	98c00007 	ldb	r3,0(r19)
   2a570:	1a422926 	beq	r3,r9,2ae18 <___svfiprintf_internal_r+0xf90>
   2a574:	94800414 	ori	r18,r18,16
   2a578:	003e9206 	br	29fc4 <_gp+0xffff04f4>
   2a57c:	94801014 	ori	r18,r18,64
   2a580:	98c00007 	ldb	r3,0(r19)
   2a584:	003e8f06 	br	29fc4 <_gp+0xffff04f4>
   2a588:	21003fcc 	andi	r4,r4,255
   2a58c:	2002c71e 	bne	r4,zero,2b0ac <___svfiprintf_internal_r+0x1224>
   2a590:	9080080c 	andi	r2,r18,32
   2a594:	10004926 	beq	r2,zero,2a6bc <___svfiprintf_internal_r+0x834>
   2a598:	dac02317 	ldw	r11,140(sp)
   2a59c:	58800117 	ldw	r2,4(r11)
   2a5a0:	5f000017 	ldw	fp,0(r11)
   2a5a4:	5ac00204 	addi	r11,r11,8
   2a5a8:	dac02315 	stw	r11,140(sp)
   2a5ac:	1013883a 	mov	r9,r2
   2a5b0:	10004b16 	blt	r2,zero,2a6e0 <___svfiprintf_internal_r+0x858>
   2a5b4:	da801d83 	ldbu	r10,118(sp)
   2a5b8:	8001cb16 	blt	r16,zero,2ace8 <___svfiprintf_internal_r+0xe60>
   2a5bc:	00ffdfc4 	movi	r3,-129
   2a5c0:	e244b03a 	or	r2,fp,r9
   2a5c4:	90e4703a 	and	r18,r18,r3
   2a5c8:	103f4726 	beq	r2,zero,2a2e8 <_gp+0xffff0818>
   2a5cc:	48008c26 	beq	r9,zero,2a800 <___svfiprintf_internal_r+0x978>
   2a5d0:	dc802015 	stw	r18,128(sp)
   2a5d4:	dc002115 	stw	r16,132(sp)
   2a5d8:	dc401a04 	addi	r17,sp,104
   2a5dc:	e021883a 	mov	r16,fp
   2a5e0:	da002215 	stw	r8,136(sp)
   2a5e4:	5039883a 	mov	fp,r10
   2a5e8:	4825883a 	mov	r18,r9
   2a5ec:	8009883a 	mov	r4,r16
   2a5f0:	900b883a 	mov	r5,r18
   2a5f4:	01800284 	movi	r6,10
   2a5f8:	000f883a 	mov	r7,zero
   2a5fc:	002c4140 	call	2c414 <__umoddi3>
   2a600:	10800c04 	addi	r2,r2,48
   2a604:	8c7fffc4 	addi	r17,r17,-1
   2a608:	8009883a 	mov	r4,r16
   2a60c:	900b883a 	mov	r5,r18
   2a610:	88800005 	stb	r2,0(r17)
   2a614:	01800284 	movi	r6,10
   2a618:	000f883a 	mov	r7,zero
   2a61c:	002be9c0 	call	2be9c <__udivdi3>
   2a620:	1021883a 	mov	r16,r2
   2a624:	10c4b03a 	or	r2,r2,r3
   2a628:	1825883a 	mov	r18,r3
   2a62c:	103fef1e 	bne	r2,zero,2a5ec <_gp+0xffff0b1c>
   2a630:	dc802017 	ldw	r18,128(sp)
   2a634:	dc002117 	ldw	r16,132(sp)
   2a638:	da002217 	ldw	r8,136(sp)
   2a63c:	e015883a 	mov	r10,fp
   2a640:	d8c01e17 	ldw	r3,120(sp)
   2a644:	1c47c83a 	sub	r3,r3,r17
   2a648:	d8c02115 	stw	r3,132(sp)
   2a64c:	003f2a06 	br	2a2f8 <_gp+0xffff0828>
   2a650:	dac02317 	ldw	r11,140(sp)
   2a654:	d8001d85 	stb	zero,118(sp)
   2a658:	5c400017 	ldw	r17,0(r11)
   2a65c:	5f000104 	addi	fp,r11,4
   2a660:	88022f26 	beq	r17,zero,2af20 <___svfiprintf_internal_r+0x1098>
   2a664:	80022516 	blt	r16,zero,2aefc <___svfiprintf_internal_r+0x1074>
   2a668:	800d883a 	mov	r6,r16
   2a66c:	000b883a 	mov	r5,zero
   2a670:	8809883a 	mov	r4,r17
   2a674:	da002c15 	stw	r8,176(sp)
   2a678:	0027fc80 	call	27fc8 <memchr>
   2a67c:	da002c17 	ldw	r8,176(sp)
   2a680:	10026426 	beq	r2,zero,2b014 <___svfiprintf_internal_r+0x118c>
   2a684:	1445c83a 	sub	r2,r2,r17
   2a688:	d8802115 	stw	r2,132(sp)
   2a68c:	da801d83 	ldbu	r10,118(sp)
   2a690:	df002315 	stw	fp,140(sp)
   2a694:	0021883a 	mov	r16,zero
   2a698:	003f1706 	br	2a2f8 <_gp+0xffff0828>
   2a69c:	94800814 	ori	r18,r18,32
   2a6a0:	98c00007 	ldb	r3,0(r19)
   2a6a4:	003e4706 	br	29fc4 <_gp+0xffff04f4>
   2a6a8:	21003fcc 	andi	r4,r4,255
   2a6ac:	2002701e 	bne	r4,zero,2b070 <___svfiprintf_internal_r+0x11e8>
   2a6b0:	94800414 	ori	r18,r18,16
   2a6b4:	9080080c 	andi	r2,r18,32
   2a6b8:	103fb71e 	bne	r2,zero,2a598 <_gp+0xffff0ac8>
   2a6bc:	9080040c 	andi	r2,r18,16
   2a6c0:	1001ab26 	beq	r2,zero,2ad70 <___svfiprintf_internal_r+0xee8>
   2a6c4:	dac02317 	ldw	r11,140(sp)
   2a6c8:	5f000017 	ldw	fp,0(r11)
   2a6cc:	5ac00104 	addi	r11,r11,4
   2a6d0:	dac02315 	stw	r11,140(sp)
   2a6d4:	e013d7fa 	srai	r9,fp,31
   2a6d8:	4805883a 	mov	r2,r9
   2a6dc:	103fb50e 	bge	r2,zero,2a5b4 <_gp+0xffff0ae4>
   2a6e0:	0739c83a 	sub	fp,zero,fp
   2a6e4:	02800b44 	movi	r10,45
   2a6e8:	e004c03a 	cmpne	r2,fp,zero
   2a6ec:	0253c83a 	sub	r9,zero,r9
   2a6f0:	da801d85 	stb	r10,118(sp)
   2a6f4:	4893c83a 	sub	r9,r9,r2
   2a6f8:	80023016 	blt	r16,zero,2afbc <___svfiprintf_internal_r+0x1134>
   2a6fc:	00bfdfc4 	movi	r2,-129
   2a700:	90a4703a 	and	r18,r18,r2
   2a704:	483fb21e 	bne	r9,zero,2a5d0 <_gp+0xffff0b00>
   2a708:	00003d06 	br	2a800 <___svfiprintf_internal_r+0x978>
   2a70c:	9817883a 	mov	r11,r19
   2a710:	d8002415 	stw	zero,144(sp)
   2a714:	18bff404 	addi	r2,r3,-48
   2a718:	0019883a 	mov	r12,zero
   2a71c:	58c00007 	ldb	r3,0(r11)
   2a720:	630002a4 	muli	r12,r12,10
   2a724:	9cc00044 	addi	r19,r19,1
   2a728:	9817883a 	mov	r11,r19
   2a72c:	1319883a 	add	r12,r2,r12
   2a730:	18bff404 	addi	r2,r3,-48
   2a734:	30bff92e 	bgeu	r6,r2,2a71c <_gp+0xffff0c4c>
   2a738:	db002415 	stw	r12,144(sp)
   2a73c:	18bff804 	addi	r2,r3,-32
   2a740:	28be232e 	bgeu	r5,r2,29fd0 <_gp+0xffff0500>
   2a744:	21003fcc 	andi	r4,r4,255
   2a748:	20024b1e 	bne	r4,zero,2b078 <___svfiprintf_internal_r+0x11f0>
   2a74c:	1800d626 	beq	r3,zero,2aaa8 <___svfiprintf_internal_r+0xc20>
   2a750:	02c00044 	movi	r11,1
   2a754:	dac02015 	stw	r11,128(sp)
   2a758:	d8c01005 	stb	r3,64(sp)
   2a75c:	d8001d85 	stb	zero,118(sp)
   2a760:	dac02115 	stw	r11,132(sp)
   2a764:	dc401004 	addi	r17,sp,64
   2a768:	003f2606 	br	2a404 <_gp+0xffff0934>
   2a76c:	94802014 	ori	r18,r18,128
   2a770:	98c00007 	ldb	r3,0(r19)
   2a774:	003e1306 	br	29fc4 <_gp+0xffff04f4>
   2a778:	98c00007 	ldb	r3,0(r19)
   2a77c:	9ac00044 	addi	r11,r19,1
   2a780:	1a822b26 	beq	r3,r10,2b030 <___svfiprintf_internal_r+0x11a8>
   2a784:	18bff404 	addi	r2,r3,-48
   2a788:	0021883a 	mov	r16,zero
   2a78c:	30821e36 	bltu	r6,r2,2b008 <___svfiprintf_internal_r+0x1180>
   2a790:	58c00007 	ldb	r3,0(r11)
   2a794:	840002a4 	muli	r16,r16,10
   2a798:	5cc00044 	addi	r19,r11,1
   2a79c:	9817883a 	mov	r11,r19
   2a7a0:	80a1883a 	add	r16,r16,r2
   2a7a4:	18bff404 	addi	r2,r3,-48
   2a7a8:	30bff92e 	bgeu	r6,r2,2a790 <_gp+0xffff0cc0>
   2a7ac:	803e060e 	bge	r16,zero,29fc8 <_gp+0xffff04f8>
   2a7b0:	043fffc4 	movi	r16,-1
   2a7b4:	003e0406 	br	29fc8 <_gp+0xffff04f8>
   2a7b8:	21003fcc 	andi	r4,r4,255
   2a7bc:	2002371e 	bne	r4,zero,2b09c <___svfiprintf_internal_r+0x1214>
   2a7c0:	94800414 	ori	r18,r18,16
   2a7c4:	9080080c 	andi	r2,r18,32
   2a7c8:	103ebb1e 	bne	r2,zero,2a2b8 <_gp+0xffff07e8>
   2a7cc:	9080040c 	andi	r2,r18,16
   2a7d0:	10013b26 	beq	r2,zero,2acc0 <___svfiprintf_internal_r+0xe38>
   2a7d4:	dac02317 	ldw	r11,140(sp)
   2a7d8:	d8001d85 	stb	zero,118(sp)
   2a7dc:	0013883a 	mov	r9,zero
   2a7e0:	58800104 	addi	r2,r11,4
   2a7e4:	5f000017 	ldw	fp,0(r11)
   2a7e8:	80013d16 	blt	r16,zero,2ace0 <___svfiprintf_internal_r+0xe58>
   2a7ec:	00ffdfc4 	movi	r3,-129
   2a7f0:	d8802315 	stw	r2,140(sp)
   2a7f4:	90e4703a 	and	r18,r18,r3
   2a7f8:	0015883a 	mov	r10,zero
   2a7fc:	e03eba26 	beq	fp,zero,2a2e8 <_gp+0xffff0818>
   2a800:	00800244 	movi	r2,9
   2a804:	173f7236 	bltu	r2,fp,2a5d0 <_gp+0xffff0b00>
   2a808:	dac02b17 	ldw	r11,172(sp)
   2a80c:	e7000c04 	addi	fp,fp,48
   2a810:	df0019c5 	stb	fp,103(sp)
   2a814:	dac02115 	stw	r11,132(sp)
   2a818:	dc4019c4 	addi	r17,sp,103
   2a81c:	003eb606 	br	2a2f8 <_gp+0xffff0828>
   2a820:	21003fcc 	andi	r4,r4,255
   2a824:	20021f1e 	bne	r4,zero,2b0a4 <___svfiprintf_internal_r+0x121c>
   2a828:	94800414 	ori	r18,r18,16
   2a82c:	9080080c 	andi	r2,r18,32
   2a830:	103ec51e 	bne	r2,zero,2a348 <_gp+0xffff0878>
   2a834:	9080040c 	andi	r2,r18,16
   2a838:	10016926 	beq	r2,zero,2ade0 <___svfiprintf_internal_r+0xf58>
   2a83c:	dac02317 	ldw	r11,140(sp)
   2a840:	d8001d85 	stb	zero,118(sp)
   2a844:	0013883a 	mov	r9,zero
   2a848:	58800104 	addi	r2,r11,4
   2a84c:	5f000017 	ldw	fp,0(r11)
   2a850:	80016b16 	blt	r16,zero,2ae00 <___svfiprintf_internal_r+0xf78>
   2a854:	00ffdfc4 	movi	r3,-129
   2a858:	d8802315 	stw	r2,140(sp)
   2a85c:	90e4703a 	and	r18,r18,r3
   2a860:	e03ec41e 	bne	fp,zero,2a374 <_gp+0xffff08a4>
   2a864:	0015883a 	mov	r10,zero
   2a868:	8001c226 	beq	r16,zero,2af74 <___svfiprintf_internal_r+0x10ec>
   2a86c:	0039883a 	mov	fp,zero
   2a870:	0013883a 	mov	r9,zero
   2a874:	003ec006 	br	2a378 <_gp+0xffff08a8>
   2a878:	d8c01c17 	ldw	r3,112(sp)
   2a87c:	d8801b17 	ldw	r2,108(sp)
   2a880:	d9001d87 	ldb	r4,118(sp)
   2a884:	20000b26 	beq	r4,zero,2a8b4 <___svfiprintf_internal_r+0xa2c>
   2a888:	d9001d84 	addi	r4,sp,118
   2a88c:	18c00044 	addi	r3,r3,1
   2a890:	10800044 	addi	r2,r2,1
   2a894:	41000015 	stw	r4,0(r8)
   2a898:	01000044 	movi	r4,1
   2a89c:	41000115 	stw	r4,4(r8)
   2a8a0:	d8c01c15 	stw	r3,112(sp)
   2a8a4:	d8801b15 	stw	r2,108(sp)
   2a8a8:	010001c4 	movi	r4,7
   2a8ac:	2080e116 	blt	r4,r2,2ac34 <___svfiprintf_internal_r+0xdac>
   2a8b0:	42000204 	addi	r8,r8,8
   2a8b4:	dac02217 	ldw	r11,136(sp)
   2a8b8:	58000b26 	beq	r11,zero,2a8e8 <___svfiprintf_internal_r+0xa60>
   2a8bc:	d9001d04 	addi	r4,sp,116
   2a8c0:	18c00084 	addi	r3,r3,2
   2a8c4:	10800044 	addi	r2,r2,1
   2a8c8:	41000015 	stw	r4,0(r8)
   2a8cc:	01000084 	movi	r4,2
   2a8d0:	41000115 	stw	r4,4(r8)
   2a8d4:	d8c01c15 	stw	r3,112(sp)
   2a8d8:	d8801b15 	stw	r2,108(sp)
   2a8dc:	010001c4 	movi	r4,7
   2a8e0:	2080dd16 	blt	r4,r2,2ac58 <___svfiprintf_internal_r+0xdd0>
   2a8e4:	42000204 	addi	r8,r8,8
   2a8e8:	dac02617 	ldw	r11,152(sp)
   2a8ec:	01002004 	movi	r4,128
   2a8f0:	59008426 	beq	r11,r4,2ab04 <___svfiprintf_internal_r+0xc7c>
   2a8f4:	dac02117 	ldw	r11,132(sp)
   2a8f8:	82e1c83a 	sub	r16,r16,r11
   2a8fc:	0400270e 	bge	zero,r16,2a99c <___svfiprintf_internal_r+0xb14>
   2a900:	01c00404 	movi	r7,16
   2a904:	3c016a0e 	bge	r7,r16,2aeb0 <___svfiprintf_internal_r+0x1028>
   2a908:	014000f4 	movhi	r5,3
   2a90c:	297ff604 	addi	r5,r5,-40
   2a910:	d9402215 	stw	r5,136(sp)
   2a914:	070001c4 	movi	fp,7
   2a918:	00000306 	br	2a928 <___svfiprintf_internal_r+0xaa0>
   2a91c:	843ffc04 	addi	r16,r16,-16
   2a920:	42000204 	addi	r8,r8,8
   2a924:	3c00130e 	bge	r7,r16,2a974 <___svfiprintf_internal_r+0xaec>
   2a928:	18c00404 	addi	r3,r3,16
   2a92c:	10800044 	addi	r2,r2,1
   2a930:	45000015 	stw	r20,0(r8)
   2a934:	41c00115 	stw	r7,4(r8)
   2a938:	d8c01c15 	stw	r3,112(sp)
   2a93c:	d8801b15 	stw	r2,108(sp)
   2a940:	e0bff60e 	bge	fp,r2,2a91c <_gp+0xffff0e4c>
   2a944:	d9801a04 	addi	r6,sp,104
   2a948:	b80b883a 	mov	r5,r23
   2a94c:	a809883a 	mov	r4,r21
   2a950:	d9c02c15 	stw	r7,176(sp)
   2a954:	0029cb80 	call	29cb8 <__ssprint_r>
   2a958:	d9c02c17 	ldw	r7,176(sp)
   2a95c:	1000581e 	bne	r2,zero,2aac0 <___svfiprintf_internal_r+0xc38>
   2a960:	843ffc04 	addi	r16,r16,-16
   2a964:	d8c01c17 	ldw	r3,112(sp)
   2a968:	d8801b17 	ldw	r2,108(sp)
   2a96c:	d811883a 	mov	r8,sp
   2a970:	3c3fed16 	blt	r7,r16,2a928 <_gp+0xffff0e58>
   2a974:	dac02217 	ldw	r11,136(sp)
   2a978:	1c07883a 	add	r3,r3,r16
   2a97c:	10800044 	addi	r2,r2,1
   2a980:	42c00015 	stw	r11,0(r8)
   2a984:	44000115 	stw	r16,4(r8)
   2a988:	d8c01c15 	stw	r3,112(sp)
   2a98c:	d8801b15 	stw	r2,108(sp)
   2a990:	010001c4 	movi	r4,7
   2a994:	20809e16 	blt	r4,r2,2ac10 <___svfiprintf_internal_r+0xd88>
   2a998:	42000204 	addi	r8,r8,8
   2a99c:	dac02117 	ldw	r11,132(sp)
   2a9a0:	10800044 	addi	r2,r2,1
   2a9a4:	44400015 	stw	r17,0(r8)
   2a9a8:	58c7883a 	add	r3,r11,r3
   2a9ac:	42c00115 	stw	r11,4(r8)
   2a9b0:	d8c01c15 	stw	r3,112(sp)
   2a9b4:	d8801b15 	stw	r2,108(sp)
   2a9b8:	010001c4 	movi	r4,7
   2a9bc:	20807f16 	blt	r4,r2,2abbc <___svfiprintf_internal_r+0xd34>
   2a9c0:	42000204 	addi	r8,r8,8
   2a9c4:	9480010c 	andi	r18,r18,4
   2a9c8:	90002926 	beq	r18,zero,2aa70 <___svfiprintf_internal_r+0xbe8>
   2a9cc:	dac02417 	ldw	r11,144(sp)
   2a9d0:	d8802017 	ldw	r2,128(sp)
   2a9d4:	58a1c83a 	sub	r16,r11,r2
   2a9d8:	0400250e 	bge	zero,r16,2aa70 <___svfiprintf_internal_r+0xbe8>
   2a9dc:	04400404 	movi	r17,16
   2a9e0:	d8801b17 	ldw	r2,108(sp)
   2a9e4:	8c017c0e 	bge	r17,r16,2afd8 <___svfiprintf_internal_r+0x1150>
   2a9e8:	014000f4 	movhi	r5,3
   2a9ec:	297ffa04 	addi	r5,r5,-24
   2a9f0:	d9402815 	stw	r5,160(sp)
   2a9f4:	048001c4 	movi	r18,7
   2a9f8:	00000306 	br	2aa08 <___svfiprintf_internal_r+0xb80>
   2a9fc:	843ffc04 	addi	r16,r16,-16
   2aa00:	42000204 	addi	r8,r8,8
   2aa04:	8c00110e 	bge	r17,r16,2aa4c <___svfiprintf_internal_r+0xbc4>
   2aa08:	18c00404 	addi	r3,r3,16
   2aa0c:	10800044 	addi	r2,r2,1
   2aa10:	45800015 	stw	r22,0(r8)
   2aa14:	44400115 	stw	r17,4(r8)
   2aa18:	d8c01c15 	stw	r3,112(sp)
   2aa1c:	d8801b15 	stw	r2,108(sp)
   2aa20:	90bff60e 	bge	r18,r2,2a9fc <_gp+0xffff0f2c>
   2aa24:	d9801a04 	addi	r6,sp,104
   2aa28:	b80b883a 	mov	r5,r23
   2aa2c:	a809883a 	mov	r4,r21
   2aa30:	0029cb80 	call	29cb8 <__ssprint_r>
   2aa34:	1000221e 	bne	r2,zero,2aac0 <___svfiprintf_internal_r+0xc38>
   2aa38:	843ffc04 	addi	r16,r16,-16
   2aa3c:	d8c01c17 	ldw	r3,112(sp)
   2aa40:	d8801b17 	ldw	r2,108(sp)
   2aa44:	d811883a 	mov	r8,sp
   2aa48:	8c3fef16 	blt	r17,r16,2aa08 <_gp+0xffff0f38>
   2aa4c:	dac02817 	ldw	r11,160(sp)
   2aa50:	1c07883a 	add	r3,r3,r16
   2aa54:	10800044 	addi	r2,r2,1
   2aa58:	42c00015 	stw	r11,0(r8)
   2aa5c:	44000115 	stw	r16,4(r8)
   2aa60:	d8c01c15 	stw	r3,112(sp)
   2aa64:	d8801b15 	stw	r2,108(sp)
   2aa68:	010001c4 	movi	r4,7
   2aa6c:	2080aa16 	blt	r4,r2,2ad18 <___svfiprintf_internal_r+0xe90>
   2aa70:	d8802417 	ldw	r2,144(sp)
   2aa74:	dac02017 	ldw	r11,128(sp)
   2aa78:	12c0010e 	bge	r2,r11,2aa80 <___svfiprintf_internal_r+0xbf8>
   2aa7c:	5805883a 	mov	r2,r11
   2aa80:	dac02517 	ldw	r11,148(sp)
   2aa84:	5897883a 	add	r11,r11,r2
   2aa88:	dac02515 	stw	r11,148(sp)
   2aa8c:	1800531e 	bne	r3,zero,2abdc <___svfiprintf_internal_r+0xd54>
   2aa90:	98800007 	ldb	r2,0(r19)
   2aa94:	d8001b15 	stw	zero,108(sp)
   2aa98:	d811883a 	mov	r8,sp
   2aa9c:	103d231e 	bne	r2,zero,29f2c <_gp+0xffff045c>
   2aaa0:	9823883a 	mov	r17,r19
   2aaa4:	003d3906 	br	29f8c <_gp+0xffff04bc>
   2aaa8:	d8801c17 	ldw	r2,112(sp)
   2aaac:	10000426 	beq	r2,zero,2aac0 <___svfiprintf_internal_r+0xc38>
   2aab0:	d9402717 	ldw	r5,156(sp)
   2aab4:	d9002a17 	ldw	r4,168(sp)
   2aab8:	d9801a04 	addi	r6,sp,104
   2aabc:	0029cb80 	call	29cb8 <__ssprint_r>
   2aac0:	dac02717 	ldw	r11,156(sp)
   2aac4:	d8802517 	ldw	r2,148(sp)
   2aac8:	58c0030b 	ldhu	r3,12(r11)
   2aacc:	18c0100c 	andi	r3,r3,64
   2aad0:	1801381e 	bne	r3,zero,2afb4 <___svfiprintf_internal_r+0x112c>
   2aad4:	dfc03717 	ldw	ra,220(sp)
   2aad8:	df003617 	ldw	fp,216(sp)
   2aadc:	ddc03517 	ldw	r23,212(sp)
   2aae0:	dd803417 	ldw	r22,208(sp)
   2aae4:	dd403317 	ldw	r21,204(sp)
   2aae8:	dd003217 	ldw	r20,200(sp)
   2aaec:	dcc03117 	ldw	r19,196(sp)
   2aaf0:	dc803017 	ldw	r18,192(sp)
   2aaf4:	dc402f17 	ldw	r17,188(sp)
   2aaf8:	dc002e17 	ldw	r16,184(sp)
   2aafc:	dec03804 	addi	sp,sp,224
   2ab00:	f800283a 	ret
   2ab04:	dac02417 	ldw	r11,144(sp)
   2ab08:	d9002017 	ldw	r4,128(sp)
   2ab0c:	5939c83a 	sub	fp,r11,r4
   2ab10:	073f780e 	bge	zero,fp,2a8f4 <_gp+0xffff0e24>
   2ab14:	02400404 	movi	r9,16
   2ab18:	4f01370e 	bge	r9,fp,2aff8 <___svfiprintf_internal_r+0x1170>
   2ab1c:	02c000f4 	movhi	r11,3
   2ab20:	5afff604 	addi	r11,r11,-40
   2ab24:	dac02215 	stw	r11,136(sp)
   2ab28:	028001c4 	movi	r10,7
   2ab2c:	00000306 	br	2ab3c <___svfiprintf_internal_r+0xcb4>
   2ab30:	e73ffc04 	addi	fp,fp,-16
   2ab34:	42000204 	addi	r8,r8,8
   2ab38:	4f00150e 	bge	r9,fp,2ab90 <___svfiprintf_internal_r+0xd08>
   2ab3c:	18c00404 	addi	r3,r3,16
   2ab40:	10800044 	addi	r2,r2,1
   2ab44:	45000015 	stw	r20,0(r8)
   2ab48:	42400115 	stw	r9,4(r8)
   2ab4c:	d8c01c15 	stw	r3,112(sp)
   2ab50:	d8801b15 	stw	r2,108(sp)
   2ab54:	50bff60e 	bge	r10,r2,2ab30 <_gp+0xffff1060>
   2ab58:	d9801a04 	addi	r6,sp,104
   2ab5c:	b80b883a 	mov	r5,r23
   2ab60:	a809883a 	mov	r4,r21
   2ab64:	da402c15 	stw	r9,176(sp)
   2ab68:	da802d15 	stw	r10,180(sp)
   2ab6c:	0029cb80 	call	29cb8 <__ssprint_r>
   2ab70:	da402c17 	ldw	r9,176(sp)
   2ab74:	da802d17 	ldw	r10,180(sp)
   2ab78:	103fd11e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2ab7c:	e73ffc04 	addi	fp,fp,-16
   2ab80:	d8c01c17 	ldw	r3,112(sp)
   2ab84:	d8801b17 	ldw	r2,108(sp)
   2ab88:	d811883a 	mov	r8,sp
   2ab8c:	4f3feb16 	blt	r9,fp,2ab3c <_gp+0xffff106c>
   2ab90:	dac02217 	ldw	r11,136(sp)
   2ab94:	1f07883a 	add	r3,r3,fp
   2ab98:	10800044 	addi	r2,r2,1
   2ab9c:	42c00015 	stw	r11,0(r8)
   2aba0:	47000115 	stw	fp,4(r8)
   2aba4:	d8c01c15 	stw	r3,112(sp)
   2aba8:	d8801b15 	stw	r2,108(sp)
   2abac:	010001c4 	movi	r4,7
   2abb0:	2080b616 	blt	r4,r2,2ae8c <___svfiprintf_internal_r+0x1004>
   2abb4:	42000204 	addi	r8,r8,8
   2abb8:	003f4e06 	br	2a8f4 <_gp+0xffff0e24>
   2abbc:	d9801a04 	addi	r6,sp,104
   2abc0:	b80b883a 	mov	r5,r23
   2abc4:	a809883a 	mov	r4,r21
   2abc8:	0029cb80 	call	29cb8 <__ssprint_r>
   2abcc:	103fbc1e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2abd0:	d8c01c17 	ldw	r3,112(sp)
   2abd4:	d811883a 	mov	r8,sp
   2abd8:	003f7a06 	br	2a9c4 <_gp+0xffff0ef4>
   2abdc:	d9801a04 	addi	r6,sp,104
   2abe0:	b80b883a 	mov	r5,r23
   2abe4:	a809883a 	mov	r4,r21
   2abe8:	0029cb80 	call	29cb8 <__ssprint_r>
   2abec:	103fa826 	beq	r2,zero,2aa90 <_gp+0xffff0fc0>
   2abf0:	003fb306 	br	2aac0 <_gp+0xffff0ff0>
   2abf4:	d9801a04 	addi	r6,sp,104
   2abf8:	b80b883a 	mov	r5,r23
   2abfc:	a809883a 	mov	r4,r21
   2ac00:	0029cb80 	call	29cb8 <__ssprint_r>
   2ac04:	103fae1e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2ac08:	d811883a 	mov	r8,sp
   2ac0c:	003cdc06 	br	29f80 <_gp+0xffff04b0>
   2ac10:	d9801a04 	addi	r6,sp,104
   2ac14:	b80b883a 	mov	r5,r23
   2ac18:	a809883a 	mov	r4,r21
   2ac1c:	0029cb80 	call	29cb8 <__ssprint_r>
   2ac20:	103fa71e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2ac24:	d8c01c17 	ldw	r3,112(sp)
   2ac28:	d8801b17 	ldw	r2,108(sp)
   2ac2c:	d811883a 	mov	r8,sp
   2ac30:	003f5a06 	br	2a99c <_gp+0xffff0ecc>
   2ac34:	d9801a04 	addi	r6,sp,104
   2ac38:	b80b883a 	mov	r5,r23
   2ac3c:	a809883a 	mov	r4,r21
   2ac40:	0029cb80 	call	29cb8 <__ssprint_r>
   2ac44:	103f9e1e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2ac48:	d8c01c17 	ldw	r3,112(sp)
   2ac4c:	d8801b17 	ldw	r2,108(sp)
   2ac50:	d811883a 	mov	r8,sp
   2ac54:	003f1706 	br	2a8b4 <_gp+0xffff0de4>
   2ac58:	d9801a04 	addi	r6,sp,104
   2ac5c:	b80b883a 	mov	r5,r23
   2ac60:	a809883a 	mov	r4,r21
   2ac64:	0029cb80 	call	29cb8 <__ssprint_r>
   2ac68:	103f951e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2ac6c:	d8c01c17 	ldw	r3,112(sp)
   2ac70:	d8801b17 	ldw	r2,108(sp)
   2ac74:	d811883a 	mov	r8,sp
   2ac78:	003f1b06 	br	2a8e8 <_gp+0xffff0e18>
   2ac7c:	d8001d85 	stb	zero,118(sp)
   2ac80:	80007b16 	blt	r16,zero,2ae70 <___svfiprintf_internal_r+0xfe8>
   2ac84:	00ffdfc4 	movi	r3,-129
   2ac88:	e244b03a 	or	r2,fp,r9
   2ac8c:	90e4703a 	and	r18,r18,r3
   2ac90:	103d7026 	beq	r2,zero,2a254 <_gp+0xffff0784>
   2ac94:	0015883a 	mov	r10,zero
   2ac98:	003d7206 	br	2a264 <_gp+0xffff0794>
   2ac9c:	d9801a04 	addi	r6,sp,104
   2aca0:	b80b883a 	mov	r5,r23
   2aca4:	a809883a 	mov	r4,r21
   2aca8:	0029cb80 	call	29cb8 <__ssprint_r>
   2acac:	103f841e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2acb0:	d8c01c17 	ldw	r3,112(sp)
   2acb4:	d8801b17 	ldw	r2,108(sp)
   2acb8:	d811883a 	mov	r8,sp
   2acbc:	003ef006 	br	2a880 <_gp+0xffff0db0>
   2acc0:	9080100c 	andi	r2,r18,64
   2acc4:	d8001d85 	stb	zero,118(sp)
   2acc8:	dac02317 	ldw	r11,140(sp)
   2accc:	10008126 	beq	r2,zero,2aed4 <___svfiprintf_internal_r+0x104c>
   2acd0:	58800104 	addi	r2,r11,4
   2acd4:	5f00000b 	ldhu	fp,0(r11)
   2acd8:	0013883a 	mov	r9,zero
   2acdc:	803ec30e 	bge	r16,zero,2a7ec <_gp+0xffff0d1c>
   2ace0:	d8802315 	stw	r2,140(sp)
   2ace4:	0015883a 	mov	r10,zero
   2ace8:	e244b03a 	or	r2,fp,r9
   2acec:	103e371e 	bne	r2,zero,2a5cc <_gp+0xffff0afc>
   2acf0:	00800044 	movi	r2,1
   2acf4:	10803fcc 	andi	r2,r2,255
   2acf8:	00c00044 	movi	r3,1
   2acfc:	10c06126 	beq	r2,r3,2ae84 <___svfiprintf_internal_r+0xffc>
   2ad00:	00c00084 	movi	r3,2
   2ad04:	10fd5526 	beq	r2,r3,2a25c <_gp+0xffff078c>
   2ad08:	003ed806 	br	2a86c <_gp+0xffff0d9c>
   2ad0c:	d8802315 	stw	r2,140(sp)
   2ad10:	98c00007 	ldb	r3,0(r19)
   2ad14:	003cab06 	br	29fc4 <_gp+0xffff04f4>
   2ad18:	d9801a04 	addi	r6,sp,104
   2ad1c:	b80b883a 	mov	r5,r23
   2ad20:	a809883a 	mov	r4,r21
   2ad24:	0029cb80 	call	29cb8 <__ssprint_r>
   2ad28:	103f651e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2ad2c:	d8c01c17 	ldw	r3,112(sp)
   2ad30:	003f4f06 	br	2aa70 <_gp+0xffff0fa0>
   2ad34:	008000f4 	movhi	r2,3
   2ad38:	10bf9504 	addi	r2,r2,-428
   2ad3c:	d8802915 	stw	r2,164(sp)
   2ad40:	003d4406 	br	2a254 <_gp+0xffff0784>
   2ad44:	dac02317 	ldw	r11,140(sp)
   2ad48:	58800017 	ldw	r2,0(r11)
   2ad4c:	dac02517 	ldw	r11,148(sp)
   2ad50:	5807d7fa 	srai	r3,r11,31
   2ad54:	dac02317 	ldw	r11,140(sp)
   2ad58:	10c00115 	stw	r3,4(r2)
   2ad5c:	5ac00104 	addi	r11,r11,4
   2ad60:	dac02315 	stw	r11,140(sp)
   2ad64:	dac02517 	ldw	r11,148(sp)
   2ad68:	12c00015 	stw	r11,0(r2)
   2ad6c:	003c6d06 	br	29f24 <_gp+0xffff0454>
   2ad70:	9080100c 	andi	r2,r18,64
   2ad74:	dac02317 	ldw	r11,140(sp)
   2ad78:	103e5326 	beq	r2,zero,2a6c8 <_gp+0xffff0bf8>
   2ad7c:	5f00000f 	ldh	fp,0(r11)
   2ad80:	5ac00104 	addi	r11,r11,4
   2ad84:	dac02315 	stw	r11,140(sp)
   2ad88:	e013d7fa 	srai	r9,fp,31
   2ad8c:	4805883a 	mov	r2,r9
   2ad90:	003e0706 	br	2a5b0 <_gp+0xffff0ae0>
   2ad94:	00800c04 	movi	r2,48
   2ad98:	d8801d05 	stb	r2,116(sp)
   2ad9c:	d8c01d45 	stb	r3,117(sp)
   2ada0:	d8001d85 	stb	zero,118(sp)
   2ada4:	90800094 	ori	r2,r18,2
   2ada8:	80008f16 	blt	r16,zero,2afe8 <___svfiprintf_internal_r+0x1160>
   2adac:	00bfdfc4 	movi	r2,-129
   2adb0:	90a4703a 	and	r18,r18,r2
   2adb4:	94800094 	ori	r18,r18,2
   2adb8:	0015883a 	mov	r10,zero
   2adbc:	003d2906 	br	2a264 <_gp+0xffff0794>
   2adc0:	98c00007 	ldb	r3,0(r19)
   2adc4:	003c7f06 	br	29fc4 <_gp+0xffff04f4>
   2adc8:	dac02317 	ldw	r11,140(sp)
   2adcc:	0013883a 	mov	r9,zero
   2add0:	5f000017 	ldw	fp,0(r11)
   2add4:	5ac00104 	addi	r11,r11,4
   2add8:	dac02315 	stw	r11,140(sp)
   2addc:	003d1506 	br	2a234 <_gp+0xffff0764>
   2ade0:	9080100c 	andi	r2,r18,64
   2ade4:	d8001d85 	stb	zero,118(sp)
   2ade8:	dac02317 	ldw	r11,140(sp)
   2adec:	10003426 	beq	r2,zero,2aec0 <___svfiprintf_internal_r+0x1038>
   2adf0:	58800104 	addi	r2,r11,4
   2adf4:	5f00000b 	ldhu	fp,0(r11)
   2adf8:	0013883a 	mov	r9,zero
   2adfc:	803e950e 	bge	r16,zero,2a854 <_gp+0xffff0d84>
   2ae00:	e246b03a 	or	r3,fp,r9
   2ae04:	d8802315 	stw	r2,140(sp)
   2ae08:	183d5a1e 	bne	r3,zero,2a374 <_gp+0xffff08a4>
   2ae0c:	0015883a 	mov	r10,zero
   2ae10:	0005883a 	mov	r2,zero
   2ae14:	003fb706 	br	2acf4 <_gp+0xffff1224>
   2ae18:	98c00043 	ldbu	r3,1(r19)
   2ae1c:	94800814 	ori	r18,r18,32
   2ae20:	9cc00044 	addi	r19,r19,1
   2ae24:	18c03fcc 	andi	r3,r3,255
   2ae28:	18c0201c 	xori	r3,r3,128
   2ae2c:	18ffe004 	addi	r3,r3,-128
   2ae30:	003c6406 	br	29fc4 <_gp+0xffff04f4>
   2ae34:	d8c02315 	stw	r3,140(sp)
   2ae38:	0015883a 	mov	r10,zero
   2ae3c:	003faa06 	br	2ace8 <_gp+0xffff1218>
   2ae40:	dac02317 	ldw	r11,140(sp)
   2ae44:	58800017 	ldw	r2,0(r11)
   2ae48:	5ac00104 	addi	r11,r11,4
   2ae4c:	dac02315 	stw	r11,140(sp)
   2ae50:	dac02517 	ldw	r11,148(sp)
   2ae54:	12c00015 	stw	r11,0(r2)
   2ae58:	003c3206 	br	29f24 <_gp+0xffff0454>
   2ae5c:	010000f4 	movhi	r4,3
   2ae60:	213f9504 	addi	r4,r4,-428
   2ae64:	d9002915 	stw	r4,164(sp)
   2ae68:	d8c02315 	stw	r3,140(sp)
   2ae6c:	1025883a 	mov	r18,r2
   2ae70:	e244b03a 	or	r2,fp,r9
   2ae74:	103f871e 	bne	r2,zero,2ac94 <_gp+0xffff11c4>
   2ae78:	0015883a 	mov	r10,zero
   2ae7c:	00800084 	movi	r2,2
   2ae80:	003f9c06 	br	2acf4 <_gp+0xffff1224>
   2ae84:	0039883a 	mov	fp,zero
   2ae88:	003e5f06 	br	2a808 <_gp+0xffff0d38>
   2ae8c:	d9801a04 	addi	r6,sp,104
   2ae90:	b80b883a 	mov	r5,r23
   2ae94:	a809883a 	mov	r4,r21
   2ae98:	0029cb80 	call	29cb8 <__ssprint_r>
   2ae9c:	103f081e 	bne	r2,zero,2aac0 <_gp+0xffff0ff0>
   2aea0:	d8c01c17 	ldw	r3,112(sp)
   2aea4:	d8801b17 	ldw	r2,108(sp)
   2aea8:	d811883a 	mov	r8,sp
   2aeac:	003e9106 	br	2a8f4 <_gp+0xffff0e24>
   2aeb0:	010000f4 	movhi	r4,3
   2aeb4:	213ff604 	addi	r4,r4,-40
   2aeb8:	d9002215 	stw	r4,136(sp)
   2aebc:	003ead06 	br	2a974 <_gp+0xffff0ea4>
   2aec0:	58800104 	addi	r2,r11,4
   2aec4:	5f000017 	ldw	fp,0(r11)
   2aec8:	0013883a 	mov	r9,zero
   2aecc:	803e610e 	bge	r16,zero,2a854 <_gp+0xffff0d84>
   2aed0:	003fcb06 	br	2ae00 <_gp+0xffff1330>
   2aed4:	58800104 	addi	r2,r11,4
   2aed8:	5f000017 	ldw	fp,0(r11)
   2aedc:	0013883a 	mov	r9,zero
   2aee0:	803e420e 	bge	r16,zero,2a7ec <_gp+0xffff0d1c>
   2aee4:	003f7e06 	br	2ace0 <_gp+0xffff1210>
   2aee8:	5f000017 	ldw	fp,0(r11)
   2aeec:	5ac00104 	addi	r11,r11,4
   2aef0:	0013883a 	mov	r9,zero
   2aef4:	dac02315 	stw	r11,140(sp)
   2aef8:	003cce06 	br	2a234 <_gp+0xffff0764>
   2aefc:	8809883a 	mov	r4,r17
   2af00:	da002c15 	stw	r8,176(sp)
   2af04:	00232040 	call	23204 <strlen>
   2af08:	d8802115 	stw	r2,132(sp)
   2af0c:	da801d83 	ldbu	r10,118(sp)
   2af10:	df002315 	stw	fp,140(sp)
   2af14:	0021883a 	mov	r16,zero
   2af18:	da002c17 	ldw	r8,176(sp)
   2af1c:	003cf606 	br	2a2f8 <_gp+0xffff0828>
   2af20:	00800184 	movi	r2,6
   2af24:	1400012e 	bgeu	r2,r16,2af2c <___svfiprintf_internal_r+0x10a4>
   2af28:	1021883a 	mov	r16,r2
   2af2c:	dc002115 	stw	r16,132(sp)
   2af30:	8005883a 	mov	r2,r16
   2af34:	80003c16 	blt	r16,zero,2b028 <___svfiprintf_internal_r+0x11a0>
   2af38:	044000f4 	movhi	r17,3
   2af3c:	d8802015 	stw	r2,128(sp)
   2af40:	df002315 	stw	fp,140(sp)
   2af44:	8c7f9a04 	addi	r17,r17,-408
   2af48:	003d2e06 	br	2a404 <_gp+0xffff0934>
   2af4c:	04001004 	movi	r16,64
   2af50:	800b883a 	mov	r5,r16
   2af54:	00277bc0 	call	277bc <_malloc_r>
   2af58:	dac02717 	ldw	r11,156(sp)
   2af5c:	58800015 	stw	r2,0(r11)
   2af60:	58800415 	stw	r2,16(r11)
   2af64:	10004826 	beq	r2,zero,2b088 <___svfiprintf_internal_r+0x1200>
   2af68:	dac02717 	ldw	r11,156(sp)
   2af6c:	5c000515 	stw	r16,20(r11)
   2af70:	003bd906 	br	29ed8 <_gp+0xffff0408>
   2af74:	9080004c 	andi	r2,r18,1
   2af78:	0015883a 	mov	r10,zero
   2af7c:	10000626 	beq	r2,zero,2af98 <___svfiprintf_internal_r+0x1110>
   2af80:	dac02b17 	ldw	r11,172(sp)
   2af84:	00800c04 	movi	r2,48
   2af88:	d88019c5 	stb	r2,103(sp)
   2af8c:	dac02115 	stw	r11,132(sp)
   2af90:	dc4019c4 	addi	r17,sp,103
   2af94:	003cd806 	br	2a2f8 <_gp+0xffff0828>
   2af98:	d8002115 	stw	zero,132(sp)
   2af9c:	dc401a04 	addi	r17,sp,104
   2afa0:	003cd506 	br	2a2f8 <_gp+0xffff0828>
   2afa4:	010000f4 	movhi	r4,3
   2afa8:	213ffa04 	addi	r4,r4,-24
   2afac:	d9002815 	stw	r4,160(sp)
   2afb0:	003d4306 	br	2a4c0 <_gp+0xffff09f0>
   2afb4:	00bfffc4 	movi	r2,-1
   2afb8:	003ec606 	br	2aad4 <_gp+0xffff1004>
   2afbc:	00800044 	movi	r2,1
   2afc0:	10803fcc 	andi	r2,r2,255
   2afc4:	00c00044 	movi	r3,1
   2afc8:	10fd8026 	beq	r2,r3,2a5cc <_gp+0xffff0afc>
   2afcc:	00c00084 	movi	r3,2
   2afd0:	10fca426 	beq	r2,r3,2a264 <_gp+0xffff0794>
   2afd4:	003ce806 	br	2a378 <_gp+0xffff08a8>
   2afd8:	010000f4 	movhi	r4,3
   2afdc:	213ffa04 	addi	r4,r4,-24
   2afe0:	d9002815 	stw	r4,160(sp)
   2afe4:	003e9906 	br	2aa4c <_gp+0xffff0f7c>
   2afe8:	1025883a 	mov	r18,r2
   2afec:	0015883a 	mov	r10,zero
   2aff0:	00800084 	movi	r2,2
   2aff4:	003ff206 	br	2afc0 <_gp+0xffff14f0>
   2aff8:	014000f4 	movhi	r5,3
   2affc:	297ff604 	addi	r5,r5,-40
   2b000:	d9402215 	stw	r5,136(sp)
   2b004:	003ee206 	br	2ab90 <_gp+0xffff10c0>
   2b008:	5827883a 	mov	r19,r11
   2b00c:	0021883a 	mov	r16,zero
   2b010:	003bed06 	br	29fc8 <_gp+0xffff04f8>
   2b014:	dc002115 	stw	r16,132(sp)
   2b018:	da801d83 	ldbu	r10,118(sp)
   2b01c:	df002315 	stw	fp,140(sp)
   2b020:	0021883a 	mov	r16,zero
   2b024:	003cb406 	br	2a2f8 <_gp+0xffff0828>
   2b028:	0005883a 	mov	r2,zero
   2b02c:	003fc206 	br	2af38 <_gp+0xffff1468>
   2b030:	d8802317 	ldw	r2,140(sp)
   2b034:	98c00043 	ldbu	r3,1(r19)
   2b038:	5827883a 	mov	r19,r11
   2b03c:	14000017 	ldw	r16,0(r2)
   2b040:	10800104 	addi	r2,r2,4
   2b044:	d8802315 	stw	r2,140(sp)
   2b048:	803f760e 	bge	r16,zero,2ae24 <_gp+0xffff1354>
   2b04c:	18c03fcc 	andi	r3,r3,255
   2b050:	18c0201c 	xori	r3,r3,128
   2b054:	043fffc4 	movi	r16,-1
   2b058:	18ffe004 	addi	r3,r3,-128
   2b05c:	003bd906 	br	29fc4 <_gp+0xffff04f4>
   2b060:	d9c01d85 	stb	r7,118(sp)
   2b064:	003cb606 	br	2a340 <_gp+0xffff0870>
   2b068:	d9c01d85 	stb	r7,118(sp)
   2b06c:	003d2106 	br	2a4f4 <_gp+0xffff0a24>
   2b070:	d9c01d85 	stb	r7,118(sp)
   2b074:	003d8e06 	br	2a6b0 <_gp+0xffff0be0>
   2b078:	d9c01d85 	stb	r7,118(sp)
   2b07c:	003db306 	br	2a74c <_gp+0xffff0c7c>
   2b080:	d9c01d85 	stb	r7,118(sp)
   2b084:	003c8a06 	br	2a2b0 <_gp+0xffff07e0>
   2b088:	dac02a17 	ldw	r11,168(sp)
   2b08c:	00800304 	movi	r2,12
   2b090:	58800015 	stw	r2,0(r11)
   2b094:	00bfffc4 	movi	r2,-1
   2b098:	003e8e06 	br	2aad4 <_gp+0xffff1004>
   2b09c:	d9c01d85 	stb	r7,118(sp)
   2b0a0:	003dc706 	br	2a7c0 <_gp+0xffff0cf0>
   2b0a4:	d9c01d85 	stb	r7,118(sp)
   2b0a8:	003ddf06 	br	2a828 <_gp+0xffff0d58>
   2b0ac:	d9c01d85 	stb	r7,118(sp)
   2b0b0:	003d3706 	br	2a590 <_gp+0xffff0ac0>
   2b0b4:	d9c01d85 	stb	r7,118(sp)
   2b0b8:	003c5406 	br	2a20c <_gp+0xffff073c>
   2b0bc:	d9c01d85 	stb	r7,118(sp)
   2b0c0:	003d1d06 	br	2a538 <_gp+0xffff0a68>

0002b0c4 <_write_r>:
   2b0c4:	defffd04 	addi	sp,sp,-12
   2b0c8:	2805883a 	mov	r2,r5
   2b0cc:	dc000015 	stw	r16,0(sp)
   2b0d0:	040000f4 	movhi	r16,3
   2b0d4:	dc400115 	stw	r17,4(sp)
   2b0d8:	300b883a 	mov	r5,r6
   2b0dc:	840d8704 	addi	r16,r16,13852
   2b0e0:	2023883a 	mov	r17,r4
   2b0e4:	380d883a 	mov	r6,r7
   2b0e8:	1009883a 	mov	r4,r2
   2b0ec:	dfc00215 	stw	ra,8(sp)
   2b0f0:	80000015 	stw	zero,0(r16)
   2b0f4:	002de8c0 	call	2de8c <write>
   2b0f8:	00ffffc4 	movi	r3,-1
   2b0fc:	10c00526 	beq	r2,r3,2b114 <_write_r+0x50>
   2b100:	dfc00217 	ldw	ra,8(sp)
   2b104:	dc400117 	ldw	r17,4(sp)
   2b108:	dc000017 	ldw	r16,0(sp)
   2b10c:	dec00304 	addi	sp,sp,12
   2b110:	f800283a 	ret
   2b114:	80c00017 	ldw	r3,0(r16)
   2b118:	183ff926 	beq	r3,zero,2b100 <_gp+0xffff1630>
   2b11c:	88c00015 	stw	r3,0(r17)
   2b120:	003ff706 	br	2b100 <_gp+0xffff1630>

0002b124 <__swsetup_r>:
   2b124:	008000f4 	movhi	r2,3
   2b128:	defffd04 	addi	sp,sp,-12
   2b12c:	1086b704 	addi	r2,r2,6876
   2b130:	dc400115 	stw	r17,4(sp)
   2b134:	2023883a 	mov	r17,r4
   2b138:	11000017 	ldw	r4,0(r2)
   2b13c:	dc000015 	stw	r16,0(sp)
   2b140:	dfc00215 	stw	ra,8(sp)
   2b144:	2821883a 	mov	r16,r5
   2b148:	20000226 	beq	r4,zero,2b154 <__swsetup_r+0x30>
   2b14c:	20800e17 	ldw	r2,56(r4)
   2b150:	10003126 	beq	r2,zero,2b218 <__swsetup_r+0xf4>
   2b154:	8080030b 	ldhu	r2,12(r16)
   2b158:	10c0020c 	andi	r3,r2,8
   2b15c:	1009883a 	mov	r4,r2
   2b160:	18000f26 	beq	r3,zero,2b1a0 <__swsetup_r+0x7c>
   2b164:	80c00417 	ldw	r3,16(r16)
   2b168:	18001526 	beq	r3,zero,2b1c0 <__swsetup_r+0x9c>
   2b16c:	1100004c 	andi	r4,r2,1
   2b170:	20001c1e 	bne	r4,zero,2b1e4 <__swsetup_r+0xc0>
   2b174:	1080008c 	andi	r2,r2,2
   2b178:	1000291e 	bne	r2,zero,2b220 <__swsetup_r+0xfc>
   2b17c:	80800517 	ldw	r2,20(r16)
   2b180:	80800215 	stw	r2,8(r16)
   2b184:	18001c26 	beq	r3,zero,2b1f8 <__swsetup_r+0xd4>
   2b188:	0005883a 	mov	r2,zero
   2b18c:	dfc00217 	ldw	ra,8(sp)
   2b190:	dc400117 	ldw	r17,4(sp)
   2b194:	dc000017 	ldw	r16,0(sp)
   2b198:	dec00304 	addi	sp,sp,12
   2b19c:	f800283a 	ret
   2b1a0:	2080040c 	andi	r2,r4,16
   2b1a4:	10002e26 	beq	r2,zero,2b260 <__swsetup_r+0x13c>
   2b1a8:	2080010c 	andi	r2,r4,4
   2b1ac:	10001e1e 	bne	r2,zero,2b228 <__swsetup_r+0x104>
   2b1b0:	80c00417 	ldw	r3,16(r16)
   2b1b4:	20800214 	ori	r2,r4,8
   2b1b8:	8080030d 	sth	r2,12(r16)
   2b1bc:	183feb1e 	bne	r3,zero,2b16c <_gp+0xffff169c>
   2b1c0:	1100a00c 	andi	r4,r2,640
   2b1c4:	01408004 	movi	r5,512
   2b1c8:	217fe826 	beq	r4,r5,2b16c <_gp+0xffff169c>
   2b1cc:	800b883a 	mov	r5,r16
   2b1d0:	8809883a 	mov	r4,r17
   2b1d4:	002bbd00 	call	2bbd0 <__smakebuf_r>
   2b1d8:	8080030b 	ldhu	r2,12(r16)
   2b1dc:	80c00417 	ldw	r3,16(r16)
   2b1e0:	003fe206 	br	2b16c <_gp+0xffff169c>
   2b1e4:	80800517 	ldw	r2,20(r16)
   2b1e8:	80000215 	stw	zero,8(r16)
   2b1ec:	0085c83a 	sub	r2,zero,r2
   2b1f0:	80800615 	stw	r2,24(r16)
   2b1f4:	183fe41e 	bne	r3,zero,2b188 <_gp+0xffff16b8>
   2b1f8:	80c0030b 	ldhu	r3,12(r16)
   2b1fc:	0005883a 	mov	r2,zero
   2b200:	1900200c 	andi	r4,r3,128
   2b204:	203fe126 	beq	r4,zero,2b18c <_gp+0xffff16bc>
   2b208:	18c01014 	ori	r3,r3,64
   2b20c:	80c0030d 	sth	r3,12(r16)
   2b210:	00bfffc4 	movi	r2,-1
   2b214:	003fdd06 	br	2b18c <_gp+0xffff16bc>
   2b218:	002704c0 	call	2704c <__sinit>
   2b21c:	003fcd06 	br	2b154 <_gp+0xffff1684>
   2b220:	0005883a 	mov	r2,zero
   2b224:	003fd606 	br	2b180 <_gp+0xffff16b0>
   2b228:	81400c17 	ldw	r5,48(r16)
   2b22c:	28000626 	beq	r5,zero,2b248 <__swsetup_r+0x124>
   2b230:	80801004 	addi	r2,r16,64
   2b234:	28800326 	beq	r5,r2,2b244 <__swsetup_r+0x120>
   2b238:	8809883a 	mov	r4,r17
   2b23c:	002b8600 	call	2b860 <_free_r>
   2b240:	8100030b 	ldhu	r4,12(r16)
   2b244:	80000c15 	stw	zero,48(r16)
   2b248:	80c00417 	ldw	r3,16(r16)
   2b24c:	00bff6c4 	movi	r2,-37
   2b250:	1108703a 	and	r4,r2,r4
   2b254:	80000115 	stw	zero,4(r16)
   2b258:	80c00015 	stw	r3,0(r16)
   2b25c:	003fd506 	br	2b1b4 <_gp+0xffff16e4>
   2b260:	00800244 	movi	r2,9
   2b264:	88800015 	stw	r2,0(r17)
   2b268:	20801014 	ori	r2,r4,64
   2b26c:	8080030d 	sth	r2,12(r16)
   2b270:	00bfffc4 	movi	r2,-1
   2b274:	003fc506 	br	2b18c <_gp+0xffff16bc>

0002b278 <_close_r>:
   2b278:	defffd04 	addi	sp,sp,-12
   2b27c:	dc000015 	stw	r16,0(sp)
   2b280:	040000f4 	movhi	r16,3
   2b284:	dc400115 	stw	r17,4(sp)
   2b288:	840d8704 	addi	r16,r16,13852
   2b28c:	2023883a 	mov	r17,r4
   2b290:	2809883a 	mov	r4,r5
   2b294:	dfc00215 	stw	ra,8(sp)
   2b298:	80000015 	stw	zero,0(r16)
   2b29c:	002d67c0 	call	2d67c <close>
   2b2a0:	00ffffc4 	movi	r3,-1
   2b2a4:	10c00526 	beq	r2,r3,2b2bc <_close_r+0x44>
   2b2a8:	dfc00217 	ldw	ra,8(sp)
   2b2ac:	dc400117 	ldw	r17,4(sp)
   2b2b0:	dc000017 	ldw	r16,0(sp)
   2b2b4:	dec00304 	addi	sp,sp,12
   2b2b8:	f800283a 	ret
   2b2bc:	80c00017 	ldw	r3,0(r16)
   2b2c0:	183ff926 	beq	r3,zero,2b2a8 <_gp+0xffff17d8>
   2b2c4:	88c00015 	stw	r3,0(r17)
   2b2c8:	003ff706 	br	2b2a8 <_gp+0xffff17d8>

0002b2cc <_calloc_r>:
   2b2cc:	298b383a 	mul	r5,r5,r6
   2b2d0:	defffe04 	addi	sp,sp,-8
   2b2d4:	dfc00115 	stw	ra,4(sp)
   2b2d8:	dc000015 	stw	r16,0(sp)
   2b2dc:	00277bc0 	call	277bc <_malloc_r>
   2b2e0:	10002926 	beq	r2,zero,2b388 <_calloc_r+0xbc>
   2b2e4:	11bfff17 	ldw	r6,-4(r2)
   2b2e8:	1021883a 	mov	r16,r2
   2b2ec:	00bfff04 	movi	r2,-4
   2b2f0:	308c703a 	and	r6,r6,r2
   2b2f4:	00c00904 	movi	r3,36
   2b2f8:	308d883a 	add	r6,r6,r2
   2b2fc:	19801636 	bltu	r3,r6,2b358 <_calloc_r+0x8c>
   2b300:	008004c4 	movi	r2,19
   2b304:	11800b2e 	bgeu	r2,r6,2b334 <_calloc_r+0x68>
   2b308:	80000015 	stw	zero,0(r16)
   2b30c:	80000115 	stw	zero,4(r16)
   2b310:	008006c4 	movi	r2,27
   2b314:	11801a2e 	bgeu	r2,r6,2b380 <_calloc_r+0xb4>
   2b318:	80000215 	stw	zero,8(r16)
   2b31c:	80000315 	stw	zero,12(r16)
   2b320:	30c0151e 	bne	r6,r3,2b378 <_calloc_r+0xac>
   2b324:	80000415 	stw	zero,16(r16)
   2b328:	80800604 	addi	r2,r16,24
   2b32c:	80000515 	stw	zero,20(r16)
   2b330:	00000106 	br	2b338 <_calloc_r+0x6c>
   2b334:	8005883a 	mov	r2,r16
   2b338:	10000015 	stw	zero,0(r2)
   2b33c:	10000115 	stw	zero,4(r2)
   2b340:	10000215 	stw	zero,8(r2)
   2b344:	8005883a 	mov	r2,r16
   2b348:	dfc00117 	ldw	ra,4(sp)
   2b34c:	dc000017 	ldw	r16,0(sp)
   2b350:	dec00204 	addi	sp,sp,8
   2b354:	f800283a 	ret
   2b358:	000b883a 	mov	r5,zero
   2b35c:	8009883a 	mov	r4,r16
   2b360:	00283500 	call	28350 <memset>
   2b364:	8005883a 	mov	r2,r16
   2b368:	dfc00117 	ldw	ra,4(sp)
   2b36c:	dc000017 	ldw	r16,0(sp)
   2b370:	dec00204 	addi	sp,sp,8
   2b374:	f800283a 	ret
   2b378:	80800404 	addi	r2,r16,16
   2b37c:	003fee06 	br	2b338 <_gp+0xffff1868>
   2b380:	80800204 	addi	r2,r16,8
   2b384:	003fec06 	br	2b338 <_gp+0xffff1868>
   2b388:	0005883a 	mov	r2,zero
   2b38c:	003fee06 	br	2b348 <_gp+0xffff1878>

0002b390 <_fclose_r>:
   2b390:	28003926 	beq	r5,zero,2b478 <_fclose_r+0xe8>
   2b394:	defffc04 	addi	sp,sp,-16
   2b398:	dc400115 	stw	r17,4(sp)
   2b39c:	dc000015 	stw	r16,0(sp)
   2b3a0:	dfc00315 	stw	ra,12(sp)
   2b3a4:	dc800215 	stw	r18,8(sp)
   2b3a8:	2023883a 	mov	r17,r4
   2b3ac:	2821883a 	mov	r16,r5
   2b3b0:	20000226 	beq	r4,zero,2b3bc <_fclose_r+0x2c>
   2b3b4:	20800e17 	ldw	r2,56(r4)
   2b3b8:	10002726 	beq	r2,zero,2b458 <_fclose_r+0xc8>
   2b3bc:	8080030f 	ldh	r2,12(r16)
   2b3c0:	1000071e 	bne	r2,zero,2b3e0 <_fclose_r+0x50>
   2b3c4:	0005883a 	mov	r2,zero
   2b3c8:	dfc00317 	ldw	ra,12(sp)
   2b3cc:	dc800217 	ldw	r18,8(sp)
   2b3d0:	dc400117 	ldw	r17,4(sp)
   2b3d4:	dc000017 	ldw	r16,0(sp)
   2b3d8:	dec00404 	addi	sp,sp,16
   2b3dc:	f800283a 	ret
   2b3e0:	800b883a 	mov	r5,r16
   2b3e4:	8809883a 	mov	r4,r17
   2b3e8:	002b4940 	call	2b494 <__sflush_r>
   2b3ec:	1025883a 	mov	r18,r2
   2b3f0:	80800b17 	ldw	r2,44(r16)
   2b3f4:	10000426 	beq	r2,zero,2b408 <_fclose_r+0x78>
   2b3f8:	81400717 	ldw	r5,28(r16)
   2b3fc:	8809883a 	mov	r4,r17
   2b400:	103ee83a 	callr	r2
   2b404:	10001616 	blt	r2,zero,2b460 <_fclose_r+0xd0>
   2b408:	8080030b 	ldhu	r2,12(r16)
   2b40c:	1080200c 	andi	r2,r2,128
   2b410:	1000151e 	bne	r2,zero,2b468 <_fclose_r+0xd8>
   2b414:	81400c17 	ldw	r5,48(r16)
   2b418:	28000526 	beq	r5,zero,2b430 <_fclose_r+0xa0>
   2b41c:	80801004 	addi	r2,r16,64
   2b420:	28800226 	beq	r5,r2,2b42c <_fclose_r+0x9c>
   2b424:	8809883a 	mov	r4,r17
   2b428:	002b8600 	call	2b860 <_free_r>
   2b42c:	80000c15 	stw	zero,48(r16)
   2b430:	81401117 	ldw	r5,68(r16)
   2b434:	28000326 	beq	r5,zero,2b444 <_fclose_r+0xb4>
   2b438:	8809883a 	mov	r4,r17
   2b43c:	002b8600 	call	2b860 <_free_r>
   2b440:	80001115 	stw	zero,68(r16)
   2b444:	002705c0 	call	2705c <__sfp_lock_acquire>
   2b448:	8000030d 	sth	zero,12(r16)
   2b44c:	00270600 	call	27060 <__sfp_lock_release>
   2b450:	9005883a 	mov	r2,r18
   2b454:	003fdc06 	br	2b3c8 <_gp+0xffff18f8>
   2b458:	002704c0 	call	2704c <__sinit>
   2b45c:	003fd706 	br	2b3bc <_gp+0xffff18ec>
   2b460:	04bfffc4 	movi	r18,-1
   2b464:	003fe806 	br	2b408 <_gp+0xffff1938>
   2b468:	81400417 	ldw	r5,16(r16)
   2b46c:	8809883a 	mov	r4,r17
   2b470:	002b8600 	call	2b860 <_free_r>
   2b474:	003fe706 	br	2b414 <_gp+0xffff1944>
   2b478:	0005883a 	mov	r2,zero
   2b47c:	f800283a 	ret

0002b480 <fclose>:
   2b480:	008000f4 	movhi	r2,3
   2b484:	1086b704 	addi	r2,r2,6876
   2b488:	200b883a 	mov	r5,r4
   2b48c:	11000017 	ldw	r4,0(r2)
   2b490:	002b3901 	jmpi	2b390 <_fclose_r>

0002b494 <__sflush_r>:
   2b494:	2880030b 	ldhu	r2,12(r5)
   2b498:	defffb04 	addi	sp,sp,-20
   2b49c:	dcc00315 	stw	r19,12(sp)
   2b4a0:	dc400115 	stw	r17,4(sp)
   2b4a4:	dfc00415 	stw	ra,16(sp)
   2b4a8:	dc800215 	stw	r18,8(sp)
   2b4ac:	dc000015 	stw	r16,0(sp)
   2b4b0:	10c0020c 	andi	r3,r2,8
   2b4b4:	2823883a 	mov	r17,r5
   2b4b8:	2027883a 	mov	r19,r4
   2b4bc:	1800311e 	bne	r3,zero,2b584 <__sflush_r+0xf0>
   2b4c0:	28c00117 	ldw	r3,4(r5)
   2b4c4:	10820014 	ori	r2,r2,2048
   2b4c8:	2880030d 	sth	r2,12(r5)
   2b4cc:	00c04b0e 	bge	zero,r3,2b5fc <__sflush_r+0x168>
   2b4d0:	8a000a17 	ldw	r8,40(r17)
   2b4d4:	40002326 	beq	r8,zero,2b564 <__sflush_r+0xd0>
   2b4d8:	9c000017 	ldw	r16,0(r19)
   2b4dc:	10c4000c 	andi	r3,r2,4096
   2b4e0:	98000015 	stw	zero,0(r19)
   2b4e4:	18004826 	beq	r3,zero,2b608 <__sflush_r+0x174>
   2b4e8:	89801417 	ldw	r6,80(r17)
   2b4ec:	10c0010c 	andi	r3,r2,4
   2b4f0:	18000626 	beq	r3,zero,2b50c <__sflush_r+0x78>
   2b4f4:	88c00117 	ldw	r3,4(r17)
   2b4f8:	88800c17 	ldw	r2,48(r17)
   2b4fc:	30cdc83a 	sub	r6,r6,r3
   2b500:	10000226 	beq	r2,zero,2b50c <__sflush_r+0x78>
   2b504:	88800f17 	ldw	r2,60(r17)
   2b508:	308dc83a 	sub	r6,r6,r2
   2b50c:	89400717 	ldw	r5,28(r17)
   2b510:	000f883a 	mov	r7,zero
   2b514:	9809883a 	mov	r4,r19
   2b518:	403ee83a 	callr	r8
   2b51c:	00ffffc4 	movi	r3,-1
   2b520:	10c04426 	beq	r2,r3,2b634 <__sflush_r+0x1a0>
   2b524:	88c0030b 	ldhu	r3,12(r17)
   2b528:	89000417 	ldw	r4,16(r17)
   2b52c:	88000115 	stw	zero,4(r17)
   2b530:	197dffcc 	andi	r5,r3,63487
   2b534:	8940030d 	sth	r5,12(r17)
   2b538:	89000015 	stw	r4,0(r17)
   2b53c:	18c4000c 	andi	r3,r3,4096
   2b540:	18002c1e 	bne	r3,zero,2b5f4 <__sflush_r+0x160>
   2b544:	89400c17 	ldw	r5,48(r17)
   2b548:	9c000015 	stw	r16,0(r19)
   2b54c:	28000526 	beq	r5,zero,2b564 <__sflush_r+0xd0>
   2b550:	88801004 	addi	r2,r17,64
   2b554:	28800226 	beq	r5,r2,2b560 <__sflush_r+0xcc>
   2b558:	9809883a 	mov	r4,r19
   2b55c:	002b8600 	call	2b860 <_free_r>
   2b560:	88000c15 	stw	zero,48(r17)
   2b564:	0005883a 	mov	r2,zero
   2b568:	dfc00417 	ldw	ra,16(sp)
   2b56c:	dcc00317 	ldw	r19,12(sp)
   2b570:	dc800217 	ldw	r18,8(sp)
   2b574:	dc400117 	ldw	r17,4(sp)
   2b578:	dc000017 	ldw	r16,0(sp)
   2b57c:	dec00504 	addi	sp,sp,20
   2b580:	f800283a 	ret
   2b584:	2c800417 	ldw	r18,16(r5)
   2b588:	903ff626 	beq	r18,zero,2b564 <_gp+0xffff1a94>
   2b58c:	2c000017 	ldw	r16,0(r5)
   2b590:	108000cc 	andi	r2,r2,3
   2b594:	2c800015 	stw	r18,0(r5)
   2b598:	84a1c83a 	sub	r16,r16,r18
   2b59c:	1000131e 	bne	r2,zero,2b5ec <__sflush_r+0x158>
   2b5a0:	28800517 	ldw	r2,20(r5)
   2b5a4:	88800215 	stw	r2,8(r17)
   2b5a8:	04000316 	blt	zero,r16,2b5b8 <__sflush_r+0x124>
   2b5ac:	003fed06 	br	2b564 <_gp+0xffff1a94>
   2b5b0:	90a5883a 	add	r18,r18,r2
   2b5b4:	043feb0e 	bge	zero,r16,2b564 <_gp+0xffff1a94>
   2b5b8:	88800917 	ldw	r2,36(r17)
   2b5bc:	89400717 	ldw	r5,28(r17)
   2b5c0:	800f883a 	mov	r7,r16
   2b5c4:	900d883a 	mov	r6,r18
   2b5c8:	9809883a 	mov	r4,r19
   2b5cc:	103ee83a 	callr	r2
   2b5d0:	80a1c83a 	sub	r16,r16,r2
   2b5d4:	00bff616 	blt	zero,r2,2b5b0 <_gp+0xffff1ae0>
   2b5d8:	88c0030b 	ldhu	r3,12(r17)
   2b5dc:	00bfffc4 	movi	r2,-1
   2b5e0:	18c01014 	ori	r3,r3,64
   2b5e4:	88c0030d 	sth	r3,12(r17)
   2b5e8:	003fdf06 	br	2b568 <_gp+0xffff1a98>
   2b5ec:	0005883a 	mov	r2,zero
   2b5f0:	003fec06 	br	2b5a4 <_gp+0xffff1ad4>
   2b5f4:	88801415 	stw	r2,80(r17)
   2b5f8:	003fd206 	br	2b544 <_gp+0xffff1a74>
   2b5fc:	28c00f17 	ldw	r3,60(r5)
   2b600:	00ffb316 	blt	zero,r3,2b4d0 <_gp+0xffff1a00>
   2b604:	003fd706 	br	2b564 <_gp+0xffff1a94>
   2b608:	89400717 	ldw	r5,28(r17)
   2b60c:	000d883a 	mov	r6,zero
   2b610:	01c00044 	movi	r7,1
   2b614:	9809883a 	mov	r4,r19
   2b618:	403ee83a 	callr	r8
   2b61c:	100d883a 	mov	r6,r2
   2b620:	00bfffc4 	movi	r2,-1
   2b624:	30801426 	beq	r6,r2,2b678 <__sflush_r+0x1e4>
   2b628:	8880030b 	ldhu	r2,12(r17)
   2b62c:	8a000a17 	ldw	r8,40(r17)
   2b630:	003fae06 	br	2b4ec <_gp+0xffff1a1c>
   2b634:	98c00017 	ldw	r3,0(r19)
   2b638:	183fba26 	beq	r3,zero,2b524 <_gp+0xffff1a54>
   2b63c:	01000744 	movi	r4,29
   2b640:	19000626 	beq	r3,r4,2b65c <__sflush_r+0x1c8>
   2b644:	01000584 	movi	r4,22
   2b648:	19000426 	beq	r3,r4,2b65c <__sflush_r+0x1c8>
   2b64c:	88c0030b 	ldhu	r3,12(r17)
   2b650:	18c01014 	ori	r3,r3,64
   2b654:	88c0030d 	sth	r3,12(r17)
   2b658:	003fc306 	br	2b568 <_gp+0xffff1a98>
   2b65c:	8880030b 	ldhu	r2,12(r17)
   2b660:	88c00417 	ldw	r3,16(r17)
   2b664:	88000115 	stw	zero,4(r17)
   2b668:	10bdffcc 	andi	r2,r2,63487
   2b66c:	8880030d 	sth	r2,12(r17)
   2b670:	88c00015 	stw	r3,0(r17)
   2b674:	003fb306 	br	2b544 <_gp+0xffff1a74>
   2b678:	98800017 	ldw	r2,0(r19)
   2b67c:	103fea26 	beq	r2,zero,2b628 <_gp+0xffff1b58>
   2b680:	00c00744 	movi	r3,29
   2b684:	10c00226 	beq	r2,r3,2b690 <__sflush_r+0x1fc>
   2b688:	00c00584 	movi	r3,22
   2b68c:	10c0031e 	bne	r2,r3,2b69c <__sflush_r+0x208>
   2b690:	9c000015 	stw	r16,0(r19)
   2b694:	0005883a 	mov	r2,zero
   2b698:	003fb306 	br	2b568 <_gp+0xffff1a98>
   2b69c:	88c0030b 	ldhu	r3,12(r17)
   2b6a0:	3005883a 	mov	r2,r6
   2b6a4:	18c01014 	ori	r3,r3,64
   2b6a8:	88c0030d 	sth	r3,12(r17)
   2b6ac:	003fae06 	br	2b568 <_gp+0xffff1a98>

0002b6b0 <_fflush_r>:
   2b6b0:	defffd04 	addi	sp,sp,-12
   2b6b4:	dc000115 	stw	r16,4(sp)
   2b6b8:	dfc00215 	stw	ra,8(sp)
   2b6bc:	2021883a 	mov	r16,r4
   2b6c0:	20000226 	beq	r4,zero,2b6cc <_fflush_r+0x1c>
   2b6c4:	20800e17 	ldw	r2,56(r4)
   2b6c8:	10000c26 	beq	r2,zero,2b6fc <_fflush_r+0x4c>
   2b6cc:	2880030f 	ldh	r2,12(r5)
   2b6d0:	1000051e 	bne	r2,zero,2b6e8 <_fflush_r+0x38>
   2b6d4:	0005883a 	mov	r2,zero
   2b6d8:	dfc00217 	ldw	ra,8(sp)
   2b6dc:	dc000117 	ldw	r16,4(sp)
   2b6e0:	dec00304 	addi	sp,sp,12
   2b6e4:	f800283a 	ret
   2b6e8:	8009883a 	mov	r4,r16
   2b6ec:	dfc00217 	ldw	ra,8(sp)
   2b6f0:	dc000117 	ldw	r16,4(sp)
   2b6f4:	dec00304 	addi	sp,sp,12
   2b6f8:	002b4941 	jmpi	2b494 <__sflush_r>
   2b6fc:	d9400015 	stw	r5,0(sp)
   2b700:	002704c0 	call	2704c <__sinit>
   2b704:	d9400017 	ldw	r5,0(sp)
   2b708:	003ff006 	br	2b6cc <_gp+0xffff1bfc>

0002b70c <fflush>:
   2b70c:	20000526 	beq	r4,zero,2b724 <fflush+0x18>
   2b710:	008000f4 	movhi	r2,3
   2b714:	1086b704 	addi	r2,r2,6876
   2b718:	200b883a 	mov	r5,r4
   2b71c:	11000017 	ldw	r4,0(r2)
   2b720:	002b6b01 	jmpi	2b6b0 <_fflush_r>
   2b724:	008000f4 	movhi	r2,3
   2b728:	1086b604 	addi	r2,r2,6872
   2b72c:	11000017 	ldw	r4,0(r2)
   2b730:	014000f4 	movhi	r5,3
   2b734:	296dac04 	addi	r5,r5,-18768
   2b738:	002761c1 	jmpi	2761c <_fwalk_reent>

0002b73c <_malloc_trim_r>:
   2b73c:	defffb04 	addi	sp,sp,-20
   2b740:	dcc00315 	stw	r19,12(sp)
   2b744:	04c000f4 	movhi	r19,3
   2b748:	dc800215 	stw	r18,8(sp)
   2b74c:	dc400115 	stw	r17,4(sp)
   2b750:	dc000015 	stw	r16,0(sp)
   2b754:	dfc00415 	stw	ra,16(sp)
   2b758:	2821883a 	mov	r16,r5
   2b75c:	9cc13004 	addi	r19,r19,1216
   2b760:	2025883a 	mov	r18,r4
   2b764:	002dbbc0 	call	2dbbc <__malloc_lock>
   2b768:	98800217 	ldw	r2,8(r19)
   2b76c:	14400117 	ldw	r17,4(r2)
   2b770:	00bfff04 	movi	r2,-4
   2b774:	88a2703a 	and	r17,r17,r2
   2b778:	8c21c83a 	sub	r16,r17,r16
   2b77c:	8403fbc4 	addi	r16,r16,4079
   2b780:	8020d33a 	srli	r16,r16,12
   2b784:	0083ffc4 	movi	r2,4095
   2b788:	843fffc4 	addi	r16,r16,-1
   2b78c:	8020933a 	slli	r16,r16,12
   2b790:	1400060e 	bge	r2,r16,2b7ac <_malloc_trim_r+0x70>
   2b794:	000b883a 	mov	r5,zero
   2b798:	9009883a 	mov	r4,r18
   2b79c:	0029a4c0 	call	29a4c <_sbrk_r>
   2b7a0:	98c00217 	ldw	r3,8(r19)
   2b7a4:	1c47883a 	add	r3,r3,r17
   2b7a8:	10c00a26 	beq	r2,r3,2b7d4 <_malloc_trim_r+0x98>
   2b7ac:	9009883a 	mov	r4,r18
   2b7b0:	002dbe00 	call	2dbe0 <__malloc_unlock>
   2b7b4:	0005883a 	mov	r2,zero
   2b7b8:	dfc00417 	ldw	ra,16(sp)
   2b7bc:	dcc00317 	ldw	r19,12(sp)
   2b7c0:	dc800217 	ldw	r18,8(sp)
   2b7c4:	dc400117 	ldw	r17,4(sp)
   2b7c8:	dc000017 	ldw	r16,0(sp)
   2b7cc:	dec00504 	addi	sp,sp,20
   2b7d0:	f800283a 	ret
   2b7d4:	040bc83a 	sub	r5,zero,r16
   2b7d8:	9009883a 	mov	r4,r18
   2b7dc:	0029a4c0 	call	29a4c <_sbrk_r>
   2b7e0:	00ffffc4 	movi	r3,-1
   2b7e4:	10c00d26 	beq	r2,r3,2b81c <_malloc_trim_r+0xe0>
   2b7e8:	00c000f4 	movhi	r3,3
   2b7ec:	18cd8f04 	addi	r3,r3,13884
   2b7f0:	18800017 	ldw	r2,0(r3)
   2b7f4:	99000217 	ldw	r4,8(r19)
   2b7f8:	8c23c83a 	sub	r17,r17,r16
   2b7fc:	8c400054 	ori	r17,r17,1
   2b800:	1421c83a 	sub	r16,r2,r16
   2b804:	24400115 	stw	r17,4(r4)
   2b808:	9009883a 	mov	r4,r18
   2b80c:	1c000015 	stw	r16,0(r3)
   2b810:	002dbe00 	call	2dbe0 <__malloc_unlock>
   2b814:	00800044 	movi	r2,1
   2b818:	003fe706 	br	2b7b8 <_gp+0xffff1ce8>
   2b81c:	000b883a 	mov	r5,zero
   2b820:	9009883a 	mov	r4,r18
   2b824:	0029a4c0 	call	29a4c <_sbrk_r>
   2b828:	99000217 	ldw	r4,8(r19)
   2b82c:	014003c4 	movi	r5,15
   2b830:	1107c83a 	sub	r3,r2,r4
   2b834:	28ffdd0e 	bge	r5,r3,2b7ac <_gp+0xffff1cdc>
   2b838:	014000f4 	movhi	r5,3
   2b83c:	2946b904 	addi	r5,r5,6884
   2b840:	29400017 	ldw	r5,0(r5)
   2b844:	18c00054 	ori	r3,r3,1
   2b848:	20c00115 	stw	r3,4(r4)
   2b84c:	00c000f4 	movhi	r3,3
   2b850:	1145c83a 	sub	r2,r2,r5
   2b854:	18cd8f04 	addi	r3,r3,13884
   2b858:	18800015 	stw	r2,0(r3)
   2b85c:	003fd306 	br	2b7ac <_gp+0xffff1cdc>

0002b860 <_free_r>:
   2b860:	28004126 	beq	r5,zero,2b968 <_free_r+0x108>
   2b864:	defffd04 	addi	sp,sp,-12
   2b868:	dc400115 	stw	r17,4(sp)
   2b86c:	dc000015 	stw	r16,0(sp)
   2b870:	2023883a 	mov	r17,r4
   2b874:	2821883a 	mov	r16,r5
   2b878:	dfc00215 	stw	ra,8(sp)
   2b87c:	002dbbc0 	call	2dbbc <__malloc_lock>
   2b880:	81ffff17 	ldw	r7,-4(r16)
   2b884:	00bfff84 	movi	r2,-2
   2b888:	010000f4 	movhi	r4,3
   2b88c:	81bffe04 	addi	r6,r16,-8
   2b890:	3884703a 	and	r2,r7,r2
   2b894:	21013004 	addi	r4,r4,1216
   2b898:	308b883a 	add	r5,r6,r2
   2b89c:	2a400117 	ldw	r9,4(r5)
   2b8a0:	22000217 	ldw	r8,8(r4)
   2b8a4:	00ffff04 	movi	r3,-4
   2b8a8:	48c6703a 	and	r3,r9,r3
   2b8ac:	2a005726 	beq	r5,r8,2ba0c <_free_r+0x1ac>
   2b8b0:	28c00115 	stw	r3,4(r5)
   2b8b4:	39c0004c 	andi	r7,r7,1
   2b8b8:	3800091e 	bne	r7,zero,2b8e0 <_free_r+0x80>
   2b8bc:	823ffe17 	ldw	r8,-8(r16)
   2b8c0:	22400204 	addi	r9,r4,8
   2b8c4:	320dc83a 	sub	r6,r6,r8
   2b8c8:	31c00217 	ldw	r7,8(r6)
   2b8cc:	1205883a 	add	r2,r2,r8
   2b8d0:	3a406526 	beq	r7,r9,2ba68 <_free_r+0x208>
   2b8d4:	32000317 	ldw	r8,12(r6)
   2b8d8:	3a000315 	stw	r8,12(r7)
   2b8dc:	41c00215 	stw	r7,8(r8)
   2b8e0:	28cf883a 	add	r7,r5,r3
   2b8e4:	39c00117 	ldw	r7,4(r7)
   2b8e8:	39c0004c 	andi	r7,r7,1
   2b8ec:	38003a26 	beq	r7,zero,2b9d8 <_free_r+0x178>
   2b8f0:	10c00054 	ori	r3,r2,1
   2b8f4:	30c00115 	stw	r3,4(r6)
   2b8f8:	3087883a 	add	r3,r6,r2
   2b8fc:	18800015 	stw	r2,0(r3)
   2b900:	00c07fc4 	movi	r3,511
   2b904:	18801936 	bltu	r3,r2,2b96c <_free_r+0x10c>
   2b908:	1004d0fa 	srli	r2,r2,3
   2b90c:	01c00044 	movi	r7,1
   2b910:	21400117 	ldw	r5,4(r4)
   2b914:	10c00044 	addi	r3,r2,1
   2b918:	18c7883a 	add	r3,r3,r3
   2b91c:	1005d0ba 	srai	r2,r2,2
   2b920:	18c7883a 	add	r3,r3,r3
   2b924:	18c7883a 	add	r3,r3,r3
   2b928:	1907883a 	add	r3,r3,r4
   2b92c:	3884983a 	sll	r2,r7,r2
   2b930:	19c00017 	ldw	r7,0(r3)
   2b934:	1a3ffe04 	addi	r8,r3,-8
   2b938:	1144b03a 	or	r2,r2,r5
   2b93c:	32000315 	stw	r8,12(r6)
   2b940:	31c00215 	stw	r7,8(r6)
   2b944:	20800115 	stw	r2,4(r4)
   2b948:	19800015 	stw	r6,0(r3)
   2b94c:	39800315 	stw	r6,12(r7)
   2b950:	8809883a 	mov	r4,r17
   2b954:	dfc00217 	ldw	ra,8(sp)
   2b958:	dc400117 	ldw	r17,4(sp)
   2b95c:	dc000017 	ldw	r16,0(sp)
   2b960:	dec00304 	addi	sp,sp,12
   2b964:	002dbe01 	jmpi	2dbe0 <__malloc_unlock>
   2b968:	f800283a 	ret
   2b96c:	100ad27a 	srli	r5,r2,9
   2b970:	00c00104 	movi	r3,4
   2b974:	19404a36 	bltu	r3,r5,2baa0 <_free_r+0x240>
   2b978:	100ad1ba 	srli	r5,r2,6
   2b97c:	28c00e44 	addi	r3,r5,57
   2b980:	18c7883a 	add	r3,r3,r3
   2b984:	29400e04 	addi	r5,r5,56
   2b988:	18c7883a 	add	r3,r3,r3
   2b98c:	18c7883a 	add	r3,r3,r3
   2b990:	1909883a 	add	r4,r3,r4
   2b994:	20c00017 	ldw	r3,0(r4)
   2b998:	01c000f4 	movhi	r7,3
   2b99c:	213ffe04 	addi	r4,r4,-8
   2b9a0:	39c13004 	addi	r7,r7,1216
   2b9a4:	20c04426 	beq	r4,r3,2bab8 <_free_r+0x258>
   2b9a8:	01ffff04 	movi	r7,-4
   2b9ac:	19400117 	ldw	r5,4(r3)
   2b9b0:	29ca703a 	and	r5,r5,r7
   2b9b4:	1140022e 	bgeu	r2,r5,2b9c0 <_free_r+0x160>
   2b9b8:	18c00217 	ldw	r3,8(r3)
   2b9bc:	20fffb1e 	bne	r4,r3,2b9ac <_gp+0xffff1edc>
   2b9c0:	19000317 	ldw	r4,12(r3)
   2b9c4:	31000315 	stw	r4,12(r6)
   2b9c8:	30c00215 	stw	r3,8(r6)
   2b9cc:	21800215 	stw	r6,8(r4)
   2b9d0:	19800315 	stw	r6,12(r3)
   2b9d4:	003fde06 	br	2b950 <_gp+0xffff1e80>
   2b9d8:	29c00217 	ldw	r7,8(r5)
   2b9dc:	10c5883a 	add	r2,r2,r3
   2b9e0:	00c000f4 	movhi	r3,3
   2b9e4:	18c13204 	addi	r3,r3,1224
   2b9e8:	38c03b26 	beq	r7,r3,2bad8 <_free_r+0x278>
   2b9ec:	2a000317 	ldw	r8,12(r5)
   2b9f0:	11400054 	ori	r5,r2,1
   2b9f4:	3087883a 	add	r3,r6,r2
   2b9f8:	3a000315 	stw	r8,12(r7)
   2b9fc:	41c00215 	stw	r7,8(r8)
   2ba00:	31400115 	stw	r5,4(r6)
   2ba04:	18800015 	stw	r2,0(r3)
   2ba08:	003fbd06 	br	2b900 <_gp+0xffff1e30>
   2ba0c:	39c0004c 	andi	r7,r7,1
   2ba10:	10c5883a 	add	r2,r2,r3
   2ba14:	3800071e 	bne	r7,zero,2ba34 <_free_r+0x1d4>
   2ba18:	81fffe17 	ldw	r7,-8(r16)
   2ba1c:	31cdc83a 	sub	r6,r6,r7
   2ba20:	30c00317 	ldw	r3,12(r6)
   2ba24:	31400217 	ldw	r5,8(r6)
   2ba28:	11c5883a 	add	r2,r2,r7
   2ba2c:	28c00315 	stw	r3,12(r5)
   2ba30:	19400215 	stw	r5,8(r3)
   2ba34:	10c00054 	ori	r3,r2,1
   2ba38:	30c00115 	stw	r3,4(r6)
   2ba3c:	00c000f4 	movhi	r3,3
   2ba40:	18c6ba04 	addi	r3,r3,6888
   2ba44:	18c00017 	ldw	r3,0(r3)
   2ba48:	21800215 	stw	r6,8(r4)
   2ba4c:	10ffc036 	bltu	r2,r3,2b950 <_gp+0xffff1e80>
   2ba50:	008000f4 	movhi	r2,3
   2ba54:	108d8604 	addi	r2,r2,13848
   2ba58:	11400017 	ldw	r5,0(r2)
   2ba5c:	8809883a 	mov	r4,r17
   2ba60:	002b73c0 	call	2b73c <_malloc_trim_r>
   2ba64:	003fba06 	br	2b950 <_gp+0xffff1e80>
   2ba68:	28c9883a 	add	r4,r5,r3
   2ba6c:	21000117 	ldw	r4,4(r4)
   2ba70:	2100004c 	andi	r4,r4,1
   2ba74:	2000391e 	bne	r4,zero,2bb5c <_free_r+0x2fc>
   2ba78:	29c00217 	ldw	r7,8(r5)
   2ba7c:	29000317 	ldw	r4,12(r5)
   2ba80:	1885883a 	add	r2,r3,r2
   2ba84:	10c00054 	ori	r3,r2,1
   2ba88:	39000315 	stw	r4,12(r7)
   2ba8c:	21c00215 	stw	r7,8(r4)
   2ba90:	30c00115 	stw	r3,4(r6)
   2ba94:	308d883a 	add	r6,r6,r2
   2ba98:	30800015 	stw	r2,0(r6)
   2ba9c:	003fac06 	br	2b950 <_gp+0xffff1e80>
   2baa0:	00c00504 	movi	r3,20
   2baa4:	19401536 	bltu	r3,r5,2bafc <_free_r+0x29c>
   2baa8:	28c01704 	addi	r3,r5,92
   2baac:	18c7883a 	add	r3,r3,r3
   2bab0:	294016c4 	addi	r5,r5,91
   2bab4:	003fb406 	br	2b988 <_gp+0xffff1eb8>
   2bab8:	280bd0ba 	srai	r5,r5,2
   2babc:	00c00044 	movi	r3,1
   2bac0:	38800117 	ldw	r2,4(r7)
   2bac4:	194a983a 	sll	r5,r3,r5
   2bac8:	2007883a 	mov	r3,r4
   2bacc:	2884b03a 	or	r2,r5,r2
   2bad0:	38800115 	stw	r2,4(r7)
   2bad4:	003fbb06 	br	2b9c4 <_gp+0xffff1ef4>
   2bad8:	21800515 	stw	r6,20(r4)
   2badc:	21800415 	stw	r6,16(r4)
   2bae0:	10c00054 	ori	r3,r2,1
   2bae4:	31c00315 	stw	r7,12(r6)
   2bae8:	31c00215 	stw	r7,8(r6)
   2baec:	30c00115 	stw	r3,4(r6)
   2baf0:	308d883a 	add	r6,r6,r2
   2baf4:	30800015 	stw	r2,0(r6)
   2baf8:	003f9506 	br	2b950 <_gp+0xffff1e80>
   2bafc:	00c01504 	movi	r3,84
   2bb00:	19400536 	bltu	r3,r5,2bb18 <_free_r+0x2b8>
   2bb04:	100ad33a 	srli	r5,r2,12
   2bb08:	28c01bc4 	addi	r3,r5,111
   2bb0c:	18c7883a 	add	r3,r3,r3
   2bb10:	29401b84 	addi	r5,r5,110
   2bb14:	003f9c06 	br	2b988 <_gp+0xffff1eb8>
   2bb18:	00c05504 	movi	r3,340
   2bb1c:	19400536 	bltu	r3,r5,2bb34 <_free_r+0x2d4>
   2bb20:	100ad3fa 	srli	r5,r2,15
   2bb24:	28c01e04 	addi	r3,r5,120
   2bb28:	18c7883a 	add	r3,r3,r3
   2bb2c:	29401dc4 	addi	r5,r5,119
   2bb30:	003f9506 	br	2b988 <_gp+0xffff1eb8>
   2bb34:	00c15504 	movi	r3,1364
   2bb38:	19400536 	bltu	r3,r5,2bb50 <_free_r+0x2f0>
   2bb3c:	100ad4ba 	srli	r5,r2,18
   2bb40:	28c01f44 	addi	r3,r5,125
   2bb44:	18c7883a 	add	r3,r3,r3
   2bb48:	29401f04 	addi	r5,r5,124
   2bb4c:	003f8e06 	br	2b988 <_gp+0xffff1eb8>
   2bb50:	00c03f84 	movi	r3,254
   2bb54:	01401f84 	movi	r5,126
   2bb58:	003f8b06 	br	2b988 <_gp+0xffff1eb8>
   2bb5c:	10c00054 	ori	r3,r2,1
   2bb60:	30c00115 	stw	r3,4(r6)
   2bb64:	308d883a 	add	r6,r6,r2
   2bb68:	30800015 	stw	r2,0(r6)
   2bb6c:	003f7806 	br	2b950 <_gp+0xffff1e80>

0002bb70 <_lseek_r>:
   2bb70:	defffd04 	addi	sp,sp,-12
   2bb74:	2805883a 	mov	r2,r5
   2bb78:	dc000015 	stw	r16,0(sp)
   2bb7c:	040000f4 	movhi	r16,3
   2bb80:	dc400115 	stw	r17,4(sp)
   2bb84:	300b883a 	mov	r5,r6
   2bb88:	840d8704 	addi	r16,r16,13852
   2bb8c:	2023883a 	mov	r17,r4
   2bb90:	380d883a 	mov	r6,r7
   2bb94:	1009883a 	mov	r4,r2
   2bb98:	dfc00215 	stw	ra,8(sp)
   2bb9c:	80000015 	stw	zero,0(r16)
   2bba0:	002da6c0 	call	2da6c <lseek>
   2bba4:	00ffffc4 	movi	r3,-1
   2bba8:	10c00526 	beq	r2,r3,2bbc0 <_lseek_r+0x50>
   2bbac:	dfc00217 	ldw	ra,8(sp)
   2bbb0:	dc400117 	ldw	r17,4(sp)
   2bbb4:	dc000017 	ldw	r16,0(sp)
   2bbb8:	dec00304 	addi	sp,sp,12
   2bbbc:	f800283a 	ret
   2bbc0:	80c00017 	ldw	r3,0(r16)
   2bbc4:	183ff926 	beq	r3,zero,2bbac <_gp+0xffff20dc>
   2bbc8:	88c00015 	stw	r3,0(r17)
   2bbcc:	003ff706 	br	2bbac <_gp+0xffff20dc>

0002bbd0 <__smakebuf_r>:
   2bbd0:	2880030b 	ldhu	r2,12(r5)
   2bbd4:	10c0008c 	andi	r3,r2,2
   2bbd8:	1800411e 	bne	r3,zero,2bce0 <__smakebuf_r+0x110>
   2bbdc:	deffec04 	addi	sp,sp,-80
   2bbe0:	dc000f15 	stw	r16,60(sp)
   2bbe4:	2821883a 	mov	r16,r5
   2bbe8:	2940038f 	ldh	r5,14(r5)
   2bbec:	dc401015 	stw	r17,64(sp)
   2bbf0:	dfc01315 	stw	ra,76(sp)
   2bbf4:	dcc01215 	stw	r19,72(sp)
   2bbf8:	dc801115 	stw	r18,68(sp)
   2bbfc:	2023883a 	mov	r17,r4
   2bc00:	28001c16 	blt	r5,zero,2bc74 <__smakebuf_r+0xa4>
   2bc04:	d80d883a 	mov	r6,sp
   2bc08:	002bdec0 	call	2bdec <_fstat_r>
   2bc0c:	10001816 	blt	r2,zero,2bc70 <__smakebuf_r+0xa0>
   2bc10:	d8800117 	ldw	r2,4(sp)
   2bc14:	00e00014 	movui	r3,32768
   2bc18:	10bc000c 	andi	r2,r2,61440
   2bc1c:	14c80020 	cmpeqi	r19,r2,8192
   2bc20:	10c03726 	beq	r2,r3,2bd00 <__smakebuf_r+0x130>
   2bc24:	80c0030b 	ldhu	r3,12(r16)
   2bc28:	18c20014 	ori	r3,r3,2048
   2bc2c:	80c0030d 	sth	r3,12(r16)
   2bc30:	00c80004 	movi	r3,8192
   2bc34:	10c0521e 	bne	r2,r3,2bd80 <__smakebuf_r+0x1b0>
   2bc38:	8140038f 	ldh	r5,14(r16)
   2bc3c:	8809883a 	mov	r4,r17
   2bc40:	002be480 	call	2be48 <_isatty_r>
   2bc44:	10004c26 	beq	r2,zero,2bd78 <__smakebuf_r+0x1a8>
   2bc48:	8080030b 	ldhu	r2,12(r16)
   2bc4c:	80c010c4 	addi	r3,r16,67
   2bc50:	80c00015 	stw	r3,0(r16)
   2bc54:	10800054 	ori	r2,r2,1
   2bc58:	8080030d 	sth	r2,12(r16)
   2bc5c:	00800044 	movi	r2,1
   2bc60:	80c00415 	stw	r3,16(r16)
   2bc64:	80800515 	stw	r2,20(r16)
   2bc68:	04810004 	movi	r18,1024
   2bc6c:	00000706 	br	2bc8c <__smakebuf_r+0xbc>
   2bc70:	8080030b 	ldhu	r2,12(r16)
   2bc74:	10c0200c 	andi	r3,r2,128
   2bc78:	18001f1e 	bne	r3,zero,2bcf8 <__smakebuf_r+0x128>
   2bc7c:	04810004 	movi	r18,1024
   2bc80:	10820014 	ori	r2,r2,2048
   2bc84:	8080030d 	sth	r2,12(r16)
   2bc88:	0027883a 	mov	r19,zero
   2bc8c:	900b883a 	mov	r5,r18
   2bc90:	8809883a 	mov	r4,r17
   2bc94:	00277bc0 	call	277bc <_malloc_r>
   2bc98:	10002c26 	beq	r2,zero,2bd4c <__smakebuf_r+0x17c>
   2bc9c:	80c0030b 	ldhu	r3,12(r16)
   2bca0:	010000b4 	movhi	r4,2
   2bca4:	211b4104 	addi	r4,r4,27908
   2bca8:	89000f15 	stw	r4,60(r17)
   2bcac:	18c02014 	ori	r3,r3,128
   2bcb0:	80c0030d 	sth	r3,12(r16)
   2bcb4:	80800015 	stw	r2,0(r16)
   2bcb8:	80800415 	stw	r2,16(r16)
   2bcbc:	84800515 	stw	r18,20(r16)
   2bcc0:	98001a1e 	bne	r19,zero,2bd2c <__smakebuf_r+0x15c>
   2bcc4:	dfc01317 	ldw	ra,76(sp)
   2bcc8:	dcc01217 	ldw	r19,72(sp)
   2bccc:	dc801117 	ldw	r18,68(sp)
   2bcd0:	dc401017 	ldw	r17,64(sp)
   2bcd4:	dc000f17 	ldw	r16,60(sp)
   2bcd8:	dec01404 	addi	sp,sp,80
   2bcdc:	f800283a 	ret
   2bce0:	288010c4 	addi	r2,r5,67
   2bce4:	28800015 	stw	r2,0(r5)
   2bce8:	28800415 	stw	r2,16(r5)
   2bcec:	00800044 	movi	r2,1
   2bcf0:	28800515 	stw	r2,20(r5)
   2bcf4:	f800283a 	ret
   2bcf8:	04801004 	movi	r18,64
   2bcfc:	003fe006 	br	2bc80 <_gp+0xffff21b0>
   2bd00:	81000a17 	ldw	r4,40(r16)
   2bd04:	00c000f4 	movhi	r3,3
   2bd08:	18e6de04 	addi	r3,r3,-25736
   2bd0c:	20ffc51e 	bne	r4,r3,2bc24 <_gp+0xffff2154>
   2bd10:	8080030b 	ldhu	r2,12(r16)
   2bd14:	04810004 	movi	r18,1024
   2bd18:	84801315 	stw	r18,76(r16)
   2bd1c:	1484b03a 	or	r2,r2,r18
   2bd20:	8080030d 	sth	r2,12(r16)
   2bd24:	0027883a 	mov	r19,zero
   2bd28:	003fd806 	br	2bc8c <_gp+0xffff21bc>
   2bd2c:	8140038f 	ldh	r5,14(r16)
   2bd30:	8809883a 	mov	r4,r17
   2bd34:	002be480 	call	2be48 <_isatty_r>
   2bd38:	103fe226 	beq	r2,zero,2bcc4 <_gp+0xffff21f4>
   2bd3c:	8080030b 	ldhu	r2,12(r16)
   2bd40:	10800054 	ori	r2,r2,1
   2bd44:	8080030d 	sth	r2,12(r16)
   2bd48:	003fde06 	br	2bcc4 <_gp+0xffff21f4>
   2bd4c:	8080030b 	ldhu	r2,12(r16)
   2bd50:	10c0800c 	andi	r3,r2,512
   2bd54:	183fdb1e 	bne	r3,zero,2bcc4 <_gp+0xffff21f4>
   2bd58:	10800094 	ori	r2,r2,2
   2bd5c:	80c010c4 	addi	r3,r16,67
   2bd60:	8080030d 	sth	r2,12(r16)
   2bd64:	00800044 	movi	r2,1
   2bd68:	80c00015 	stw	r3,0(r16)
   2bd6c:	80c00415 	stw	r3,16(r16)
   2bd70:	80800515 	stw	r2,20(r16)
   2bd74:	003fd306 	br	2bcc4 <_gp+0xffff21f4>
   2bd78:	04810004 	movi	r18,1024
   2bd7c:	003fc306 	br	2bc8c <_gp+0xffff21bc>
   2bd80:	0027883a 	mov	r19,zero
   2bd84:	04810004 	movi	r18,1024
   2bd88:	003fc006 	br	2bc8c <_gp+0xffff21bc>

0002bd8c <_read_r>:
   2bd8c:	defffd04 	addi	sp,sp,-12
   2bd90:	2805883a 	mov	r2,r5
   2bd94:	dc000015 	stw	r16,0(sp)
   2bd98:	040000f4 	movhi	r16,3
   2bd9c:	dc400115 	stw	r17,4(sp)
   2bda0:	300b883a 	mov	r5,r6
   2bda4:	840d8704 	addi	r16,r16,13852
   2bda8:	2023883a 	mov	r17,r4
   2bdac:	380d883a 	mov	r6,r7
   2bdb0:	1009883a 	mov	r4,r2
   2bdb4:	dfc00215 	stw	ra,8(sp)
   2bdb8:	80000015 	stw	zero,0(r16)
   2bdbc:	002dc400 	call	2dc40 <read>
   2bdc0:	00ffffc4 	movi	r3,-1
   2bdc4:	10c00526 	beq	r2,r3,2bddc <_read_r+0x50>
   2bdc8:	dfc00217 	ldw	ra,8(sp)
   2bdcc:	dc400117 	ldw	r17,4(sp)
   2bdd0:	dc000017 	ldw	r16,0(sp)
   2bdd4:	dec00304 	addi	sp,sp,12
   2bdd8:	f800283a 	ret
   2bddc:	80c00017 	ldw	r3,0(r16)
   2bde0:	183ff926 	beq	r3,zero,2bdc8 <_gp+0xffff22f8>
   2bde4:	88c00015 	stw	r3,0(r17)
   2bde8:	003ff706 	br	2bdc8 <_gp+0xffff22f8>

0002bdec <_fstat_r>:
   2bdec:	defffd04 	addi	sp,sp,-12
   2bdf0:	2805883a 	mov	r2,r5
   2bdf4:	dc000015 	stw	r16,0(sp)
   2bdf8:	040000f4 	movhi	r16,3
   2bdfc:	dc400115 	stw	r17,4(sp)
   2be00:	840d8704 	addi	r16,r16,13852
   2be04:	2023883a 	mov	r17,r4
   2be08:	300b883a 	mov	r5,r6
   2be0c:	1009883a 	mov	r4,r2
   2be10:	dfc00215 	stw	ra,8(sp)
   2be14:	80000015 	stw	zero,0(r16)
   2be18:	002d7b40 	call	2d7b4 <fstat>
   2be1c:	00ffffc4 	movi	r3,-1
   2be20:	10c00526 	beq	r2,r3,2be38 <_fstat_r+0x4c>
   2be24:	dfc00217 	ldw	ra,8(sp)
   2be28:	dc400117 	ldw	r17,4(sp)
   2be2c:	dc000017 	ldw	r16,0(sp)
   2be30:	dec00304 	addi	sp,sp,12
   2be34:	f800283a 	ret
   2be38:	80c00017 	ldw	r3,0(r16)
   2be3c:	183ff926 	beq	r3,zero,2be24 <_gp+0xffff2354>
   2be40:	88c00015 	stw	r3,0(r17)
   2be44:	003ff706 	br	2be24 <_gp+0xffff2354>

0002be48 <_isatty_r>:
   2be48:	defffd04 	addi	sp,sp,-12
   2be4c:	dc000015 	stw	r16,0(sp)
   2be50:	040000f4 	movhi	r16,3
   2be54:	dc400115 	stw	r17,4(sp)
   2be58:	840d8704 	addi	r16,r16,13852
   2be5c:	2023883a 	mov	r17,r4
   2be60:	2809883a 	mov	r4,r5
   2be64:	dfc00215 	stw	ra,8(sp)
   2be68:	80000015 	stw	zero,0(r16)
   2be6c:	002d8a00 	call	2d8a0 <isatty>
   2be70:	00ffffc4 	movi	r3,-1
   2be74:	10c00526 	beq	r2,r3,2be8c <_isatty_r+0x44>
   2be78:	dfc00217 	ldw	ra,8(sp)
   2be7c:	dc400117 	ldw	r17,4(sp)
   2be80:	dc000017 	ldw	r16,0(sp)
   2be84:	dec00304 	addi	sp,sp,12
   2be88:	f800283a 	ret
   2be8c:	80c00017 	ldw	r3,0(r16)
   2be90:	183ff926 	beq	r3,zero,2be78 <_gp+0xffff23a8>
   2be94:	88c00015 	stw	r3,0(r17)
   2be98:	003ff706 	br	2be78 <_gp+0xffff23a8>

0002be9c <__udivdi3>:
   2be9c:	defff504 	addi	sp,sp,-44
   2bea0:	dcc00415 	stw	r19,16(sp)
   2bea4:	dc000115 	stw	r16,4(sp)
   2bea8:	dfc00a15 	stw	ra,40(sp)
   2beac:	df000915 	stw	fp,36(sp)
   2beb0:	ddc00815 	stw	r23,32(sp)
   2beb4:	dd800715 	stw	r22,28(sp)
   2beb8:	dd400615 	stw	r21,24(sp)
   2bebc:	dd000515 	stw	r20,20(sp)
   2bec0:	dc800315 	stw	r18,12(sp)
   2bec4:	dc400215 	stw	r17,8(sp)
   2bec8:	2027883a 	mov	r19,r4
   2becc:	2821883a 	mov	r16,r5
   2bed0:	3800411e 	bne	r7,zero,2bfd8 <__udivdi3+0x13c>
   2bed4:	3023883a 	mov	r17,r6
   2bed8:	2025883a 	mov	r18,r4
   2bedc:	2980522e 	bgeu	r5,r6,2c028 <__udivdi3+0x18c>
   2bee0:	00bfffd4 	movui	r2,65535
   2bee4:	282d883a 	mov	r22,r5
   2bee8:	1180a836 	bltu	r2,r6,2c18c <__udivdi3+0x2f0>
   2beec:	00803fc4 	movi	r2,255
   2bef0:	1185803a 	cmpltu	r2,r2,r6
   2bef4:	100490fa 	slli	r2,r2,3
   2bef8:	3086d83a 	srl	r3,r6,r2
   2befc:	010000f4 	movhi	r4,3
   2bf00:	213f4ac4 	addi	r4,r4,-725
   2bf04:	20c7883a 	add	r3,r4,r3
   2bf08:	18c00003 	ldbu	r3,0(r3)
   2bf0c:	1885883a 	add	r2,r3,r2
   2bf10:	00c00804 	movi	r3,32
   2bf14:	1887c83a 	sub	r3,r3,r2
   2bf18:	18000526 	beq	r3,zero,2bf30 <__udivdi3+0x94>
   2bf1c:	80e0983a 	sll	r16,r16,r3
   2bf20:	9884d83a 	srl	r2,r19,r2
   2bf24:	30e2983a 	sll	r17,r6,r3
   2bf28:	98e4983a 	sll	r18,r19,r3
   2bf2c:	142cb03a 	or	r22,r2,r16
   2bf30:	882ad43a 	srli	r21,r17,16
   2bf34:	b009883a 	mov	r4,r22
   2bf38:	8d3fffcc 	andi	r20,r17,65535
   2bf3c:	a80b883a 	mov	r5,r21
   2bf40:	002caa80 	call	2caa8 <__umodsi3>
   2bf44:	b009883a 	mov	r4,r22
   2bf48:	a80b883a 	mov	r5,r21
   2bf4c:	1027883a 	mov	r19,r2
   2bf50:	002ca440 	call	2ca44 <__udivsi3>
   2bf54:	102d883a 	mov	r22,r2
   2bf58:	9826943a 	slli	r19,r19,16
   2bf5c:	9004d43a 	srli	r2,r18,16
   2bf60:	a5a1383a 	mul	r16,r20,r22
   2bf64:	14c4b03a 	or	r2,r2,r19
   2bf68:	1400052e 	bgeu	r2,r16,2bf80 <__udivdi3+0xe4>
   2bf6c:	1445883a 	add	r2,r2,r17
   2bf70:	b0ffffc4 	addi	r3,r22,-1
   2bf74:	14400136 	bltu	r2,r17,2bf7c <__udivdi3+0xe0>
   2bf78:	14012336 	bltu	r2,r16,2c408 <__udivdi3+0x56c>
   2bf7c:	182d883a 	mov	r22,r3
   2bf80:	1421c83a 	sub	r16,r2,r16
   2bf84:	a80b883a 	mov	r5,r21
   2bf88:	8009883a 	mov	r4,r16
   2bf8c:	002caa80 	call	2caa8 <__umodsi3>
   2bf90:	1027883a 	mov	r19,r2
   2bf94:	a80b883a 	mov	r5,r21
   2bf98:	8009883a 	mov	r4,r16
   2bf9c:	002ca440 	call	2ca44 <__udivsi3>
   2bfa0:	9826943a 	slli	r19,r19,16
   2bfa4:	a0a9383a 	mul	r20,r20,r2
   2bfa8:	94bfffcc 	andi	r18,r18,65535
   2bfac:	94e4b03a 	or	r18,r18,r19
   2bfb0:	9500052e 	bgeu	r18,r20,2bfc8 <__udivdi3+0x12c>
   2bfb4:	8ca5883a 	add	r18,r17,r18
   2bfb8:	10ffffc4 	addi	r3,r2,-1
   2bfbc:	9440f136 	bltu	r18,r17,2c384 <__udivdi3+0x4e8>
   2bfc0:	9500f02e 	bgeu	r18,r20,2c384 <__udivdi3+0x4e8>
   2bfc4:	10bfff84 	addi	r2,r2,-2
   2bfc8:	b00c943a 	slli	r6,r22,16
   2bfcc:	0007883a 	mov	r3,zero
   2bfd0:	3084b03a 	or	r2,r6,r2
   2bfd4:	00005906 	br	2c13c <__udivdi3+0x2a0>
   2bfd8:	29c05636 	bltu	r5,r7,2c134 <__udivdi3+0x298>
   2bfdc:	00bfffd4 	movui	r2,65535
   2bfe0:	11c0622e 	bgeu	r2,r7,2c16c <__udivdi3+0x2d0>
   2bfe4:	00804034 	movhi	r2,256
   2bfe8:	10bfffc4 	addi	r2,r2,-1
   2bfec:	11c0ee36 	bltu	r2,r7,2c3a8 <__udivdi3+0x50c>
   2bff0:	00800404 	movi	r2,16
   2bff4:	3886d83a 	srl	r3,r7,r2
   2bff8:	010000f4 	movhi	r4,3
   2bffc:	213f4ac4 	addi	r4,r4,-725
   2c000:	20c7883a 	add	r3,r4,r3
   2c004:	18c00003 	ldbu	r3,0(r3)
   2c008:	05400804 	movi	r21,32
   2c00c:	1885883a 	add	r2,r3,r2
   2c010:	a8abc83a 	sub	r21,r21,r2
   2c014:	a800621e 	bne	r21,zero,2c1a0 <__udivdi3+0x304>
   2c018:	3c00e936 	bltu	r7,r16,2c3c0 <__udivdi3+0x524>
   2c01c:	9985403a 	cmpgeu	r2,r19,r6
   2c020:	0007883a 	mov	r3,zero
   2c024:	00004506 	br	2c13c <__udivdi3+0x2a0>
   2c028:	3000041e 	bne	r6,zero,2c03c <__udivdi3+0x1a0>
   2c02c:	000b883a 	mov	r5,zero
   2c030:	01000044 	movi	r4,1
   2c034:	002ca440 	call	2ca44 <__udivsi3>
   2c038:	1023883a 	mov	r17,r2
   2c03c:	00bfffd4 	movui	r2,65535
   2c040:	14404e2e 	bgeu	r2,r17,2c17c <__udivdi3+0x2e0>
   2c044:	00804034 	movhi	r2,256
   2c048:	10bfffc4 	addi	r2,r2,-1
   2c04c:	1440d836 	bltu	r2,r17,2c3b0 <__udivdi3+0x514>
   2c050:	00800404 	movi	r2,16
   2c054:	8886d83a 	srl	r3,r17,r2
   2c058:	010000f4 	movhi	r4,3
   2c05c:	213f4ac4 	addi	r4,r4,-725
   2c060:	20c7883a 	add	r3,r4,r3
   2c064:	18c00003 	ldbu	r3,0(r3)
   2c068:	1885883a 	add	r2,r3,r2
   2c06c:	00c00804 	movi	r3,32
   2c070:	1887c83a 	sub	r3,r3,r2
   2c074:	18008f1e 	bne	r3,zero,2c2b4 <__udivdi3+0x418>
   2c078:	882ad43a 	srli	r21,r17,16
   2c07c:	8461c83a 	sub	r16,r16,r17
   2c080:	8d3fffcc 	andi	r20,r17,65535
   2c084:	00c00044 	movi	r3,1
   2c088:	8009883a 	mov	r4,r16
   2c08c:	a80b883a 	mov	r5,r21
   2c090:	d8c00015 	stw	r3,0(sp)
   2c094:	002caa80 	call	2caa8 <__umodsi3>
   2c098:	8009883a 	mov	r4,r16
   2c09c:	a80b883a 	mov	r5,r21
   2c0a0:	1027883a 	mov	r19,r2
   2c0a4:	002ca440 	call	2ca44 <__udivsi3>
   2c0a8:	9826943a 	slli	r19,r19,16
   2c0ac:	9008d43a 	srli	r4,r18,16
   2c0b0:	1521383a 	mul	r16,r2,r20
   2c0b4:	102d883a 	mov	r22,r2
   2c0b8:	24c8b03a 	or	r4,r4,r19
   2c0bc:	d8c00017 	ldw	r3,0(sp)
   2c0c0:	2400052e 	bgeu	r4,r16,2c0d8 <__udivdi3+0x23c>
   2c0c4:	2449883a 	add	r4,r4,r17
   2c0c8:	b0bfffc4 	addi	r2,r22,-1
   2c0cc:	24400136 	bltu	r4,r17,2c0d4 <__udivdi3+0x238>
   2c0d0:	2400ca36 	bltu	r4,r16,2c3fc <__udivdi3+0x560>
   2c0d4:	102d883a 	mov	r22,r2
   2c0d8:	2421c83a 	sub	r16,r4,r16
   2c0dc:	a80b883a 	mov	r5,r21
   2c0e0:	8009883a 	mov	r4,r16
   2c0e4:	d8c00015 	stw	r3,0(sp)
   2c0e8:	002caa80 	call	2caa8 <__umodsi3>
   2c0ec:	1027883a 	mov	r19,r2
   2c0f0:	a80b883a 	mov	r5,r21
   2c0f4:	8009883a 	mov	r4,r16
   2c0f8:	002ca440 	call	2ca44 <__udivsi3>
   2c0fc:	9826943a 	slli	r19,r19,16
   2c100:	1529383a 	mul	r20,r2,r20
   2c104:	94bfffcc 	andi	r18,r18,65535
   2c108:	94e4b03a 	or	r18,r18,r19
   2c10c:	d8c00017 	ldw	r3,0(sp)
   2c110:	9500052e 	bgeu	r18,r20,2c128 <__udivdi3+0x28c>
   2c114:	8ca5883a 	add	r18,r17,r18
   2c118:	113fffc4 	addi	r4,r2,-1
   2c11c:	94409736 	bltu	r18,r17,2c37c <__udivdi3+0x4e0>
   2c120:	9500962e 	bgeu	r18,r20,2c37c <__udivdi3+0x4e0>
   2c124:	10bfff84 	addi	r2,r2,-2
   2c128:	b00c943a 	slli	r6,r22,16
   2c12c:	3084b03a 	or	r2,r6,r2
   2c130:	00000206 	br	2c13c <__udivdi3+0x2a0>
   2c134:	0007883a 	mov	r3,zero
   2c138:	0005883a 	mov	r2,zero
   2c13c:	dfc00a17 	ldw	ra,40(sp)
   2c140:	df000917 	ldw	fp,36(sp)
   2c144:	ddc00817 	ldw	r23,32(sp)
   2c148:	dd800717 	ldw	r22,28(sp)
   2c14c:	dd400617 	ldw	r21,24(sp)
   2c150:	dd000517 	ldw	r20,20(sp)
   2c154:	dcc00417 	ldw	r19,16(sp)
   2c158:	dc800317 	ldw	r18,12(sp)
   2c15c:	dc400217 	ldw	r17,8(sp)
   2c160:	dc000117 	ldw	r16,4(sp)
   2c164:	dec00b04 	addi	sp,sp,44
   2c168:	f800283a 	ret
   2c16c:	00803fc4 	movi	r2,255
   2c170:	11c5803a 	cmpltu	r2,r2,r7
   2c174:	100490fa 	slli	r2,r2,3
   2c178:	003f9e06 	br	2bff4 <_gp+0xffff2524>
   2c17c:	00803fc4 	movi	r2,255
   2c180:	1445803a 	cmpltu	r2,r2,r17
   2c184:	100490fa 	slli	r2,r2,3
   2c188:	003fb206 	br	2c054 <_gp+0xffff2584>
   2c18c:	00804034 	movhi	r2,256
   2c190:	10bfffc4 	addi	r2,r2,-1
   2c194:	11808836 	bltu	r2,r6,2c3b8 <__udivdi3+0x51c>
   2c198:	00800404 	movi	r2,16
   2c19c:	003f5606 	br	2bef8 <_gp+0xffff2428>
   2c1a0:	30aed83a 	srl	r23,r6,r2
   2c1a4:	3d4e983a 	sll	r7,r7,r21
   2c1a8:	80acd83a 	srl	r22,r16,r2
   2c1ac:	9884d83a 	srl	r2,r19,r2
   2c1b0:	3deeb03a 	or	r23,r7,r23
   2c1b4:	b824d43a 	srli	r18,r23,16
   2c1b8:	8560983a 	sll	r16,r16,r21
   2c1bc:	b009883a 	mov	r4,r22
   2c1c0:	900b883a 	mov	r5,r18
   2c1c4:	3568983a 	sll	r20,r6,r21
   2c1c8:	1420b03a 	or	r16,r2,r16
   2c1cc:	002caa80 	call	2caa8 <__umodsi3>
   2c1d0:	b009883a 	mov	r4,r22
   2c1d4:	900b883a 	mov	r5,r18
   2c1d8:	1023883a 	mov	r17,r2
   2c1dc:	002ca440 	call	2ca44 <__udivsi3>
   2c1e0:	8808943a 	slli	r4,r17,16
   2c1e4:	bf3fffcc 	andi	fp,r23,65535
   2c1e8:	8006d43a 	srli	r3,r16,16
   2c1ec:	e0a3383a 	mul	r17,fp,r2
   2c1f0:	100d883a 	mov	r6,r2
   2c1f4:	1906b03a 	or	r3,r3,r4
   2c1f8:	1c40042e 	bgeu	r3,r17,2c20c <__udivdi3+0x370>
   2c1fc:	1dc7883a 	add	r3,r3,r23
   2c200:	10bfffc4 	addi	r2,r2,-1
   2c204:	1dc0752e 	bgeu	r3,r23,2c3dc <__udivdi3+0x540>
   2c208:	100d883a 	mov	r6,r2
   2c20c:	1c63c83a 	sub	r17,r3,r17
   2c210:	900b883a 	mov	r5,r18
   2c214:	8809883a 	mov	r4,r17
   2c218:	d9800015 	stw	r6,0(sp)
   2c21c:	002caa80 	call	2caa8 <__umodsi3>
   2c220:	102d883a 	mov	r22,r2
   2c224:	8809883a 	mov	r4,r17
   2c228:	900b883a 	mov	r5,r18
   2c22c:	002ca440 	call	2ca44 <__udivsi3>
   2c230:	b02c943a 	slli	r22,r22,16
   2c234:	e089383a 	mul	r4,fp,r2
   2c238:	843fffcc 	andi	r16,r16,65535
   2c23c:	85a0b03a 	or	r16,r16,r22
   2c240:	d9800017 	ldw	r6,0(sp)
   2c244:	8100042e 	bgeu	r16,r4,2c258 <__udivdi3+0x3bc>
   2c248:	85e1883a 	add	r16,r16,r23
   2c24c:	10ffffc4 	addi	r3,r2,-1
   2c250:	85c05e2e 	bgeu	r16,r23,2c3cc <__udivdi3+0x530>
   2c254:	1805883a 	mov	r2,r3
   2c258:	300c943a 	slli	r6,r6,16
   2c25c:	a17fffcc 	andi	r5,r20,65535
   2c260:	a028d43a 	srli	r20,r20,16
   2c264:	3084b03a 	or	r2,r6,r2
   2c268:	10ffffcc 	andi	r3,r2,65535
   2c26c:	100cd43a 	srli	r6,r2,16
   2c270:	194f383a 	mul	r7,r3,r5
   2c274:	1d07383a 	mul	r3,r3,r20
   2c278:	314b383a 	mul	r5,r6,r5
   2c27c:	3810d43a 	srli	r8,r7,16
   2c280:	8121c83a 	sub	r16,r16,r4
   2c284:	1947883a 	add	r3,r3,r5
   2c288:	40c7883a 	add	r3,r8,r3
   2c28c:	350d383a 	mul	r6,r6,r20
   2c290:	1940022e 	bgeu	r3,r5,2c29c <__udivdi3+0x400>
   2c294:	01000074 	movhi	r4,1
   2c298:	310d883a 	add	r6,r6,r4
   2c29c:	1828d43a 	srli	r20,r3,16
   2c2a0:	a18d883a 	add	r6,r20,r6
   2c2a4:	81803e36 	bltu	r16,r6,2c3a0 <__udivdi3+0x504>
   2c2a8:	81803826 	beq	r16,r6,2c38c <__udivdi3+0x4f0>
   2c2ac:	0007883a 	mov	r3,zero
   2c2b0:	003fa206 	br	2c13c <_gp+0xffff266c>
   2c2b4:	88e2983a 	sll	r17,r17,r3
   2c2b8:	80a8d83a 	srl	r20,r16,r2
   2c2bc:	80e0983a 	sll	r16,r16,r3
   2c2c0:	882ad43a 	srli	r21,r17,16
   2c2c4:	9884d83a 	srl	r2,r19,r2
   2c2c8:	a009883a 	mov	r4,r20
   2c2cc:	a80b883a 	mov	r5,r21
   2c2d0:	142eb03a 	or	r23,r2,r16
   2c2d4:	98e4983a 	sll	r18,r19,r3
   2c2d8:	002caa80 	call	2caa8 <__umodsi3>
   2c2dc:	a009883a 	mov	r4,r20
   2c2e0:	a80b883a 	mov	r5,r21
   2c2e4:	1021883a 	mov	r16,r2
   2c2e8:	002ca440 	call	2ca44 <__udivsi3>
   2c2ec:	1039883a 	mov	fp,r2
   2c2f0:	8d3fffcc 	andi	r20,r17,65535
   2c2f4:	8020943a 	slli	r16,r16,16
   2c2f8:	b804d43a 	srli	r2,r23,16
   2c2fc:	a72d383a 	mul	r22,r20,fp
   2c300:	1404b03a 	or	r2,r2,r16
   2c304:	1580062e 	bgeu	r2,r22,2c320 <__udivdi3+0x484>
   2c308:	1445883a 	add	r2,r2,r17
   2c30c:	e0ffffc4 	addi	r3,fp,-1
   2c310:	14403836 	bltu	r2,r17,2c3f4 <__udivdi3+0x558>
   2c314:	1580372e 	bgeu	r2,r22,2c3f4 <__udivdi3+0x558>
   2c318:	e73fff84 	addi	fp,fp,-2
   2c31c:	1445883a 	add	r2,r2,r17
   2c320:	15adc83a 	sub	r22,r2,r22
   2c324:	a80b883a 	mov	r5,r21
   2c328:	b009883a 	mov	r4,r22
   2c32c:	002caa80 	call	2caa8 <__umodsi3>
   2c330:	1027883a 	mov	r19,r2
   2c334:	b009883a 	mov	r4,r22
   2c338:	a80b883a 	mov	r5,r21
   2c33c:	002ca440 	call	2ca44 <__udivsi3>
   2c340:	9826943a 	slli	r19,r19,16
   2c344:	a0a1383a 	mul	r16,r20,r2
   2c348:	b93fffcc 	andi	r4,r23,65535
   2c34c:	24c8b03a 	or	r4,r4,r19
   2c350:	2400062e 	bgeu	r4,r16,2c36c <__udivdi3+0x4d0>
   2c354:	2449883a 	add	r4,r4,r17
   2c358:	10ffffc4 	addi	r3,r2,-1
   2c35c:	24402336 	bltu	r4,r17,2c3ec <__udivdi3+0x550>
   2c360:	2400222e 	bgeu	r4,r16,2c3ec <__udivdi3+0x550>
   2c364:	10bfff84 	addi	r2,r2,-2
   2c368:	2449883a 	add	r4,r4,r17
   2c36c:	e038943a 	slli	fp,fp,16
   2c370:	2421c83a 	sub	r16,r4,r16
   2c374:	e086b03a 	or	r3,fp,r2
   2c378:	003f4306 	br	2c088 <_gp+0xffff25b8>
   2c37c:	2005883a 	mov	r2,r4
   2c380:	003f6906 	br	2c128 <_gp+0xffff2658>
   2c384:	1805883a 	mov	r2,r3
   2c388:	003f0f06 	br	2bfc8 <_gp+0xffff24f8>
   2c38c:	1806943a 	slli	r3,r3,16
   2c390:	9d66983a 	sll	r19,r19,r21
   2c394:	39ffffcc 	andi	r7,r7,65535
   2c398:	19c7883a 	add	r3,r3,r7
   2c39c:	98ffc32e 	bgeu	r19,r3,2c2ac <_gp+0xffff27dc>
   2c3a0:	10bfffc4 	addi	r2,r2,-1
   2c3a4:	003fc106 	br	2c2ac <_gp+0xffff27dc>
   2c3a8:	00800604 	movi	r2,24
   2c3ac:	003f1106 	br	2bff4 <_gp+0xffff2524>
   2c3b0:	00800604 	movi	r2,24
   2c3b4:	003f2706 	br	2c054 <_gp+0xffff2584>
   2c3b8:	00800604 	movi	r2,24
   2c3bc:	003ece06 	br	2bef8 <_gp+0xffff2428>
   2c3c0:	0007883a 	mov	r3,zero
   2c3c4:	00800044 	movi	r2,1
   2c3c8:	003f5c06 	br	2c13c <_gp+0xffff266c>
   2c3cc:	813fa12e 	bgeu	r16,r4,2c254 <_gp+0xffff2784>
   2c3d0:	10bfff84 	addi	r2,r2,-2
   2c3d4:	85e1883a 	add	r16,r16,r23
   2c3d8:	003f9f06 	br	2c258 <_gp+0xffff2788>
   2c3dc:	1c7f8a2e 	bgeu	r3,r17,2c208 <_gp+0xffff2738>
   2c3e0:	31bfff84 	addi	r6,r6,-2
   2c3e4:	1dc7883a 	add	r3,r3,r23
   2c3e8:	003f8806 	br	2c20c <_gp+0xffff273c>
   2c3ec:	1805883a 	mov	r2,r3
   2c3f0:	003fde06 	br	2c36c <_gp+0xffff289c>
   2c3f4:	1839883a 	mov	fp,r3
   2c3f8:	003fc906 	br	2c320 <_gp+0xffff2850>
   2c3fc:	b5bfff84 	addi	r22,r22,-2
   2c400:	2449883a 	add	r4,r4,r17
   2c404:	003f3406 	br	2c0d8 <_gp+0xffff2608>
   2c408:	b5bfff84 	addi	r22,r22,-2
   2c40c:	1445883a 	add	r2,r2,r17
   2c410:	003edb06 	br	2bf80 <_gp+0xffff24b0>

0002c414 <__umoddi3>:
   2c414:	defff404 	addi	sp,sp,-48
   2c418:	df000a15 	stw	fp,40(sp)
   2c41c:	dc400315 	stw	r17,12(sp)
   2c420:	dc000215 	stw	r16,8(sp)
   2c424:	dfc00b15 	stw	ra,44(sp)
   2c428:	ddc00915 	stw	r23,36(sp)
   2c42c:	dd800815 	stw	r22,32(sp)
   2c430:	dd400715 	stw	r21,28(sp)
   2c434:	dd000615 	stw	r20,24(sp)
   2c438:	dcc00515 	stw	r19,20(sp)
   2c43c:	dc800415 	stw	r18,16(sp)
   2c440:	2021883a 	mov	r16,r4
   2c444:	2823883a 	mov	r17,r5
   2c448:	2839883a 	mov	fp,r5
   2c44c:	38003c1e 	bne	r7,zero,2c540 <__umoddi3+0x12c>
   2c450:	3027883a 	mov	r19,r6
   2c454:	2029883a 	mov	r20,r4
   2c458:	2980512e 	bgeu	r5,r6,2c5a0 <__umoddi3+0x18c>
   2c45c:	00bfffd4 	movui	r2,65535
   2c460:	11809a36 	bltu	r2,r6,2c6cc <__umoddi3+0x2b8>
   2c464:	01003fc4 	movi	r4,255
   2c468:	2189803a 	cmpltu	r4,r4,r6
   2c46c:	200890fa 	slli	r4,r4,3
   2c470:	3104d83a 	srl	r2,r6,r4
   2c474:	00c000f4 	movhi	r3,3
   2c478:	18ff4ac4 	addi	r3,r3,-725
   2c47c:	1885883a 	add	r2,r3,r2
   2c480:	10c00003 	ldbu	r3,0(r2)
   2c484:	00800804 	movi	r2,32
   2c488:	1909883a 	add	r4,r3,r4
   2c48c:	1125c83a 	sub	r18,r2,r4
   2c490:	90000526 	beq	r18,zero,2c4a8 <__umoddi3+0x94>
   2c494:	8ca2983a 	sll	r17,r17,r18
   2c498:	8108d83a 	srl	r4,r16,r4
   2c49c:	34a6983a 	sll	r19,r6,r18
   2c4a0:	84a8983a 	sll	r20,r16,r18
   2c4a4:	2478b03a 	or	fp,r4,r17
   2c4a8:	982ed43a 	srli	r23,r19,16
   2c4ac:	e009883a 	mov	r4,fp
   2c4b0:	9dbfffcc 	andi	r22,r19,65535
   2c4b4:	b80b883a 	mov	r5,r23
   2c4b8:	002caa80 	call	2caa8 <__umodsi3>
   2c4bc:	e009883a 	mov	r4,fp
   2c4c0:	b80b883a 	mov	r5,r23
   2c4c4:	102b883a 	mov	r21,r2
   2c4c8:	002ca440 	call	2ca44 <__udivsi3>
   2c4cc:	a806943a 	slli	r3,r21,16
   2c4d0:	a008d43a 	srli	r4,r20,16
   2c4d4:	b085383a 	mul	r2,r22,r2
   2c4d8:	20c8b03a 	or	r4,r4,r3
   2c4dc:	2080032e 	bgeu	r4,r2,2c4ec <__umoddi3+0xd8>
   2c4e0:	24c9883a 	add	r4,r4,r19
   2c4e4:	24c00136 	bltu	r4,r19,2c4ec <__umoddi3+0xd8>
   2c4e8:	20811036 	bltu	r4,r2,2c92c <__umoddi3+0x518>
   2c4ec:	20abc83a 	sub	r21,r4,r2
   2c4f0:	b80b883a 	mov	r5,r23
   2c4f4:	a809883a 	mov	r4,r21
   2c4f8:	002caa80 	call	2caa8 <__umodsi3>
   2c4fc:	1023883a 	mov	r17,r2
   2c500:	b80b883a 	mov	r5,r23
   2c504:	a809883a 	mov	r4,r21
   2c508:	002ca440 	call	2ca44 <__udivsi3>
   2c50c:	8822943a 	slli	r17,r17,16
   2c510:	b085383a 	mul	r2,r22,r2
   2c514:	a0ffffcc 	andi	r3,r20,65535
   2c518:	1c46b03a 	or	r3,r3,r17
   2c51c:	1880042e 	bgeu	r3,r2,2c530 <__umoddi3+0x11c>
   2c520:	1cc7883a 	add	r3,r3,r19
   2c524:	1cc00236 	bltu	r3,r19,2c530 <__umoddi3+0x11c>
   2c528:	1880012e 	bgeu	r3,r2,2c530 <__umoddi3+0x11c>
   2c52c:	1cc7883a 	add	r3,r3,r19
   2c530:	1885c83a 	sub	r2,r3,r2
   2c534:	1484d83a 	srl	r2,r2,r18
   2c538:	0007883a 	mov	r3,zero
   2c53c:	00004f06 	br	2c67c <__umoddi3+0x268>
   2c540:	29c04c36 	bltu	r5,r7,2c674 <__umoddi3+0x260>
   2c544:	00bfffd4 	movui	r2,65535
   2c548:	11c0582e 	bgeu	r2,r7,2c6ac <__umoddi3+0x298>
   2c54c:	00804034 	movhi	r2,256
   2c550:	10bfffc4 	addi	r2,r2,-1
   2c554:	11c0e736 	bltu	r2,r7,2c8f4 <__umoddi3+0x4e0>
   2c558:	01000404 	movi	r4,16
   2c55c:	3904d83a 	srl	r2,r7,r4
   2c560:	00c000f4 	movhi	r3,3
   2c564:	18ff4ac4 	addi	r3,r3,-725
   2c568:	1885883a 	add	r2,r3,r2
   2c56c:	14c00003 	ldbu	r19,0(r2)
   2c570:	00c00804 	movi	r3,32
   2c574:	9927883a 	add	r19,r19,r4
   2c578:	1ce9c83a 	sub	r20,r3,r19
   2c57c:	a000581e 	bne	r20,zero,2c6e0 <__umoddi3+0x2cc>
   2c580:	3c400136 	bltu	r7,r17,2c588 <__umoddi3+0x174>
   2c584:	8180eb36 	bltu	r16,r6,2c934 <__umoddi3+0x520>
   2c588:	8185c83a 	sub	r2,r16,r6
   2c58c:	89e3c83a 	sub	r17,r17,r7
   2c590:	8089803a 	cmpltu	r4,r16,r2
   2c594:	8939c83a 	sub	fp,r17,r4
   2c598:	e007883a 	mov	r3,fp
   2c59c:	00003706 	br	2c67c <__umoddi3+0x268>
   2c5a0:	3000041e 	bne	r6,zero,2c5b4 <__umoddi3+0x1a0>
   2c5a4:	000b883a 	mov	r5,zero
   2c5a8:	01000044 	movi	r4,1
   2c5ac:	002ca440 	call	2ca44 <__udivsi3>
   2c5b0:	1027883a 	mov	r19,r2
   2c5b4:	00bfffd4 	movui	r2,65535
   2c5b8:	14c0402e 	bgeu	r2,r19,2c6bc <__umoddi3+0x2a8>
   2c5bc:	00804034 	movhi	r2,256
   2c5c0:	10bfffc4 	addi	r2,r2,-1
   2c5c4:	14c0cd36 	bltu	r2,r19,2c8fc <__umoddi3+0x4e8>
   2c5c8:	00800404 	movi	r2,16
   2c5cc:	9886d83a 	srl	r3,r19,r2
   2c5d0:	010000f4 	movhi	r4,3
   2c5d4:	213f4ac4 	addi	r4,r4,-725
   2c5d8:	20c7883a 	add	r3,r4,r3
   2c5dc:	18c00003 	ldbu	r3,0(r3)
   2c5e0:	1887883a 	add	r3,r3,r2
   2c5e4:	00800804 	movi	r2,32
   2c5e8:	10e5c83a 	sub	r18,r2,r3
   2c5ec:	9000901e 	bne	r18,zero,2c830 <__umoddi3+0x41c>
   2c5f0:	982cd43a 	srli	r22,r19,16
   2c5f4:	8ce3c83a 	sub	r17,r17,r19
   2c5f8:	9d7fffcc 	andi	r21,r19,65535
   2c5fc:	b00b883a 	mov	r5,r22
   2c600:	8809883a 	mov	r4,r17
   2c604:	002caa80 	call	2caa8 <__umodsi3>
   2c608:	8809883a 	mov	r4,r17
   2c60c:	b00b883a 	mov	r5,r22
   2c610:	1021883a 	mov	r16,r2
   2c614:	002ca440 	call	2ca44 <__udivsi3>
   2c618:	8006943a 	slli	r3,r16,16
   2c61c:	a008d43a 	srli	r4,r20,16
   2c620:	1545383a 	mul	r2,r2,r21
   2c624:	20c8b03a 	or	r4,r4,r3
   2c628:	2080042e 	bgeu	r4,r2,2c63c <__umoddi3+0x228>
   2c62c:	24c9883a 	add	r4,r4,r19
   2c630:	24c00236 	bltu	r4,r19,2c63c <__umoddi3+0x228>
   2c634:	2080012e 	bgeu	r4,r2,2c63c <__umoddi3+0x228>
   2c638:	24c9883a 	add	r4,r4,r19
   2c63c:	20a1c83a 	sub	r16,r4,r2
   2c640:	b00b883a 	mov	r5,r22
   2c644:	8009883a 	mov	r4,r16
   2c648:	002caa80 	call	2caa8 <__umodsi3>
   2c64c:	1023883a 	mov	r17,r2
   2c650:	b00b883a 	mov	r5,r22
   2c654:	8009883a 	mov	r4,r16
   2c658:	002ca440 	call	2ca44 <__udivsi3>
   2c65c:	8822943a 	slli	r17,r17,16
   2c660:	1545383a 	mul	r2,r2,r21
   2c664:	a53fffcc 	andi	r20,r20,65535
   2c668:	a446b03a 	or	r3,r20,r17
   2c66c:	18bfb02e 	bgeu	r3,r2,2c530 <_gp+0xffff2a60>
   2c670:	003fab06 	br	2c520 <_gp+0xffff2a50>
   2c674:	2005883a 	mov	r2,r4
   2c678:	2807883a 	mov	r3,r5
   2c67c:	dfc00b17 	ldw	ra,44(sp)
   2c680:	df000a17 	ldw	fp,40(sp)
   2c684:	ddc00917 	ldw	r23,36(sp)
   2c688:	dd800817 	ldw	r22,32(sp)
   2c68c:	dd400717 	ldw	r21,28(sp)
   2c690:	dd000617 	ldw	r20,24(sp)
   2c694:	dcc00517 	ldw	r19,20(sp)
   2c698:	dc800417 	ldw	r18,16(sp)
   2c69c:	dc400317 	ldw	r17,12(sp)
   2c6a0:	dc000217 	ldw	r16,8(sp)
   2c6a4:	dec00c04 	addi	sp,sp,48
   2c6a8:	f800283a 	ret
   2c6ac:	04c03fc4 	movi	r19,255
   2c6b0:	99c9803a 	cmpltu	r4,r19,r7
   2c6b4:	200890fa 	slli	r4,r4,3
   2c6b8:	003fa806 	br	2c55c <_gp+0xffff2a8c>
   2c6bc:	00803fc4 	movi	r2,255
   2c6c0:	14c5803a 	cmpltu	r2,r2,r19
   2c6c4:	100490fa 	slli	r2,r2,3
   2c6c8:	003fc006 	br	2c5cc <_gp+0xffff2afc>
   2c6cc:	00804034 	movhi	r2,256
   2c6d0:	10bfffc4 	addi	r2,r2,-1
   2c6d4:	11808b36 	bltu	r2,r6,2c904 <__umoddi3+0x4f0>
   2c6d8:	01000404 	movi	r4,16
   2c6dc:	003f6406 	br	2c470 <_gp+0xffff29a0>
   2c6e0:	34c4d83a 	srl	r2,r6,r19
   2c6e4:	3d0e983a 	sll	r7,r7,r20
   2c6e8:	8cf8d83a 	srl	fp,r17,r19
   2c6ec:	8d10983a 	sll	r8,r17,r20
   2c6f0:	38aab03a 	or	r21,r7,r2
   2c6f4:	a82cd43a 	srli	r22,r21,16
   2c6f8:	84e2d83a 	srl	r17,r16,r19
   2c6fc:	e009883a 	mov	r4,fp
   2c700:	b00b883a 	mov	r5,r22
   2c704:	8a22b03a 	or	r17,r17,r8
   2c708:	3524983a 	sll	r18,r6,r20
   2c70c:	002caa80 	call	2caa8 <__umodsi3>
   2c710:	e009883a 	mov	r4,fp
   2c714:	b00b883a 	mov	r5,r22
   2c718:	102f883a 	mov	r23,r2
   2c71c:	002ca440 	call	2ca44 <__udivsi3>
   2c720:	100d883a 	mov	r6,r2
   2c724:	b808943a 	slli	r4,r23,16
   2c728:	aa3fffcc 	andi	r8,r21,65535
   2c72c:	8804d43a 	srli	r2,r17,16
   2c730:	41af383a 	mul	r23,r8,r6
   2c734:	8520983a 	sll	r16,r16,r20
   2c738:	1104b03a 	or	r2,r2,r4
   2c73c:	15c0042e 	bgeu	r2,r23,2c750 <__umoddi3+0x33c>
   2c740:	1545883a 	add	r2,r2,r21
   2c744:	30ffffc4 	addi	r3,r6,-1
   2c748:	1540742e 	bgeu	r2,r21,2c91c <__umoddi3+0x508>
   2c74c:	180d883a 	mov	r6,r3
   2c750:	15efc83a 	sub	r23,r2,r23
   2c754:	b00b883a 	mov	r5,r22
   2c758:	b809883a 	mov	r4,r23
   2c75c:	d9800115 	stw	r6,4(sp)
   2c760:	da000015 	stw	r8,0(sp)
   2c764:	002caa80 	call	2caa8 <__umodsi3>
   2c768:	b00b883a 	mov	r5,r22
   2c76c:	b809883a 	mov	r4,r23
   2c770:	1039883a 	mov	fp,r2
   2c774:	002ca440 	call	2ca44 <__udivsi3>
   2c778:	da000017 	ldw	r8,0(sp)
   2c77c:	e038943a 	slli	fp,fp,16
   2c780:	100b883a 	mov	r5,r2
   2c784:	4089383a 	mul	r4,r8,r2
   2c788:	8a3fffcc 	andi	r8,r17,65535
   2c78c:	4710b03a 	or	r8,r8,fp
   2c790:	d9800117 	ldw	r6,4(sp)
   2c794:	4100042e 	bgeu	r8,r4,2c7a8 <__umoddi3+0x394>
   2c798:	4551883a 	add	r8,r8,r21
   2c79c:	10bfffc4 	addi	r2,r2,-1
   2c7a0:	45405a2e 	bgeu	r8,r21,2c90c <__umoddi3+0x4f8>
   2c7a4:	100b883a 	mov	r5,r2
   2c7a8:	300c943a 	slli	r6,r6,16
   2c7ac:	91ffffcc 	andi	r7,r18,65535
   2c7b0:	9004d43a 	srli	r2,r18,16
   2c7b4:	314cb03a 	or	r6,r6,r5
   2c7b8:	317fffcc 	andi	r5,r6,65535
   2c7bc:	300cd43a 	srli	r6,r6,16
   2c7c0:	29d3383a 	mul	r9,r5,r7
   2c7c4:	288b383a 	mul	r5,r5,r2
   2c7c8:	31cf383a 	mul	r7,r6,r7
   2c7cc:	4806d43a 	srli	r3,r9,16
   2c7d0:	4111c83a 	sub	r8,r8,r4
   2c7d4:	29cb883a 	add	r5,r5,r7
   2c7d8:	194b883a 	add	r5,r3,r5
   2c7dc:	3085383a 	mul	r2,r6,r2
   2c7e0:	29c0022e 	bgeu	r5,r7,2c7ec <__umoddi3+0x3d8>
   2c7e4:	00c00074 	movhi	r3,1
   2c7e8:	10c5883a 	add	r2,r2,r3
   2c7ec:	2808d43a 	srli	r4,r5,16
   2c7f0:	280a943a 	slli	r5,r5,16
   2c7f4:	4a7fffcc 	andi	r9,r9,65535
   2c7f8:	2085883a 	add	r2,r4,r2
   2c7fc:	2a4b883a 	add	r5,r5,r9
   2c800:	40803636 	bltu	r8,r2,2c8dc <__umoddi3+0x4c8>
   2c804:	40804d26 	beq	r8,r2,2c93c <__umoddi3+0x528>
   2c808:	4089c83a 	sub	r4,r8,r2
   2c80c:	280f883a 	mov	r7,r5
   2c810:	81cfc83a 	sub	r7,r16,r7
   2c814:	81c7803a 	cmpltu	r3,r16,r7
   2c818:	20c7c83a 	sub	r3,r4,r3
   2c81c:	1cc4983a 	sll	r2,r3,r19
   2c820:	3d0ed83a 	srl	r7,r7,r20
   2c824:	1d06d83a 	srl	r3,r3,r20
   2c828:	11c4b03a 	or	r2,r2,r7
   2c82c:	003f9306 	br	2c67c <_gp+0xffff2bac>
   2c830:	9ca6983a 	sll	r19,r19,r18
   2c834:	88e8d83a 	srl	r20,r17,r3
   2c838:	80c4d83a 	srl	r2,r16,r3
   2c83c:	982cd43a 	srli	r22,r19,16
   2c840:	8ca2983a 	sll	r17,r17,r18
   2c844:	a009883a 	mov	r4,r20
   2c848:	b00b883a 	mov	r5,r22
   2c84c:	1478b03a 	or	fp,r2,r17
   2c850:	002caa80 	call	2caa8 <__umodsi3>
   2c854:	a009883a 	mov	r4,r20
   2c858:	b00b883a 	mov	r5,r22
   2c85c:	1023883a 	mov	r17,r2
   2c860:	002ca440 	call	2ca44 <__udivsi3>
   2c864:	9d7fffcc 	andi	r21,r19,65535
   2c868:	880a943a 	slli	r5,r17,16
   2c86c:	e008d43a 	srli	r4,fp,16
   2c870:	a885383a 	mul	r2,r21,r2
   2c874:	84a8983a 	sll	r20,r16,r18
   2c878:	2148b03a 	or	r4,r4,r5
   2c87c:	2080042e 	bgeu	r4,r2,2c890 <__umoddi3+0x47c>
   2c880:	24c9883a 	add	r4,r4,r19
   2c884:	24c00236 	bltu	r4,r19,2c890 <__umoddi3+0x47c>
   2c888:	2080012e 	bgeu	r4,r2,2c890 <__umoddi3+0x47c>
   2c88c:	24c9883a 	add	r4,r4,r19
   2c890:	20a3c83a 	sub	r17,r4,r2
   2c894:	b00b883a 	mov	r5,r22
   2c898:	8809883a 	mov	r4,r17
   2c89c:	002caa80 	call	2caa8 <__umodsi3>
   2c8a0:	102f883a 	mov	r23,r2
   2c8a4:	8809883a 	mov	r4,r17
   2c8a8:	b00b883a 	mov	r5,r22
   2c8ac:	002ca440 	call	2ca44 <__udivsi3>
   2c8b0:	b82e943a 	slli	r23,r23,16
   2c8b4:	a885383a 	mul	r2,r21,r2
   2c8b8:	e13fffcc 	andi	r4,fp,65535
   2c8bc:	25c8b03a 	or	r4,r4,r23
   2c8c0:	2080042e 	bgeu	r4,r2,2c8d4 <__umoddi3+0x4c0>
   2c8c4:	24c9883a 	add	r4,r4,r19
   2c8c8:	24c00236 	bltu	r4,r19,2c8d4 <__umoddi3+0x4c0>
   2c8cc:	2080012e 	bgeu	r4,r2,2c8d4 <__umoddi3+0x4c0>
   2c8d0:	24c9883a 	add	r4,r4,r19
   2c8d4:	20a3c83a 	sub	r17,r4,r2
   2c8d8:	003f4806 	br	2c5fc <_gp+0xffff2b2c>
   2c8dc:	2c8fc83a 	sub	r7,r5,r18
   2c8e0:	1545c83a 	sub	r2,r2,r21
   2c8e4:	29cb803a 	cmpltu	r5,r5,r7
   2c8e8:	1145c83a 	sub	r2,r2,r5
   2c8ec:	4089c83a 	sub	r4,r8,r2
   2c8f0:	003fc706 	br	2c810 <_gp+0xffff2d40>
   2c8f4:	01000604 	movi	r4,24
   2c8f8:	003f1806 	br	2c55c <_gp+0xffff2a8c>
   2c8fc:	00800604 	movi	r2,24
   2c900:	003f3206 	br	2c5cc <_gp+0xffff2afc>
   2c904:	01000604 	movi	r4,24
   2c908:	003ed906 	br	2c470 <_gp+0xffff29a0>
   2c90c:	413fa52e 	bgeu	r8,r4,2c7a4 <_gp+0xffff2cd4>
   2c910:	297fff84 	addi	r5,r5,-2
   2c914:	4551883a 	add	r8,r8,r21
   2c918:	003fa306 	br	2c7a8 <_gp+0xffff2cd8>
   2c91c:	15ff8b2e 	bgeu	r2,r23,2c74c <_gp+0xffff2c7c>
   2c920:	31bfff84 	addi	r6,r6,-2
   2c924:	1545883a 	add	r2,r2,r21
   2c928:	003f8906 	br	2c750 <_gp+0xffff2c80>
   2c92c:	24c9883a 	add	r4,r4,r19
   2c930:	003eee06 	br	2c4ec <_gp+0xffff2a1c>
   2c934:	8005883a 	mov	r2,r16
   2c938:	003f1706 	br	2c598 <_gp+0xffff2ac8>
   2c93c:	817fe736 	bltu	r16,r5,2c8dc <_gp+0xffff2e0c>
   2c940:	280f883a 	mov	r7,r5
   2c944:	0009883a 	mov	r4,zero
   2c948:	003fb106 	br	2c810 <_gp+0xffff2d40>

0002c94c <__divsi3>:
   2c94c:	20001b16 	blt	r4,zero,2c9bc <__divsi3+0x70>
   2c950:	000f883a 	mov	r7,zero
   2c954:	28001616 	blt	r5,zero,2c9b0 <__divsi3+0x64>
   2c958:	200d883a 	mov	r6,r4
   2c95c:	29001a2e 	bgeu	r5,r4,2c9c8 <__divsi3+0x7c>
   2c960:	00800804 	movi	r2,32
   2c964:	00c00044 	movi	r3,1
   2c968:	00000106 	br	2c970 <__divsi3+0x24>
   2c96c:	10000d26 	beq	r2,zero,2c9a4 <__divsi3+0x58>
   2c970:	294b883a 	add	r5,r5,r5
   2c974:	10bfffc4 	addi	r2,r2,-1
   2c978:	18c7883a 	add	r3,r3,r3
   2c97c:	293ffb36 	bltu	r5,r4,2c96c <_gp+0xffff2e9c>
   2c980:	0005883a 	mov	r2,zero
   2c984:	18000726 	beq	r3,zero,2c9a4 <__divsi3+0x58>
   2c988:	0005883a 	mov	r2,zero
   2c98c:	31400236 	bltu	r6,r5,2c998 <__divsi3+0x4c>
   2c990:	314dc83a 	sub	r6,r6,r5
   2c994:	10c4b03a 	or	r2,r2,r3
   2c998:	1806d07a 	srli	r3,r3,1
   2c99c:	280ad07a 	srli	r5,r5,1
   2c9a0:	183ffa1e 	bne	r3,zero,2c98c <_gp+0xffff2ebc>
   2c9a4:	38000126 	beq	r7,zero,2c9ac <__divsi3+0x60>
   2c9a8:	0085c83a 	sub	r2,zero,r2
   2c9ac:	f800283a 	ret
   2c9b0:	014bc83a 	sub	r5,zero,r5
   2c9b4:	39c0005c 	xori	r7,r7,1
   2c9b8:	003fe706 	br	2c958 <_gp+0xffff2e88>
   2c9bc:	0109c83a 	sub	r4,zero,r4
   2c9c0:	01c00044 	movi	r7,1
   2c9c4:	003fe306 	br	2c954 <_gp+0xffff2e84>
   2c9c8:	00c00044 	movi	r3,1
   2c9cc:	003fee06 	br	2c988 <_gp+0xffff2eb8>

0002c9d0 <__modsi3>:
   2c9d0:	20001716 	blt	r4,zero,2ca30 <__modsi3+0x60>
   2c9d4:	000f883a 	mov	r7,zero
   2c9d8:	2005883a 	mov	r2,r4
   2c9dc:	28001216 	blt	r5,zero,2ca28 <__modsi3+0x58>
   2c9e0:	2900162e 	bgeu	r5,r4,2ca3c <__modsi3+0x6c>
   2c9e4:	01800804 	movi	r6,32
   2c9e8:	00c00044 	movi	r3,1
   2c9ec:	00000106 	br	2c9f4 <__modsi3+0x24>
   2c9f0:	30000a26 	beq	r6,zero,2ca1c <__modsi3+0x4c>
   2c9f4:	294b883a 	add	r5,r5,r5
   2c9f8:	31bfffc4 	addi	r6,r6,-1
   2c9fc:	18c7883a 	add	r3,r3,r3
   2ca00:	293ffb36 	bltu	r5,r4,2c9f0 <_gp+0xffff2f20>
   2ca04:	18000526 	beq	r3,zero,2ca1c <__modsi3+0x4c>
   2ca08:	1806d07a 	srli	r3,r3,1
   2ca0c:	11400136 	bltu	r2,r5,2ca14 <__modsi3+0x44>
   2ca10:	1145c83a 	sub	r2,r2,r5
   2ca14:	280ad07a 	srli	r5,r5,1
   2ca18:	183ffb1e 	bne	r3,zero,2ca08 <_gp+0xffff2f38>
   2ca1c:	38000126 	beq	r7,zero,2ca24 <__modsi3+0x54>
   2ca20:	0085c83a 	sub	r2,zero,r2
   2ca24:	f800283a 	ret
   2ca28:	014bc83a 	sub	r5,zero,r5
   2ca2c:	003fec06 	br	2c9e0 <_gp+0xffff2f10>
   2ca30:	0109c83a 	sub	r4,zero,r4
   2ca34:	01c00044 	movi	r7,1
   2ca38:	003fe706 	br	2c9d8 <_gp+0xffff2f08>
   2ca3c:	00c00044 	movi	r3,1
   2ca40:	003ff106 	br	2ca08 <_gp+0xffff2f38>

0002ca44 <__udivsi3>:
   2ca44:	200d883a 	mov	r6,r4
   2ca48:	2900152e 	bgeu	r5,r4,2caa0 <__udivsi3+0x5c>
   2ca4c:	28001416 	blt	r5,zero,2caa0 <__udivsi3+0x5c>
   2ca50:	00800804 	movi	r2,32
   2ca54:	00c00044 	movi	r3,1
   2ca58:	00000206 	br	2ca64 <__udivsi3+0x20>
   2ca5c:	10000e26 	beq	r2,zero,2ca98 <__udivsi3+0x54>
   2ca60:	28000516 	blt	r5,zero,2ca78 <__udivsi3+0x34>
   2ca64:	294b883a 	add	r5,r5,r5
   2ca68:	10bfffc4 	addi	r2,r2,-1
   2ca6c:	18c7883a 	add	r3,r3,r3
   2ca70:	293ffa36 	bltu	r5,r4,2ca5c <_gp+0xffff2f8c>
   2ca74:	18000826 	beq	r3,zero,2ca98 <__udivsi3+0x54>
   2ca78:	0005883a 	mov	r2,zero
   2ca7c:	31400236 	bltu	r6,r5,2ca88 <__udivsi3+0x44>
   2ca80:	314dc83a 	sub	r6,r6,r5
   2ca84:	10c4b03a 	or	r2,r2,r3
   2ca88:	1806d07a 	srli	r3,r3,1
   2ca8c:	280ad07a 	srli	r5,r5,1
   2ca90:	183ffa1e 	bne	r3,zero,2ca7c <_gp+0xffff2fac>
   2ca94:	f800283a 	ret
   2ca98:	0005883a 	mov	r2,zero
   2ca9c:	f800283a 	ret
   2caa0:	00c00044 	movi	r3,1
   2caa4:	003ff406 	br	2ca78 <_gp+0xffff2fa8>

0002caa8 <__umodsi3>:
   2caa8:	2005883a 	mov	r2,r4
   2caac:	2900122e 	bgeu	r5,r4,2caf8 <__umodsi3+0x50>
   2cab0:	28001116 	blt	r5,zero,2caf8 <__umodsi3+0x50>
   2cab4:	01800804 	movi	r6,32
   2cab8:	00c00044 	movi	r3,1
   2cabc:	00000206 	br	2cac8 <__umodsi3+0x20>
   2cac0:	30000c26 	beq	r6,zero,2caf4 <__umodsi3+0x4c>
   2cac4:	28000516 	blt	r5,zero,2cadc <__umodsi3+0x34>
   2cac8:	294b883a 	add	r5,r5,r5
   2cacc:	31bfffc4 	addi	r6,r6,-1
   2cad0:	18c7883a 	add	r3,r3,r3
   2cad4:	293ffa36 	bltu	r5,r4,2cac0 <_gp+0xffff2ff0>
   2cad8:	18000626 	beq	r3,zero,2caf4 <__umodsi3+0x4c>
   2cadc:	1806d07a 	srli	r3,r3,1
   2cae0:	11400136 	bltu	r2,r5,2cae8 <__umodsi3+0x40>
   2cae4:	1145c83a 	sub	r2,r2,r5
   2cae8:	280ad07a 	srli	r5,r5,1
   2caec:	183ffb1e 	bne	r3,zero,2cadc <_gp+0xffff300c>
   2caf0:	f800283a 	ret
   2caf4:	f800283a 	ret
   2caf8:	00c00044 	movi	r3,1
   2cafc:	003ff706 	br	2cadc <_gp+0xffff300c>

0002cb00 <__divdf3>:
   2cb00:	defff204 	addi	sp,sp,-56
   2cb04:	dd400915 	stw	r21,36(sp)
   2cb08:	282ad53a 	srli	r21,r5,20
   2cb0c:	dd000815 	stw	r20,32(sp)
   2cb10:	2828d7fa 	srli	r20,r5,31
   2cb14:	dc000415 	stw	r16,16(sp)
   2cb18:	04000434 	movhi	r16,16
   2cb1c:	df000c15 	stw	fp,48(sp)
   2cb20:	843fffc4 	addi	r16,r16,-1
   2cb24:	dfc00d15 	stw	ra,52(sp)
   2cb28:	ddc00b15 	stw	r23,44(sp)
   2cb2c:	dd800a15 	stw	r22,40(sp)
   2cb30:	dcc00715 	stw	r19,28(sp)
   2cb34:	dc800615 	stw	r18,24(sp)
   2cb38:	dc400515 	stw	r17,20(sp)
   2cb3c:	ad41ffcc 	andi	r21,r21,2047
   2cb40:	2c20703a 	and	r16,r5,r16
   2cb44:	a7003fcc 	andi	fp,r20,255
   2cb48:	a8006126 	beq	r21,zero,2ccd0 <__divdf3+0x1d0>
   2cb4c:	0081ffc4 	movi	r2,2047
   2cb50:	2025883a 	mov	r18,r4
   2cb54:	a8803726 	beq	r21,r2,2cc34 <__divdf3+0x134>
   2cb58:	80800434 	orhi	r2,r16,16
   2cb5c:	100490fa 	slli	r2,r2,3
   2cb60:	2020d77a 	srli	r16,r4,29
   2cb64:	202490fa 	slli	r18,r4,3
   2cb68:	ad7f0044 	addi	r21,r21,-1023
   2cb6c:	80a0b03a 	or	r16,r16,r2
   2cb70:	0027883a 	mov	r19,zero
   2cb74:	0013883a 	mov	r9,zero
   2cb78:	3804d53a 	srli	r2,r7,20
   2cb7c:	382cd7fa 	srli	r22,r7,31
   2cb80:	04400434 	movhi	r17,16
   2cb84:	8c7fffc4 	addi	r17,r17,-1
   2cb88:	1081ffcc 	andi	r2,r2,2047
   2cb8c:	3011883a 	mov	r8,r6
   2cb90:	3c62703a 	and	r17,r7,r17
   2cb94:	b5c03fcc 	andi	r23,r22,255
   2cb98:	10006c26 	beq	r2,zero,2cd4c <__divdf3+0x24c>
   2cb9c:	00c1ffc4 	movi	r3,2047
   2cba0:	10c06426 	beq	r2,r3,2cd34 <__divdf3+0x234>
   2cba4:	88c00434 	orhi	r3,r17,16
   2cba8:	180690fa 	slli	r3,r3,3
   2cbac:	3022d77a 	srli	r17,r6,29
   2cbb0:	301090fa 	slli	r8,r6,3
   2cbb4:	10bf0044 	addi	r2,r2,-1023
   2cbb8:	88e2b03a 	or	r17,r17,r3
   2cbbc:	000f883a 	mov	r7,zero
   2cbc0:	a58cf03a 	xor	r6,r20,r22
   2cbc4:	3cc8b03a 	or	r4,r7,r19
   2cbc8:	a8abc83a 	sub	r21,r21,r2
   2cbcc:	008003c4 	movi	r2,15
   2cbd0:	3007883a 	mov	r3,r6
   2cbd4:	34c03fcc 	andi	r19,r6,255
   2cbd8:	11009036 	bltu	r2,r4,2ce1c <__divdf3+0x31c>
   2cbdc:	200890ba 	slli	r4,r4,2
   2cbe0:	008000f4 	movhi	r2,3
   2cbe4:	10b2fd04 	addi	r2,r2,-13324
   2cbe8:	2089883a 	add	r4,r4,r2
   2cbec:	20800017 	ldw	r2,0(r4)
   2cbf0:	1000683a 	jmp	r2
   2cbf4:	0002ce1c 	xori	zero,zero,2872
   2cbf8:	0002cc6c 	andhi	zero,zero,2865
   2cbfc:	0002ce0c 	andi	zero,zero,2872
   2cc00:	0002cc60 	cmpeqi	zero,zero,2865
   2cc04:	0002ce0c 	andi	zero,zero,2872
   2cc08:	0002cde0 	cmpeqi	zero,zero,2871
   2cc0c:	0002ce0c 	andi	zero,zero,2872
   2cc10:	0002cc60 	cmpeqi	zero,zero,2865
   2cc14:	0002cc6c 	andhi	zero,zero,2865
   2cc18:	0002cc6c 	andhi	zero,zero,2865
   2cc1c:	0002cde0 	cmpeqi	zero,zero,2871
   2cc20:	0002cc60 	cmpeqi	zero,zero,2865
   2cc24:	0002cc50 	cmplti	zero,zero,2865
   2cc28:	0002cc50 	cmplti	zero,zero,2865
   2cc2c:	0002cc50 	cmplti	zero,zero,2865
   2cc30:	0002d100 	call	2d10 <__reset-0x1d2f0>
   2cc34:	2404b03a 	or	r2,r4,r16
   2cc38:	1000661e 	bne	r2,zero,2cdd4 <__divdf3+0x2d4>
   2cc3c:	04c00204 	movi	r19,8
   2cc40:	0021883a 	mov	r16,zero
   2cc44:	0025883a 	mov	r18,zero
   2cc48:	02400084 	movi	r9,2
   2cc4c:	003fca06 	br	2cb78 <_gp+0xffff30a8>
   2cc50:	8023883a 	mov	r17,r16
   2cc54:	9011883a 	mov	r8,r18
   2cc58:	e02f883a 	mov	r23,fp
   2cc5c:	480f883a 	mov	r7,r9
   2cc60:	00800084 	movi	r2,2
   2cc64:	3881311e 	bne	r7,r2,2d12c <__divdf3+0x62c>
   2cc68:	b827883a 	mov	r19,r23
   2cc6c:	98c0004c 	andi	r3,r19,1
   2cc70:	0081ffc4 	movi	r2,2047
   2cc74:	000b883a 	mov	r5,zero
   2cc78:	0025883a 	mov	r18,zero
   2cc7c:	1004953a 	slli	r2,r2,20
   2cc80:	18c03fcc 	andi	r3,r3,255
   2cc84:	04400434 	movhi	r17,16
   2cc88:	8c7fffc4 	addi	r17,r17,-1
   2cc8c:	180697fa 	slli	r3,r3,31
   2cc90:	2c4a703a 	and	r5,r5,r17
   2cc94:	288ab03a 	or	r5,r5,r2
   2cc98:	28c6b03a 	or	r3,r5,r3
   2cc9c:	9005883a 	mov	r2,r18
   2cca0:	dfc00d17 	ldw	ra,52(sp)
   2cca4:	df000c17 	ldw	fp,48(sp)
   2cca8:	ddc00b17 	ldw	r23,44(sp)
   2ccac:	dd800a17 	ldw	r22,40(sp)
   2ccb0:	dd400917 	ldw	r21,36(sp)
   2ccb4:	dd000817 	ldw	r20,32(sp)
   2ccb8:	dcc00717 	ldw	r19,28(sp)
   2ccbc:	dc800617 	ldw	r18,24(sp)
   2ccc0:	dc400517 	ldw	r17,20(sp)
   2ccc4:	dc000417 	ldw	r16,16(sp)
   2ccc8:	dec00e04 	addi	sp,sp,56
   2cccc:	f800283a 	ret
   2ccd0:	2404b03a 	or	r2,r4,r16
   2ccd4:	2027883a 	mov	r19,r4
   2ccd8:	10003926 	beq	r2,zero,2cdc0 <__divdf3+0x2c0>
   2ccdc:	80012e26 	beq	r16,zero,2d198 <__divdf3+0x698>
   2cce0:	8009883a 	mov	r4,r16
   2cce4:	d9800315 	stw	r6,12(sp)
   2cce8:	d9c00215 	stw	r7,8(sp)
   2ccec:	0022d400 	call	22d40 <__clzsi2>
   2ccf0:	d9800317 	ldw	r6,12(sp)
   2ccf4:	d9c00217 	ldw	r7,8(sp)
   2ccf8:	113ffd44 	addi	r4,r2,-11
   2ccfc:	00c00704 	movi	r3,28
   2cd00:	19012116 	blt	r3,r4,2d188 <__divdf3+0x688>
   2cd04:	00c00744 	movi	r3,29
   2cd08:	147ffe04 	addi	r17,r2,-8
   2cd0c:	1907c83a 	sub	r3,r3,r4
   2cd10:	8460983a 	sll	r16,r16,r17
   2cd14:	98c6d83a 	srl	r3,r19,r3
   2cd18:	9c64983a 	sll	r18,r19,r17
   2cd1c:	1c20b03a 	or	r16,r3,r16
   2cd20:	1080fcc4 	addi	r2,r2,1011
   2cd24:	00abc83a 	sub	r21,zero,r2
   2cd28:	0027883a 	mov	r19,zero
   2cd2c:	0013883a 	mov	r9,zero
   2cd30:	003f9106 	br	2cb78 <_gp+0xffff30a8>
   2cd34:	3446b03a 	or	r3,r6,r17
   2cd38:	18001f1e 	bne	r3,zero,2cdb8 <__divdf3+0x2b8>
   2cd3c:	0023883a 	mov	r17,zero
   2cd40:	0011883a 	mov	r8,zero
   2cd44:	01c00084 	movi	r7,2
   2cd48:	003f9d06 	br	2cbc0 <_gp+0xffff30f0>
   2cd4c:	3446b03a 	or	r3,r6,r17
   2cd50:	18001526 	beq	r3,zero,2cda8 <__divdf3+0x2a8>
   2cd54:	88011b26 	beq	r17,zero,2d1c4 <__divdf3+0x6c4>
   2cd58:	8809883a 	mov	r4,r17
   2cd5c:	d9800315 	stw	r6,12(sp)
   2cd60:	da400115 	stw	r9,4(sp)
   2cd64:	0022d400 	call	22d40 <__clzsi2>
   2cd68:	d9800317 	ldw	r6,12(sp)
   2cd6c:	da400117 	ldw	r9,4(sp)
   2cd70:	113ffd44 	addi	r4,r2,-11
   2cd74:	00c00704 	movi	r3,28
   2cd78:	19010e16 	blt	r3,r4,2d1b4 <__divdf3+0x6b4>
   2cd7c:	00c00744 	movi	r3,29
   2cd80:	123ffe04 	addi	r8,r2,-8
   2cd84:	1907c83a 	sub	r3,r3,r4
   2cd88:	8a22983a 	sll	r17,r17,r8
   2cd8c:	30c6d83a 	srl	r3,r6,r3
   2cd90:	3210983a 	sll	r8,r6,r8
   2cd94:	1c62b03a 	or	r17,r3,r17
   2cd98:	1080fcc4 	addi	r2,r2,1011
   2cd9c:	0085c83a 	sub	r2,zero,r2
   2cda0:	000f883a 	mov	r7,zero
   2cda4:	003f8606 	br	2cbc0 <_gp+0xffff30f0>
   2cda8:	0023883a 	mov	r17,zero
   2cdac:	0011883a 	mov	r8,zero
   2cdb0:	01c00044 	movi	r7,1
   2cdb4:	003f8206 	br	2cbc0 <_gp+0xffff30f0>
   2cdb8:	01c000c4 	movi	r7,3
   2cdbc:	003f8006 	br	2cbc0 <_gp+0xffff30f0>
   2cdc0:	04c00104 	movi	r19,4
   2cdc4:	0021883a 	mov	r16,zero
   2cdc8:	0025883a 	mov	r18,zero
   2cdcc:	02400044 	movi	r9,1
   2cdd0:	003f6906 	br	2cb78 <_gp+0xffff30a8>
   2cdd4:	04c00304 	movi	r19,12
   2cdd8:	024000c4 	movi	r9,3
   2cddc:	003f6606 	br	2cb78 <_gp+0xffff30a8>
   2cde0:	01400434 	movhi	r5,16
   2cde4:	0007883a 	mov	r3,zero
   2cde8:	297fffc4 	addi	r5,r5,-1
   2cdec:	04bfffc4 	movi	r18,-1
   2cdf0:	0081ffc4 	movi	r2,2047
   2cdf4:	003fa106 	br	2cc7c <_gp+0xffff31ac>
   2cdf8:	00c00044 	movi	r3,1
   2cdfc:	1887c83a 	sub	r3,r3,r2
   2ce00:	01000e04 	movi	r4,56
   2ce04:	20c1210e 	bge	r4,r3,2d28c <__divdf3+0x78c>
   2ce08:	98c0004c 	andi	r3,r19,1
   2ce0c:	0005883a 	mov	r2,zero
   2ce10:	000b883a 	mov	r5,zero
   2ce14:	0025883a 	mov	r18,zero
   2ce18:	003f9806 	br	2cc7c <_gp+0xffff31ac>
   2ce1c:	8c00fd36 	bltu	r17,r16,2d214 <__divdf3+0x714>
   2ce20:	8440fb26 	beq	r16,r17,2d210 <__divdf3+0x710>
   2ce24:	8007883a 	mov	r3,r16
   2ce28:	ad7fffc4 	addi	r21,r21,-1
   2ce2c:	0021883a 	mov	r16,zero
   2ce30:	4004d63a 	srli	r2,r8,24
   2ce34:	8822923a 	slli	r17,r17,8
   2ce38:	1809883a 	mov	r4,r3
   2ce3c:	402c923a 	slli	r22,r8,8
   2ce40:	88b8b03a 	or	fp,r17,r2
   2ce44:	e028d43a 	srli	r20,fp,16
   2ce48:	d8c00015 	stw	r3,0(sp)
   2ce4c:	e5ffffcc 	andi	r23,fp,65535
   2ce50:	a00b883a 	mov	r5,r20
   2ce54:	002ca440 	call	2ca44 <__udivsi3>
   2ce58:	d8c00017 	ldw	r3,0(sp)
   2ce5c:	a00b883a 	mov	r5,r20
   2ce60:	d8800315 	stw	r2,12(sp)
   2ce64:	1809883a 	mov	r4,r3
   2ce68:	002caa80 	call	2caa8 <__umodsi3>
   2ce6c:	d9800317 	ldw	r6,12(sp)
   2ce70:	1006943a 	slli	r3,r2,16
   2ce74:	9004d43a 	srli	r2,r18,16
   2ce78:	b9a3383a 	mul	r17,r23,r6
   2ce7c:	10c4b03a 	or	r2,r2,r3
   2ce80:	1440062e 	bgeu	r2,r17,2ce9c <__divdf3+0x39c>
   2ce84:	1705883a 	add	r2,r2,fp
   2ce88:	30ffffc4 	addi	r3,r6,-1
   2ce8c:	1700ee36 	bltu	r2,fp,2d248 <__divdf3+0x748>
   2ce90:	1440ed2e 	bgeu	r2,r17,2d248 <__divdf3+0x748>
   2ce94:	31bfff84 	addi	r6,r6,-2
   2ce98:	1705883a 	add	r2,r2,fp
   2ce9c:	1463c83a 	sub	r17,r2,r17
   2cea0:	a00b883a 	mov	r5,r20
   2cea4:	8809883a 	mov	r4,r17
   2cea8:	d9800315 	stw	r6,12(sp)
   2ceac:	002ca440 	call	2ca44 <__udivsi3>
   2ceb0:	a00b883a 	mov	r5,r20
   2ceb4:	8809883a 	mov	r4,r17
   2ceb8:	d8800215 	stw	r2,8(sp)
   2cebc:	002caa80 	call	2caa8 <__umodsi3>
   2cec0:	d9c00217 	ldw	r7,8(sp)
   2cec4:	1004943a 	slli	r2,r2,16
   2cec8:	94bfffcc 	andi	r18,r18,65535
   2cecc:	b9d1383a 	mul	r8,r23,r7
   2ced0:	90a4b03a 	or	r18,r18,r2
   2ced4:	d9800317 	ldw	r6,12(sp)
   2ced8:	9200062e 	bgeu	r18,r8,2cef4 <__divdf3+0x3f4>
   2cedc:	9725883a 	add	r18,r18,fp
   2cee0:	38bfffc4 	addi	r2,r7,-1
   2cee4:	9700d636 	bltu	r18,fp,2d240 <__divdf3+0x740>
   2cee8:	9200d52e 	bgeu	r18,r8,2d240 <__divdf3+0x740>
   2ceec:	39ffff84 	addi	r7,r7,-2
   2cef0:	9725883a 	add	r18,r18,fp
   2cef4:	3004943a 	slli	r2,r6,16
   2cef8:	b012d43a 	srli	r9,r22,16
   2cefc:	b1bfffcc 	andi	r6,r22,65535
   2cf00:	11e2b03a 	or	r17,r2,r7
   2cf04:	8806d43a 	srli	r3,r17,16
   2cf08:	893fffcc 	andi	r4,r17,65535
   2cf0c:	218b383a 	mul	r5,r4,r6
   2cf10:	30c5383a 	mul	r2,r6,r3
   2cf14:	2249383a 	mul	r4,r4,r9
   2cf18:	280ed43a 	srli	r7,r5,16
   2cf1c:	9225c83a 	sub	r18,r18,r8
   2cf20:	2089883a 	add	r4,r4,r2
   2cf24:	3909883a 	add	r4,r7,r4
   2cf28:	1a47383a 	mul	r3,r3,r9
   2cf2c:	2080022e 	bgeu	r4,r2,2cf38 <__divdf3+0x438>
   2cf30:	00800074 	movhi	r2,1
   2cf34:	1887883a 	add	r3,r3,r2
   2cf38:	2004d43a 	srli	r2,r4,16
   2cf3c:	2008943a 	slli	r4,r4,16
   2cf40:	297fffcc 	andi	r5,r5,65535
   2cf44:	10c7883a 	add	r3,r2,r3
   2cf48:	2149883a 	add	r4,r4,r5
   2cf4c:	90c0a536 	bltu	r18,r3,2d1e4 <__divdf3+0x6e4>
   2cf50:	90c0bf26 	beq	r18,r3,2d250 <__divdf3+0x750>
   2cf54:	90c7c83a 	sub	r3,r18,r3
   2cf58:	810fc83a 	sub	r7,r16,r4
   2cf5c:	81e5803a 	cmpltu	r18,r16,r7
   2cf60:	1ca5c83a 	sub	r18,r3,r18
   2cf64:	e480c126 	beq	fp,r18,2d26c <__divdf3+0x76c>
   2cf68:	a00b883a 	mov	r5,r20
   2cf6c:	9009883a 	mov	r4,r18
   2cf70:	d9800315 	stw	r6,12(sp)
   2cf74:	d9c00215 	stw	r7,8(sp)
   2cf78:	da400115 	stw	r9,4(sp)
   2cf7c:	002ca440 	call	2ca44 <__udivsi3>
   2cf80:	a00b883a 	mov	r5,r20
   2cf84:	9009883a 	mov	r4,r18
   2cf88:	d8800015 	stw	r2,0(sp)
   2cf8c:	002caa80 	call	2caa8 <__umodsi3>
   2cf90:	d9c00217 	ldw	r7,8(sp)
   2cf94:	da000017 	ldw	r8,0(sp)
   2cf98:	1006943a 	slli	r3,r2,16
   2cf9c:	3804d43a 	srli	r2,r7,16
   2cfa0:	ba21383a 	mul	r16,r23,r8
   2cfa4:	d9800317 	ldw	r6,12(sp)
   2cfa8:	10c4b03a 	or	r2,r2,r3
   2cfac:	da400117 	ldw	r9,4(sp)
   2cfb0:	1400062e 	bgeu	r2,r16,2cfcc <__divdf3+0x4cc>
   2cfb4:	1705883a 	add	r2,r2,fp
   2cfb8:	40ffffc4 	addi	r3,r8,-1
   2cfbc:	1700ad36 	bltu	r2,fp,2d274 <__divdf3+0x774>
   2cfc0:	1400ac2e 	bgeu	r2,r16,2d274 <__divdf3+0x774>
   2cfc4:	423fff84 	addi	r8,r8,-2
   2cfc8:	1705883a 	add	r2,r2,fp
   2cfcc:	1421c83a 	sub	r16,r2,r16
   2cfd0:	a00b883a 	mov	r5,r20
   2cfd4:	8009883a 	mov	r4,r16
   2cfd8:	d9800315 	stw	r6,12(sp)
   2cfdc:	d9c00215 	stw	r7,8(sp)
   2cfe0:	da000015 	stw	r8,0(sp)
   2cfe4:	da400115 	stw	r9,4(sp)
   2cfe8:	002ca440 	call	2ca44 <__udivsi3>
   2cfec:	8009883a 	mov	r4,r16
   2cff0:	a00b883a 	mov	r5,r20
   2cff4:	1025883a 	mov	r18,r2
   2cff8:	002caa80 	call	2caa8 <__umodsi3>
   2cffc:	d9c00217 	ldw	r7,8(sp)
   2d000:	1004943a 	slli	r2,r2,16
   2d004:	bcaf383a 	mul	r23,r23,r18
   2d008:	393fffcc 	andi	r4,r7,65535
   2d00c:	2088b03a 	or	r4,r4,r2
   2d010:	d9800317 	ldw	r6,12(sp)
   2d014:	da000017 	ldw	r8,0(sp)
   2d018:	da400117 	ldw	r9,4(sp)
   2d01c:	25c0062e 	bgeu	r4,r23,2d038 <__divdf3+0x538>
   2d020:	2709883a 	add	r4,r4,fp
   2d024:	90bfffc4 	addi	r2,r18,-1
   2d028:	27009436 	bltu	r4,fp,2d27c <__divdf3+0x77c>
   2d02c:	25c0932e 	bgeu	r4,r23,2d27c <__divdf3+0x77c>
   2d030:	94bfff84 	addi	r18,r18,-2
   2d034:	2709883a 	add	r4,r4,fp
   2d038:	4004943a 	slli	r2,r8,16
   2d03c:	25efc83a 	sub	r23,r4,r23
   2d040:	1490b03a 	or	r8,r2,r18
   2d044:	4008d43a 	srli	r4,r8,16
   2d048:	40ffffcc 	andi	r3,r8,65535
   2d04c:	30c5383a 	mul	r2,r6,r3
   2d050:	1a47383a 	mul	r3,r3,r9
   2d054:	310d383a 	mul	r6,r6,r4
   2d058:	100ad43a 	srli	r5,r2,16
   2d05c:	4913383a 	mul	r9,r9,r4
   2d060:	1987883a 	add	r3,r3,r6
   2d064:	28c7883a 	add	r3,r5,r3
   2d068:	1980022e 	bgeu	r3,r6,2d074 <__divdf3+0x574>
   2d06c:	01000074 	movhi	r4,1
   2d070:	4913883a 	add	r9,r9,r4
   2d074:	1808d43a 	srli	r4,r3,16
   2d078:	1806943a 	slli	r3,r3,16
   2d07c:	10bfffcc 	andi	r2,r2,65535
   2d080:	2253883a 	add	r9,r4,r9
   2d084:	1887883a 	add	r3,r3,r2
   2d088:	ba403836 	bltu	r23,r9,2d16c <__divdf3+0x66c>
   2d08c:	ba403626 	beq	r23,r9,2d168 <__divdf3+0x668>
   2d090:	42000054 	ori	r8,r8,1
   2d094:	a880ffc4 	addi	r2,r21,1023
   2d098:	00bf570e 	bge	zero,r2,2cdf8 <_gp+0xffff3328>
   2d09c:	40c001cc 	andi	r3,r8,7
   2d0a0:	18000726 	beq	r3,zero,2d0c0 <__divdf3+0x5c0>
   2d0a4:	40c003cc 	andi	r3,r8,15
   2d0a8:	01000104 	movi	r4,4
   2d0ac:	19000426 	beq	r3,r4,2d0c0 <__divdf3+0x5c0>
   2d0b0:	4107883a 	add	r3,r8,r4
   2d0b4:	1a11803a 	cmpltu	r8,r3,r8
   2d0b8:	8a23883a 	add	r17,r17,r8
   2d0bc:	1811883a 	mov	r8,r3
   2d0c0:	88c0402c 	andhi	r3,r17,256
   2d0c4:	18000426 	beq	r3,zero,2d0d8 <__divdf3+0x5d8>
   2d0c8:	00ffc034 	movhi	r3,65280
   2d0cc:	18ffffc4 	addi	r3,r3,-1
   2d0d0:	a8810004 	addi	r2,r21,1024
   2d0d4:	88e2703a 	and	r17,r17,r3
   2d0d8:	00c1ff84 	movi	r3,2046
   2d0dc:	18bee316 	blt	r3,r2,2cc6c <_gp+0xffff319c>
   2d0e0:	8824977a 	slli	r18,r17,29
   2d0e4:	4010d0fa 	srli	r8,r8,3
   2d0e8:	8822927a 	slli	r17,r17,9
   2d0ec:	1081ffcc 	andi	r2,r2,2047
   2d0f0:	9224b03a 	or	r18,r18,r8
   2d0f4:	880ad33a 	srli	r5,r17,12
   2d0f8:	98c0004c 	andi	r3,r19,1
   2d0fc:	003edf06 	br	2cc7c <_gp+0xffff31ac>
   2d100:	8080022c 	andhi	r2,r16,8
   2d104:	10001226 	beq	r2,zero,2d150 <__divdf3+0x650>
   2d108:	8880022c 	andhi	r2,r17,8
   2d10c:	1000101e 	bne	r2,zero,2d150 <__divdf3+0x650>
   2d110:	00800434 	movhi	r2,16
   2d114:	89400234 	orhi	r5,r17,8
   2d118:	10bfffc4 	addi	r2,r2,-1
   2d11c:	b007883a 	mov	r3,r22
   2d120:	288a703a 	and	r5,r5,r2
   2d124:	4025883a 	mov	r18,r8
   2d128:	003f3106 	br	2cdf0 <_gp+0xffff3320>
   2d12c:	008000c4 	movi	r2,3
   2d130:	3880a626 	beq	r7,r2,2d3cc <__divdf3+0x8cc>
   2d134:	00800044 	movi	r2,1
   2d138:	3880521e 	bne	r7,r2,2d284 <__divdf3+0x784>
   2d13c:	b807883a 	mov	r3,r23
   2d140:	0005883a 	mov	r2,zero
   2d144:	000b883a 	mov	r5,zero
   2d148:	0025883a 	mov	r18,zero
   2d14c:	003ecb06 	br	2cc7c <_gp+0xffff31ac>
   2d150:	00800434 	movhi	r2,16
   2d154:	81400234 	orhi	r5,r16,8
   2d158:	10bfffc4 	addi	r2,r2,-1
   2d15c:	a007883a 	mov	r3,r20
   2d160:	288a703a 	and	r5,r5,r2
   2d164:	003f2206 	br	2cdf0 <_gp+0xffff3320>
   2d168:	183fca26 	beq	r3,zero,2d094 <_gp+0xffff35c4>
   2d16c:	e5ef883a 	add	r23,fp,r23
   2d170:	40bfffc4 	addi	r2,r8,-1
   2d174:	bf00392e 	bgeu	r23,fp,2d25c <__divdf3+0x75c>
   2d178:	1011883a 	mov	r8,r2
   2d17c:	ba7fc41e 	bne	r23,r9,2d090 <_gp+0xffff35c0>
   2d180:	b0ffc31e 	bne	r22,r3,2d090 <_gp+0xffff35c0>
   2d184:	003fc306 	br	2d094 <_gp+0xffff35c4>
   2d188:	143ff604 	addi	r16,r2,-40
   2d18c:	9c20983a 	sll	r16,r19,r16
   2d190:	0025883a 	mov	r18,zero
   2d194:	003ee206 	br	2cd20 <_gp+0xffff3250>
   2d198:	d9800315 	stw	r6,12(sp)
   2d19c:	d9c00215 	stw	r7,8(sp)
   2d1a0:	0022d400 	call	22d40 <__clzsi2>
   2d1a4:	10800804 	addi	r2,r2,32
   2d1a8:	d9c00217 	ldw	r7,8(sp)
   2d1ac:	d9800317 	ldw	r6,12(sp)
   2d1b0:	003ed106 	br	2ccf8 <_gp+0xffff3228>
   2d1b4:	147ff604 	addi	r17,r2,-40
   2d1b8:	3462983a 	sll	r17,r6,r17
   2d1bc:	0011883a 	mov	r8,zero
   2d1c0:	003ef506 	br	2cd98 <_gp+0xffff32c8>
   2d1c4:	3009883a 	mov	r4,r6
   2d1c8:	d9800315 	stw	r6,12(sp)
   2d1cc:	da400115 	stw	r9,4(sp)
   2d1d0:	0022d400 	call	22d40 <__clzsi2>
   2d1d4:	10800804 	addi	r2,r2,32
   2d1d8:	da400117 	ldw	r9,4(sp)
   2d1dc:	d9800317 	ldw	r6,12(sp)
   2d1e0:	003ee306 	br	2cd70 <_gp+0xffff32a0>
   2d1e4:	85a1883a 	add	r16,r16,r22
   2d1e8:	8585803a 	cmpltu	r2,r16,r22
   2d1ec:	1705883a 	add	r2,r2,fp
   2d1f0:	14a5883a 	add	r18,r2,r18
   2d1f4:	88bfffc4 	addi	r2,r17,-1
   2d1f8:	e4800c2e 	bgeu	fp,r18,2d22c <__divdf3+0x72c>
   2d1fc:	90c03e36 	bltu	r18,r3,2d2f8 <__divdf3+0x7f8>
   2d200:	1c806926 	beq	r3,r18,2d3a8 <__divdf3+0x8a8>
   2d204:	90c7c83a 	sub	r3,r18,r3
   2d208:	1023883a 	mov	r17,r2
   2d20c:	003f5206 	br	2cf58 <_gp+0xffff3488>
   2d210:	923f0436 	bltu	r18,r8,2ce24 <_gp+0xffff3354>
   2d214:	800897fa 	slli	r4,r16,31
   2d218:	9004d07a 	srli	r2,r18,1
   2d21c:	8006d07a 	srli	r3,r16,1
   2d220:	902097fa 	slli	r16,r18,31
   2d224:	20a4b03a 	or	r18,r4,r2
   2d228:	003f0106 	br	2ce30 <_gp+0xffff3360>
   2d22c:	e4bff51e 	bne	fp,r18,2d204 <_gp+0xffff3734>
   2d230:	85bff22e 	bgeu	r16,r22,2d1fc <_gp+0xffff372c>
   2d234:	e0c7c83a 	sub	r3,fp,r3
   2d238:	1023883a 	mov	r17,r2
   2d23c:	003f4606 	br	2cf58 <_gp+0xffff3488>
   2d240:	100f883a 	mov	r7,r2
   2d244:	003f2b06 	br	2cef4 <_gp+0xffff3424>
   2d248:	180d883a 	mov	r6,r3
   2d24c:	003f1306 	br	2ce9c <_gp+0xffff33cc>
   2d250:	813fe436 	bltu	r16,r4,2d1e4 <_gp+0xffff3714>
   2d254:	0007883a 	mov	r3,zero
   2d258:	003f3f06 	br	2cf58 <_gp+0xffff3488>
   2d25c:	ba402c36 	bltu	r23,r9,2d310 <__divdf3+0x810>
   2d260:	4dc05426 	beq	r9,r23,2d3b4 <__divdf3+0x8b4>
   2d264:	1011883a 	mov	r8,r2
   2d268:	003f8906 	br	2d090 <_gp+0xffff35c0>
   2d26c:	023fffc4 	movi	r8,-1
   2d270:	003f8806 	br	2d094 <_gp+0xffff35c4>
   2d274:	1811883a 	mov	r8,r3
   2d278:	003f5406 	br	2cfcc <_gp+0xffff34fc>
   2d27c:	1025883a 	mov	r18,r2
   2d280:	003f6d06 	br	2d038 <_gp+0xffff3568>
   2d284:	b827883a 	mov	r19,r23
   2d288:	003f8206 	br	2d094 <_gp+0xffff35c4>
   2d28c:	010007c4 	movi	r4,31
   2d290:	20c02616 	blt	r4,r3,2d32c <__divdf3+0x82c>
   2d294:	00800804 	movi	r2,32
   2d298:	10c5c83a 	sub	r2,r2,r3
   2d29c:	888a983a 	sll	r5,r17,r2
   2d2a0:	40c8d83a 	srl	r4,r8,r3
   2d2a4:	4084983a 	sll	r2,r8,r2
   2d2a8:	88e2d83a 	srl	r17,r17,r3
   2d2ac:	2906b03a 	or	r3,r5,r4
   2d2b0:	1004c03a 	cmpne	r2,r2,zero
   2d2b4:	1886b03a 	or	r3,r3,r2
   2d2b8:	188001cc 	andi	r2,r3,7
   2d2bc:	10000726 	beq	r2,zero,2d2dc <__divdf3+0x7dc>
   2d2c0:	188003cc 	andi	r2,r3,15
   2d2c4:	01000104 	movi	r4,4
   2d2c8:	11000426 	beq	r2,r4,2d2dc <__divdf3+0x7dc>
   2d2cc:	1805883a 	mov	r2,r3
   2d2d0:	10c00104 	addi	r3,r2,4
   2d2d4:	1885803a 	cmpltu	r2,r3,r2
   2d2d8:	88a3883a 	add	r17,r17,r2
   2d2dc:	8880202c 	andhi	r2,r17,128
   2d2e0:	10002726 	beq	r2,zero,2d380 <__divdf3+0x880>
   2d2e4:	98c0004c 	andi	r3,r19,1
   2d2e8:	00800044 	movi	r2,1
   2d2ec:	000b883a 	mov	r5,zero
   2d2f0:	0025883a 	mov	r18,zero
   2d2f4:	003e6106 	br	2cc7c <_gp+0xffff31ac>
   2d2f8:	85a1883a 	add	r16,r16,r22
   2d2fc:	8585803a 	cmpltu	r2,r16,r22
   2d300:	1705883a 	add	r2,r2,fp
   2d304:	14a5883a 	add	r18,r2,r18
   2d308:	8c7fff84 	addi	r17,r17,-2
   2d30c:	003f1106 	br	2cf54 <_gp+0xffff3484>
   2d310:	b589883a 	add	r4,r22,r22
   2d314:	25ad803a 	cmpltu	r22,r4,r22
   2d318:	b739883a 	add	fp,r22,fp
   2d31c:	40bfff84 	addi	r2,r8,-2
   2d320:	bf2f883a 	add	r23,r23,fp
   2d324:	202d883a 	mov	r22,r4
   2d328:	003f9306 	br	2d178 <_gp+0xffff36a8>
   2d32c:	013ff844 	movi	r4,-31
   2d330:	2085c83a 	sub	r2,r4,r2
   2d334:	8888d83a 	srl	r4,r17,r2
   2d338:	00800804 	movi	r2,32
   2d33c:	18802126 	beq	r3,r2,2d3c4 <__divdf3+0x8c4>
   2d340:	00801004 	movi	r2,64
   2d344:	10c5c83a 	sub	r2,r2,r3
   2d348:	8884983a 	sll	r2,r17,r2
   2d34c:	1204b03a 	or	r2,r2,r8
   2d350:	1004c03a 	cmpne	r2,r2,zero
   2d354:	2084b03a 	or	r2,r4,r2
   2d358:	144001cc 	andi	r17,r2,7
   2d35c:	88000d1e 	bne	r17,zero,2d394 <__divdf3+0x894>
   2d360:	000b883a 	mov	r5,zero
   2d364:	1024d0fa 	srli	r18,r2,3
   2d368:	98c0004c 	andi	r3,r19,1
   2d36c:	0005883a 	mov	r2,zero
   2d370:	9464b03a 	or	r18,r18,r17
   2d374:	003e4106 	br	2cc7c <_gp+0xffff31ac>
   2d378:	1007883a 	mov	r3,r2
   2d37c:	0023883a 	mov	r17,zero
   2d380:	880a927a 	slli	r5,r17,9
   2d384:	1805883a 	mov	r2,r3
   2d388:	8822977a 	slli	r17,r17,29
   2d38c:	280ad33a 	srli	r5,r5,12
   2d390:	003ff406 	br	2d364 <_gp+0xffff3894>
   2d394:	10c003cc 	andi	r3,r2,15
   2d398:	01000104 	movi	r4,4
   2d39c:	193ff626 	beq	r3,r4,2d378 <_gp+0xffff38a8>
   2d3a0:	0023883a 	mov	r17,zero
   2d3a4:	003fca06 	br	2d2d0 <_gp+0xffff3800>
   2d3a8:	813fd336 	bltu	r16,r4,2d2f8 <_gp+0xffff3828>
   2d3ac:	1023883a 	mov	r17,r2
   2d3b0:	003fa806 	br	2d254 <_gp+0xffff3784>
   2d3b4:	b0ffd636 	bltu	r22,r3,2d310 <_gp+0xffff3840>
   2d3b8:	1011883a 	mov	r8,r2
   2d3bc:	b0ff341e 	bne	r22,r3,2d090 <_gp+0xffff35c0>
   2d3c0:	003f3406 	br	2d094 <_gp+0xffff35c4>
   2d3c4:	0005883a 	mov	r2,zero
   2d3c8:	003fe006 	br	2d34c <_gp+0xffff387c>
   2d3cc:	00800434 	movhi	r2,16
   2d3d0:	89400234 	orhi	r5,r17,8
   2d3d4:	10bfffc4 	addi	r2,r2,-1
   2d3d8:	b807883a 	mov	r3,r23
   2d3dc:	288a703a 	and	r5,r5,r2
   2d3e0:	4025883a 	mov	r18,r8
   2d3e4:	003e8206 	br	2cdf0 <_gp+0xffff3320>

0002d3e8 <__eqdf2>:
   2d3e8:	2804d53a 	srli	r2,r5,20
   2d3ec:	3806d53a 	srli	r3,r7,20
   2d3f0:	02000434 	movhi	r8,16
   2d3f4:	423fffc4 	addi	r8,r8,-1
   2d3f8:	1081ffcc 	andi	r2,r2,2047
   2d3fc:	0281ffc4 	movi	r10,2047
   2d400:	2a12703a 	and	r9,r5,r8
   2d404:	18c1ffcc 	andi	r3,r3,2047
   2d408:	3a10703a 	and	r8,r7,r8
   2d40c:	280ad7fa 	srli	r5,r5,31
   2d410:	380ed7fa 	srli	r7,r7,31
   2d414:	12801026 	beq	r2,r10,2d458 <__eqdf2+0x70>
   2d418:	0281ffc4 	movi	r10,2047
   2d41c:	1a800a26 	beq	r3,r10,2d448 <__eqdf2+0x60>
   2d420:	10c00226 	beq	r2,r3,2d42c <__eqdf2+0x44>
   2d424:	00800044 	movi	r2,1
   2d428:	f800283a 	ret
   2d42c:	4a3ffd1e 	bne	r9,r8,2d424 <_gp+0xffff3954>
   2d430:	21bffc1e 	bne	r4,r6,2d424 <_gp+0xffff3954>
   2d434:	29c00c26 	beq	r5,r7,2d468 <__eqdf2+0x80>
   2d438:	103ffa1e 	bne	r2,zero,2d424 <_gp+0xffff3954>
   2d43c:	2244b03a 	or	r2,r4,r9
   2d440:	1004c03a 	cmpne	r2,r2,zero
   2d444:	f800283a 	ret
   2d448:	3214b03a 	or	r10,r6,r8
   2d44c:	503ff426 	beq	r10,zero,2d420 <_gp+0xffff3950>
   2d450:	00800044 	movi	r2,1
   2d454:	f800283a 	ret
   2d458:	2254b03a 	or	r10,r4,r9
   2d45c:	503fee26 	beq	r10,zero,2d418 <_gp+0xffff3948>
   2d460:	00800044 	movi	r2,1
   2d464:	f800283a 	ret
   2d468:	0005883a 	mov	r2,zero
   2d46c:	f800283a 	ret

0002d470 <__ledf2>:
   2d470:	2804d53a 	srli	r2,r5,20
   2d474:	3810d53a 	srli	r8,r7,20
   2d478:	00c00434 	movhi	r3,16
   2d47c:	18ffffc4 	addi	r3,r3,-1
   2d480:	1081ffcc 	andi	r2,r2,2047
   2d484:	0241ffc4 	movi	r9,2047
   2d488:	28d4703a 	and	r10,r5,r3
   2d48c:	4201ffcc 	andi	r8,r8,2047
   2d490:	38c6703a 	and	r3,r7,r3
   2d494:	280ad7fa 	srli	r5,r5,31
   2d498:	380ed7fa 	srli	r7,r7,31
   2d49c:	12401f26 	beq	r2,r9,2d51c <__ledf2+0xac>
   2d4a0:	0241ffc4 	movi	r9,2047
   2d4a4:	42401426 	beq	r8,r9,2d4f8 <__ledf2+0x88>
   2d4a8:	1000091e 	bne	r2,zero,2d4d0 <__ledf2+0x60>
   2d4ac:	2296b03a 	or	r11,r4,r10
   2d4b0:	5813003a 	cmpeq	r9,r11,zero
   2d4b4:	29403fcc 	andi	r5,r5,255
   2d4b8:	40000a1e 	bne	r8,zero,2d4e4 <__ledf2+0x74>
   2d4bc:	30d8b03a 	or	r12,r6,r3
   2d4c0:	6000081e 	bne	r12,zero,2d4e4 <__ledf2+0x74>
   2d4c4:	0005883a 	mov	r2,zero
   2d4c8:	5800111e 	bne	r11,zero,2d510 <__ledf2+0xa0>
   2d4cc:	f800283a 	ret
   2d4d0:	29403fcc 	andi	r5,r5,255
   2d4d4:	40000c1e 	bne	r8,zero,2d508 <__ledf2+0x98>
   2d4d8:	30d2b03a 	or	r9,r6,r3
   2d4dc:	48000c26 	beq	r9,zero,2d510 <__ledf2+0xa0>
   2d4e0:	0013883a 	mov	r9,zero
   2d4e4:	39c03fcc 	andi	r7,r7,255
   2d4e8:	48000826 	beq	r9,zero,2d50c <__ledf2+0x9c>
   2d4ec:	38001126 	beq	r7,zero,2d534 <__ledf2+0xc4>
   2d4f0:	00800044 	movi	r2,1
   2d4f4:	f800283a 	ret
   2d4f8:	30d2b03a 	or	r9,r6,r3
   2d4fc:	483fea26 	beq	r9,zero,2d4a8 <_gp+0xffff39d8>
   2d500:	00800084 	movi	r2,2
   2d504:	f800283a 	ret
   2d508:	39c03fcc 	andi	r7,r7,255
   2d50c:	39400726 	beq	r7,r5,2d52c <__ledf2+0xbc>
   2d510:	2800081e 	bne	r5,zero,2d534 <__ledf2+0xc4>
   2d514:	00800044 	movi	r2,1
   2d518:	f800283a 	ret
   2d51c:	2292b03a 	or	r9,r4,r10
   2d520:	483fdf26 	beq	r9,zero,2d4a0 <_gp+0xffff39d0>
   2d524:	00800084 	movi	r2,2
   2d528:	f800283a 	ret
   2d52c:	4080030e 	bge	r8,r2,2d53c <__ledf2+0xcc>
   2d530:	383fef26 	beq	r7,zero,2d4f0 <_gp+0xffff3a20>
   2d534:	00bfffc4 	movi	r2,-1
   2d538:	f800283a 	ret
   2d53c:	123feb16 	blt	r2,r8,2d4ec <_gp+0xffff3a1c>
   2d540:	1abff336 	bltu	r3,r10,2d510 <_gp+0xffff3a40>
   2d544:	50c00326 	beq	r10,r3,2d554 <__ledf2+0xe4>
   2d548:	50c0042e 	bgeu	r10,r3,2d55c <__ledf2+0xec>
   2d54c:	283fe81e 	bne	r5,zero,2d4f0 <_gp+0xffff3a20>
   2d550:	003ff806 	br	2d534 <_gp+0xffff3a64>
   2d554:	313fee36 	bltu	r6,r4,2d510 <_gp+0xffff3a40>
   2d558:	21bffc36 	bltu	r4,r6,2d54c <_gp+0xffff3a7c>
   2d55c:	0005883a 	mov	r2,zero
   2d560:	f800283a 	ret

0002d564 <__floatsidf>:
   2d564:	defffd04 	addi	sp,sp,-12
   2d568:	dfc00215 	stw	ra,8(sp)
   2d56c:	dc400115 	stw	r17,4(sp)
   2d570:	dc000015 	stw	r16,0(sp)
   2d574:	20002b26 	beq	r4,zero,2d624 <__floatsidf+0xc0>
   2d578:	2023883a 	mov	r17,r4
   2d57c:	2020d7fa 	srli	r16,r4,31
   2d580:	20002d16 	blt	r4,zero,2d638 <__floatsidf+0xd4>
   2d584:	8809883a 	mov	r4,r17
   2d588:	0022d400 	call	22d40 <__clzsi2>
   2d58c:	01410784 	movi	r5,1054
   2d590:	288bc83a 	sub	r5,r5,r2
   2d594:	01010cc4 	movi	r4,1075
   2d598:	2149c83a 	sub	r4,r4,r5
   2d59c:	00c007c4 	movi	r3,31
   2d5a0:	1900160e 	bge	r3,r4,2d5fc <__floatsidf+0x98>
   2d5a4:	00c104c4 	movi	r3,1043
   2d5a8:	1947c83a 	sub	r3,r3,r5
   2d5ac:	88c6983a 	sll	r3,r17,r3
   2d5b0:	00800434 	movhi	r2,16
   2d5b4:	10bfffc4 	addi	r2,r2,-1
   2d5b8:	1886703a 	and	r3,r3,r2
   2d5bc:	2941ffcc 	andi	r5,r5,2047
   2d5c0:	800d883a 	mov	r6,r16
   2d5c4:	0005883a 	mov	r2,zero
   2d5c8:	280a953a 	slli	r5,r5,20
   2d5cc:	31803fcc 	andi	r6,r6,255
   2d5d0:	01000434 	movhi	r4,16
   2d5d4:	300c97fa 	slli	r6,r6,31
   2d5d8:	213fffc4 	addi	r4,r4,-1
   2d5dc:	1906703a 	and	r3,r3,r4
   2d5e0:	1946b03a 	or	r3,r3,r5
   2d5e4:	1986b03a 	or	r3,r3,r6
   2d5e8:	dfc00217 	ldw	ra,8(sp)
   2d5ec:	dc400117 	ldw	r17,4(sp)
   2d5f0:	dc000017 	ldw	r16,0(sp)
   2d5f4:	dec00304 	addi	sp,sp,12
   2d5f8:	f800283a 	ret
   2d5fc:	00c002c4 	movi	r3,11
   2d600:	1887c83a 	sub	r3,r3,r2
   2d604:	88c6d83a 	srl	r3,r17,r3
   2d608:	8904983a 	sll	r2,r17,r4
   2d60c:	01000434 	movhi	r4,16
   2d610:	213fffc4 	addi	r4,r4,-1
   2d614:	2941ffcc 	andi	r5,r5,2047
   2d618:	1906703a 	and	r3,r3,r4
   2d61c:	800d883a 	mov	r6,r16
   2d620:	003fe906 	br	2d5c8 <_gp+0xffff3af8>
   2d624:	000d883a 	mov	r6,zero
   2d628:	000b883a 	mov	r5,zero
   2d62c:	0007883a 	mov	r3,zero
   2d630:	0005883a 	mov	r2,zero
   2d634:	003fe406 	br	2d5c8 <_gp+0xffff3af8>
   2d638:	0123c83a 	sub	r17,zero,r4
   2d63c:	003fd106 	br	2d584 <_gp+0xffff3ab4>

0002d640 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d640:	defffe04 	addi	sp,sp,-8
   2d644:	dfc00115 	stw	ra,4(sp)
   2d648:	df000015 	stw	fp,0(sp)
   2d64c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d650:	d0a00c17 	ldw	r2,-32720(gp)
   2d654:	10000326 	beq	r2,zero,2d664 <alt_get_errno+0x24>
   2d658:	d0a00c17 	ldw	r2,-32720(gp)
   2d65c:	103ee83a 	callr	r2
   2d660:	00000106 	br	2d668 <alt_get_errno+0x28>
   2d664:	d0a6d304 	addi	r2,gp,-25780
}
   2d668:	e037883a 	mov	sp,fp
   2d66c:	dfc00117 	ldw	ra,4(sp)
   2d670:	df000017 	ldw	fp,0(sp)
   2d674:	dec00204 	addi	sp,sp,8
   2d678:	f800283a 	ret

0002d67c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d67c:	defffb04 	addi	sp,sp,-20
   2d680:	dfc00415 	stw	ra,16(sp)
   2d684:	df000315 	stw	fp,12(sp)
   2d688:	df000304 	addi	fp,sp,12
   2d68c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d690:	e0bfff17 	ldw	r2,-4(fp)
   2d694:	10000616 	blt	r2,zero,2d6b0 <close+0x34>
   2d698:	e0bfff17 	ldw	r2,-4(fp)
   2d69c:	10c00324 	muli	r3,r2,12
   2d6a0:	008000f4 	movhi	r2,3
   2d6a4:	10823c04 	addi	r2,r2,2288
   2d6a8:	1885883a 	add	r2,r3,r2
   2d6ac:	00000106 	br	2d6b4 <close+0x38>
   2d6b0:	0005883a 	mov	r2,zero
   2d6b4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2d6b8:	e0bffd17 	ldw	r2,-12(fp)
   2d6bc:	10001926 	beq	r2,zero,2d724 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d6c0:	e0bffd17 	ldw	r2,-12(fp)
   2d6c4:	10800017 	ldw	r2,0(r2)
   2d6c8:	10800417 	ldw	r2,16(r2)
   2d6cc:	10000626 	beq	r2,zero,2d6e8 <close+0x6c>
   2d6d0:	e0bffd17 	ldw	r2,-12(fp)
   2d6d4:	10800017 	ldw	r2,0(r2)
   2d6d8:	10800417 	ldw	r2,16(r2)
   2d6dc:	e13ffd17 	ldw	r4,-12(fp)
   2d6e0:	103ee83a 	callr	r2
   2d6e4:	00000106 	br	2d6ec <close+0x70>
   2d6e8:	0005883a 	mov	r2,zero
   2d6ec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d6f0:	e13fff17 	ldw	r4,-4(fp)
   2d6f4:	002dd3c0 	call	2dd3c <alt_release_fd>
    if (rval < 0)
   2d6f8:	e0bffe17 	ldw	r2,-8(fp)
   2d6fc:	1000070e 	bge	r2,zero,2d71c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2d700:	002d6400 	call	2d640 <alt_get_errno>
   2d704:	1007883a 	mov	r3,r2
   2d708:	e0bffe17 	ldw	r2,-8(fp)
   2d70c:	0085c83a 	sub	r2,zero,r2
   2d710:	18800015 	stw	r2,0(r3)
      return -1;
   2d714:	00bfffc4 	movi	r2,-1
   2d718:	00000706 	br	2d738 <close+0xbc>
    }
    return 0;
   2d71c:	0005883a 	mov	r2,zero
   2d720:	00000506 	br	2d738 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d724:	002d6400 	call	2d640 <alt_get_errno>
   2d728:	1007883a 	mov	r3,r2
   2d72c:	00801444 	movi	r2,81
   2d730:	18800015 	stw	r2,0(r3)
    return -1;
   2d734:	00bfffc4 	movi	r2,-1
  }
}
   2d738:	e037883a 	mov	sp,fp
   2d73c:	dfc00117 	ldw	ra,4(sp)
   2d740:	df000017 	ldw	fp,0(sp)
   2d744:	dec00204 	addi	sp,sp,8
   2d748:	f800283a 	ret

0002d74c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d74c:	defffc04 	addi	sp,sp,-16
   2d750:	df000315 	stw	fp,12(sp)
   2d754:	df000304 	addi	fp,sp,12
   2d758:	e13ffd15 	stw	r4,-12(fp)
   2d75c:	e17ffe15 	stw	r5,-8(fp)
   2d760:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2d764:	e0bfff17 	ldw	r2,-4(fp)
}
   2d768:	e037883a 	mov	sp,fp
   2d76c:	df000017 	ldw	fp,0(sp)
   2d770:	dec00104 	addi	sp,sp,4
   2d774:	f800283a 	ret

0002d778 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d778:	defffe04 	addi	sp,sp,-8
   2d77c:	dfc00115 	stw	ra,4(sp)
   2d780:	df000015 	stw	fp,0(sp)
   2d784:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d788:	d0a00c17 	ldw	r2,-32720(gp)
   2d78c:	10000326 	beq	r2,zero,2d79c <alt_get_errno+0x24>
   2d790:	d0a00c17 	ldw	r2,-32720(gp)
   2d794:	103ee83a 	callr	r2
   2d798:	00000106 	br	2d7a0 <alt_get_errno+0x28>
   2d79c:	d0a6d304 	addi	r2,gp,-25780
}
   2d7a0:	e037883a 	mov	sp,fp
   2d7a4:	dfc00117 	ldw	ra,4(sp)
   2d7a8:	df000017 	ldw	fp,0(sp)
   2d7ac:	dec00204 	addi	sp,sp,8
   2d7b0:	f800283a 	ret

0002d7b4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d7b4:	defffb04 	addi	sp,sp,-20
   2d7b8:	dfc00415 	stw	ra,16(sp)
   2d7bc:	df000315 	stw	fp,12(sp)
   2d7c0:	df000304 	addi	fp,sp,12
   2d7c4:	e13ffe15 	stw	r4,-8(fp)
   2d7c8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d7cc:	e0bffe17 	ldw	r2,-8(fp)
   2d7d0:	10000616 	blt	r2,zero,2d7ec <fstat+0x38>
   2d7d4:	e0bffe17 	ldw	r2,-8(fp)
   2d7d8:	10c00324 	muli	r3,r2,12
   2d7dc:	008000f4 	movhi	r2,3
   2d7e0:	10823c04 	addi	r2,r2,2288
   2d7e4:	1885883a 	add	r2,r3,r2
   2d7e8:	00000106 	br	2d7f0 <fstat+0x3c>
   2d7ec:	0005883a 	mov	r2,zero
   2d7f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2d7f4:	e0bffd17 	ldw	r2,-12(fp)
   2d7f8:	10001026 	beq	r2,zero,2d83c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d7fc:	e0bffd17 	ldw	r2,-12(fp)
   2d800:	10800017 	ldw	r2,0(r2)
   2d804:	10800817 	ldw	r2,32(r2)
   2d808:	10000726 	beq	r2,zero,2d828 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2d80c:	e0bffd17 	ldw	r2,-12(fp)
   2d810:	10800017 	ldw	r2,0(r2)
   2d814:	10800817 	ldw	r2,32(r2)
   2d818:	e17fff17 	ldw	r5,-4(fp)
   2d81c:	e13ffd17 	ldw	r4,-12(fp)
   2d820:	103ee83a 	callr	r2
   2d824:	00000a06 	br	2d850 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d828:	e0bfff17 	ldw	r2,-4(fp)
   2d82c:	00c80004 	movi	r3,8192
   2d830:	10c00115 	stw	r3,4(r2)
      return 0;
   2d834:	0005883a 	mov	r2,zero
   2d838:	00000506 	br	2d850 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d83c:	002d7780 	call	2d778 <alt_get_errno>
   2d840:	1007883a 	mov	r3,r2
   2d844:	00801444 	movi	r2,81
   2d848:	18800015 	stw	r2,0(r3)
    return -1;
   2d84c:	00bfffc4 	movi	r2,-1
  }
}
   2d850:	e037883a 	mov	sp,fp
   2d854:	dfc00117 	ldw	ra,4(sp)
   2d858:	df000017 	ldw	fp,0(sp)
   2d85c:	dec00204 	addi	sp,sp,8
   2d860:	f800283a 	ret

0002d864 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d864:	defffe04 	addi	sp,sp,-8
   2d868:	dfc00115 	stw	ra,4(sp)
   2d86c:	df000015 	stw	fp,0(sp)
   2d870:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d874:	d0a00c17 	ldw	r2,-32720(gp)
   2d878:	10000326 	beq	r2,zero,2d888 <alt_get_errno+0x24>
   2d87c:	d0a00c17 	ldw	r2,-32720(gp)
   2d880:	103ee83a 	callr	r2
   2d884:	00000106 	br	2d88c <alt_get_errno+0x28>
   2d888:	d0a6d304 	addi	r2,gp,-25780
}
   2d88c:	e037883a 	mov	sp,fp
   2d890:	dfc00117 	ldw	ra,4(sp)
   2d894:	df000017 	ldw	fp,0(sp)
   2d898:	dec00204 	addi	sp,sp,8
   2d89c:	f800283a 	ret

0002d8a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d8a0:	deffed04 	addi	sp,sp,-76
   2d8a4:	dfc01215 	stw	ra,72(sp)
   2d8a8:	df001115 	stw	fp,68(sp)
   2d8ac:	df001104 	addi	fp,sp,68
   2d8b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d8b4:	e0bfff17 	ldw	r2,-4(fp)
   2d8b8:	10000616 	blt	r2,zero,2d8d4 <isatty+0x34>
   2d8bc:	e0bfff17 	ldw	r2,-4(fp)
   2d8c0:	10c00324 	muli	r3,r2,12
   2d8c4:	008000f4 	movhi	r2,3
   2d8c8:	10823c04 	addi	r2,r2,2288
   2d8cc:	1885883a 	add	r2,r3,r2
   2d8d0:	00000106 	br	2d8d8 <isatty+0x38>
   2d8d4:	0005883a 	mov	r2,zero
   2d8d8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2d8dc:	e0bfef17 	ldw	r2,-68(fp)
   2d8e0:	10000e26 	beq	r2,zero,2d91c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d8e4:	e0bfef17 	ldw	r2,-68(fp)
   2d8e8:	10800017 	ldw	r2,0(r2)
   2d8ec:	10800817 	ldw	r2,32(r2)
   2d8f0:	1000021e 	bne	r2,zero,2d8fc <isatty+0x5c>
    {
      return 1;
   2d8f4:	00800044 	movi	r2,1
   2d8f8:	00000d06 	br	2d930 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d8fc:	e0bff004 	addi	r2,fp,-64
   2d900:	100b883a 	mov	r5,r2
   2d904:	e13fff17 	ldw	r4,-4(fp)
   2d908:	002d7b40 	call	2d7b4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d90c:	e0bff117 	ldw	r2,-60(fp)
   2d910:	10880020 	cmpeqi	r2,r2,8192
   2d914:	10803fcc 	andi	r2,r2,255
   2d918:	00000506 	br	2d930 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d91c:	002d8640 	call	2d864 <alt_get_errno>
   2d920:	1007883a 	mov	r3,r2
   2d924:	00801444 	movi	r2,81
   2d928:	18800015 	stw	r2,0(r3)
    return 0;
   2d92c:	0005883a 	mov	r2,zero
  }
}
   2d930:	e037883a 	mov	sp,fp
   2d934:	dfc00117 	ldw	ra,4(sp)
   2d938:	df000017 	ldw	fp,0(sp)
   2d93c:	dec00204 	addi	sp,sp,8
   2d940:	f800283a 	ret

0002d944 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d944:	defffc04 	addi	sp,sp,-16
   2d948:	df000315 	stw	fp,12(sp)
   2d94c:	df000304 	addi	fp,sp,12
   2d950:	e13ffd15 	stw	r4,-12(fp)
   2d954:	e17ffe15 	stw	r5,-8(fp)
   2d958:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2d95c:	e0fffe17 	ldw	r3,-8(fp)
   2d960:	e0bffd17 	ldw	r2,-12(fp)
   2d964:	18800c26 	beq	r3,r2,2d998 <alt_load_section+0x54>
  {
    while( to != end )
   2d968:	00000806 	br	2d98c <alt_load_section+0x48>
    {
      *to++ = *from++;
   2d96c:	e0bffe17 	ldw	r2,-8(fp)
   2d970:	10c00104 	addi	r3,r2,4
   2d974:	e0fffe15 	stw	r3,-8(fp)
   2d978:	e0fffd17 	ldw	r3,-12(fp)
   2d97c:	19000104 	addi	r4,r3,4
   2d980:	e13ffd15 	stw	r4,-12(fp)
   2d984:	18c00017 	ldw	r3,0(r3)
   2d988:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2d98c:	e0fffe17 	ldw	r3,-8(fp)
   2d990:	e0bfff17 	ldw	r2,-4(fp)
   2d994:	18bff51e 	bne	r3,r2,2d96c <_gp+0xffff3e9c>
    {
      *to++ = *from++;
    }
  }
}
   2d998:	0001883a 	nop
   2d99c:	e037883a 	mov	sp,fp
   2d9a0:	df000017 	ldw	fp,0(sp)
   2d9a4:	dec00104 	addi	sp,sp,4
   2d9a8:	f800283a 	ret

0002d9ac <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d9ac:	defffe04 	addi	sp,sp,-8
   2d9b0:	dfc00115 	stw	ra,4(sp)
   2d9b4:	df000015 	stw	fp,0(sp)
   2d9b8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d9bc:	018000f4 	movhi	r6,3
   2d9c0:	3186c504 	addi	r6,r6,6932
   2d9c4:	014000f4 	movhi	r5,3
   2d9c8:	29400904 	addi	r5,r5,36
   2d9cc:	010000f4 	movhi	r4,3
   2d9d0:	2106c504 	addi	r4,r4,6932
   2d9d4:	002d9440 	call	2d944 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d9d8:	018000b4 	movhi	r6,2
   2d9dc:	31809104 	addi	r6,r6,580
   2d9e0:	014000b4 	movhi	r5,2
   2d9e4:	29400804 	addi	r5,r5,32
   2d9e8:	010000b4 	movhi	r4,2
   2d9ec:	21000804 	addi	r4,r4,32
   2d9f0:	002d9440 	call	2d944 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d9f4:	018000f4 	movhi	r6,3
   2d9f8:	31800904 	addi	r6,r6,36
   2d9fc:	014000f4 	movhi	r5,3
   2da00:	297f3804 	addi	r5,r5,-800
   2da04:	010000f4 	movhi	r4,3
   2da08:	213f3804 	addi	r4,r4,-800
   2da0c:	002d9440 	call	2d944 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2da10:	002ebcc0 	call	2ebcc <alt_dcache_flush_all>
  alt_icache_flush_all();
   2da14:	002edb40 	call	2edb4 <alt_icache_flush_all>
}
   2da18:	0001883a 	nop
   2da1c:	e037883a 	mov	sp,fp
   2da20:	dfc00117 	ldw	ra,4(sp)
   2da24:	df000017 	ldw	fp,0(sp)
   2da28:	dec00204 	addi	sp,sp,8
   2da2c:	f800283a 	ret

0002da30 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2da30:	defffe04 	addi	sp,sp,-8
   2da34:	dfc00115 	stw	ra,4(sp)
   2da38:	df000015 	stw	fp,0(sp)
   2da3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2da40:	d0a00c17 	ldw	r2,-32720(gp)
   2da44:	10000326 	beq	r2,zero,2da54 <alt_get_errno+0x24>
   2da48:	d0a00c17 	ldw	r2,-32720(gp)
   2da4c:	103ee83a 	callr	r2
   2da50:	00000106 	br	2da58 <alt_get_errno+0x28>
   2da54:	d0a6d304 	addi	r2,gp,-25780
}
   2da58:	e037883a 	mov	sp,fp
   2da5c:	dfc00117 	ldw	ra,4(sp)
   2da60:	df000017 	ldw	fp,0(sp)
   2da64:	dec00204 	addi	sp,sp,8
   2da68:	f800283a 	ret

0002da6c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2da6c:	defff904 	addi	sp,sp,-28
   2da70:	dfc00615 	stw	ra,24(sp)
   2da74:	df000515 	stw	fp,20(sp)
   2da78:	df000504 	addi	fp,sp,20
   2da7c:	e13ffd15 	stw	r4,-12(fp)
   2da80:	e17ffe15 	stw	r5,-8(fp)
   2da84:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2da88:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2da8c:	e0bffd17 	ldw	r2,-12(fp)
   2da90:	10000616 	blt	r2,zero,2daac <lseek+0x40>
   2da94:	e0bffd17 	ldw	r2,-12(fp)
   2da98:	10c00324 	muli	r3,r2,12
   2da9c:	008000f4 	movhi	r2,3
   2daa0:	10823c04 	addi	r2,r2,2288
   2daa4:	1885883a 	add	r2,r3,r2
   2daa8:	00000106 	br	2dab0 <lseek+0x44>
   2daac:	0005883a 	mov	r2,zero
   2dab0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2dab4:	e0bffc17 	ldw	r2,-16(fp)
   2dab8:	10001026 	beq	r2,zero,2dafc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2dabc:	e0bffc17 	ldw	r2,-16(fp)
   2dac0:	10800017 	ldw	r2,0(r2)
   2dac4:	10800717 	ldw	r2,28(r2)
   2dac8:	10000926 	beq	r2,zero,2daf0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2dacc:	e0bffc17 	ldw	r2,-16(fp)
   2dad0:	10800017 	ldw	r2,0(r2)
   2dad4:	10800717 	ldw	r2,28(r2)
   2dad8:	e1bfff17 	ldw	r6,-4(fp)
   2dadc:	e17ffe17 	ldw	r5,-8(fp)
   2dae0:	e13ffc17 	ldw	r4,-16(fp)
   2dae4:	103ee83a 	callr	r2
   2dae8:	e0bffb15 	stw	r2,-20(fp)
   2daec:	00000506 	br	2db04 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2daf0:	00bfde84 	movi	r2,-134
   2daf4:	e0bffb15 	stw	r2,-20(fp)
   2daf8:	00000206 	br	2db04 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2dafc:	00bfebc4 	movi	r2,-81
   2db00:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2db04:	e0bffb17 	ldw	r2,-20(fp)
   2db08:	1000070e 	bge	r2,zero,2db28 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2db0c:	002da300 	call	2da30 <alt_get_errno>
   2db10:	1007883a 	mov	r3,r2
   2db14:	e0bffb17 	ldw	r2,-20(fp)
   2db18:	0085c83a 	sub	r2,zero,r2
   2db1c:	18800015 	stw	r2,0(r3)
    rc = -1;
   2db20:	00bfffc4 	movi	r2,-1
   2db24:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2db28:	e0bffb17 	ldw	r2,-20(fp)
}
   2db2c:	e037883a 	mov	sp,fp
   2db30:	dfc00117 	ldw	ra,4(sp)
   2db34:	df000017 	ldw	fp,0(sp)
   2db38:	dec00204 	addi	sp,sp,8
   2db3c:	f800283a 	ret

0002db40 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2db40:	defffd04 	addi	sp,sp,-12
   2db44:	dfc00215 	stw	ra,8(sp)
   2db48:	df000115 	stw	fp,4(sp)
   2db4c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2db50:	0009883a 	mov	r4,zero
   2db54:	002dfb80 	call	2dfb8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2db58:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2db5c:	002dff00 	call	2dff0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2db60:	018000f4 	movhi	r6,3
   2db64:	31800104 	addi	r6,r6,4
   2db68:	014000f4 	movhi	r5,3
   2db6c:	29400104 	addi	r5,r5,4
   2db70:	010000f4 	movhi	r4,3
   2db74:	21000104 	addi	r4,r4,4
   2db78:	002f14c0 	call	2f14c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2db7c:	002ecf40 	call	2ecf4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2db80:	010000f4 	movhi	r4,3
   2db84:	213b5504 	addi	r4,r4,-4780
   2db88:	002f94c0 	call	2f94c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2db8c:	d0a6d417 	ldw	r2,-25776(gp)
   2db90:	d0e6d517 	ldw	r3,-25772(gp)
   2db94:	d126d617 	ldw	r4,-25768(gp)
   2db98:	200d883a 	mov	r6,r4
   2db9c:	180b883a 	mov	r5,r3
   2dba0:	1009883a 	mov	r4,r2
   2dba4:	00202900 	call	20290 <main>
   2dba8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2dbac:	01000044 	movi	r4,1
   2dbb0:	002d67c0 	call	2d67c <close>
  exit (result);
   2dbb4:	e13fff17 	ldw	r4,-4(fp)
   2dbb8:	002f9600 	call	2f960 <exit>

0002dbbc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2dbbc:	defffe04 	addi	sp,sp,-8
   2dbc0:	df000115 	stw	fp,4(sp)
   2dbc4:	df000104 	addi	fp,sp,4
   2dbc8:	e13fff15 	stw	r4,-4(fp)
}
   2dbcc:	0001883a 	nop
   2dbd0:	e037883a 	mov	sp,fp
   2dbd4:	df000017 	ldw	fp,0(sp)
   2dbd8:	dec00104 	addi	sp,sp,4
   2dbdc:	f800283a 	ret

0002dbe0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2dbe0:	defffe04 	addi	sp,sp,-8
   2dbe4:	df000115 	stw	fp,4(sp)
   2dbe8:	df000104 	addi	fp,sp,4
   2dbec:	e13fff15 	stw	r4,-4(fp)
}
   2dbf0:	0001883a 	nop
   2dbf4:	e037883a 	mov	sp,fp
   2dbf8:	df000017 	ldw	fp,0(sp)
   2dbfc:	dec00104 	addi	sp,sp,4
   2dc00:	f800283a 	ret

0002dc04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2dc04:	defffe04 	addi	sp,sp,-8
   2dc08:	dfc00115 	stw	ra,4(sp)
   2dc0c:	df000015 	stw	fp,0(sp)
   2dc10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dc14:	d0a00c17 	ldw	r2,-32720(gp)
   2dc18:	10000326 	beq	r2,zero,2dc28 <alt_get_errno+0x24>
   2dc1c:	d0a00c17 	ldw	r2,-32720(gp)
   2dc20:	103ee83a 	callr	r2
   2dc24:	00000106 	br	2dc2c <alt_get_errno+0x28>
   2dc28:	d0a6d304 	addi	r2,gp,-25780
}
   2dc2c:	e037883a 	mov	sp,fp
   2dc30:	dfc00117 	ldw	ra,4(sp)
   2dc34:	df000017 	ldw	fp,0(sp)
   2dc38:	dec00204 	addi	sp,sp,8
   2dc3c:	f800283a 	ret

0002dc40 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2dc40:	defff904 	addi	sp,sp,-28
   2dc44:	dfc00615 	stw	ra,24(sp)
   2dc48:	df000515 	stw	fp,20(sp)
   2dc4c:	df000504 	addi	fp,sp,20
   2dc50:	e13ffd15 	stw	r4,-12(fp)
   2dc54:	e17ffe15 	stw	r5,-8(fp)
   2dc58:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dc5c:	e0bffd17 	ldw	r2,-12(fp)
   2dc60:	10000616 	blt	r2,zero,2dc7c <read+0x3c>
   2dc64:	e0bffd17 	ldw	r2,-12(fp)
   2dc68:	10c00324 	muli	r3,r2,12
   2dc6c:	008000f4 	movhi	r2,3
   2dc70:	10823c04 	addi	r2,r2,2288
   2dc74:	1885883a 	add	r2,r3,r2
   2dc78:	00000106 	br	2dc80 <read+0x40>
   2dc7c:	0005883a 	mov	r2,zero
   2dc80:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2dc84:	e0bffb17 	ldw	r2,-20(fp)
   2dc88:	10002226 	beq	r2,zero,2dd14 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2dc8c:	e0bffb17 	ldw	r2,-20(fp)
   2dc90:	10800217 	ldw	r2,8(r2)
   2dc94:	108000cc 	andi	r2,r2,3
   2dc98:	10800060 	cmpeqi	r2,r2,1
   2dc9c:	1000181e 	bne	r2,zero,2dd00 <read+0xc0>
        (fd->dev->read))
   2dca0:	e0bffb17 	ldw	r2,-20(fp)
   2dca4:	10800017 	ldw	r2,0(r2)
   2dca8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2dcac:	10001426 	beq	r2,zero,2dd00 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2dcb0:	e0bffb17 	ldw	r2,-20(fp)
   2dcb4:	10800017 	ldw	r2,0(r2)
   2dcb8:	10800517 	ldw	r2,20(r2)
   2dcbc:	e0ffff17 	ldw	r3,-4(fp)
   2dcc0:	180d883a 	mov	r6,r3
   2dcc4:	e17ffe17 	ldw	r5,-8(fp)
   2dcc8:	e13ffb17 	ldw	r4,-20(fp)
   2dccc:	103ee83a 	callr	r2
   2dcd0:	e0bffc15 	stw	r2,-16(fp)
   2dcd4:	e0bffc17 	ldw	r2,-16(fp)
   2dcd8:	1000070e 	bge	r2,zero,2dcf8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2dcdc:	002dc040 	call	2dc04 <alt_get_errno>
   2dce0:	1007883a 	mov	r3,r2
   2dce4:	e0bffc17 	ldw	r2,-16(fp)
   2dce8:	0085c83a 	sub	r2,zero,r2
   2dcec:	18800015 	stw	r2,0(r3)
          return -1;
   2dcf0:	00bfffc4 	movi	r2,-1
   2dcf4:	00000c06 	br	2dd28 <read+0xe8>
        }
        return rval;
   2dcf8:	e0bffc17 	ldw	r2,-16(fp)
   2dcfc:	00000a06 	br	2dd28 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2dd00:	002dc040 	call	2dc04 <alt_get_errno>
   2dd04:	1007883a 	mov	r3,r2
   2dd08:	00800344 	movi	r2,13
   2dd0c:	18800015 	stw	r2,0(r3)
   2dd10:	00000406 	br	2dd24 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2dd14:	002dc040 	call	2dc04 <alt_get_errno>
   2dd18:	1007883a 	mov	r3,r2
   2dd1c:	00801444 	movi	r2,81
   2dd20:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2dd24:	00bfffc4 	movi	r2,-1
}
   2dd28:	e037883a 	mov	sp,fp
   2dd2c:	dfc00117 	ldw	ra,4(sp)
   2dd30:	df000017 	ldw	fp,0(sp)
   2dd34:	dec00204 	addi	sp,sp,8
   2dd38:	f800283a 	ret

0002dd3c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2dd3c:	defffe04 	addi	sp,sp,-8
   2dd40:	df000115 	stw	fp,4(sp)
   2dd44:	df000104 	addi	fp,sp,4
   2dd48:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2dd4c:	e0bfff17 	ldw	r2,-4(fp)
   2dd50:	108000d0 	cmplti	r2,r2,3
   2dd54:	10000d1e 	bne	r2,zero,2dd8c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2dd58:	008000f4 	movhi	r2,3
   2dd5c:	10823c04 	addi	r2,r2,2288
   2dd60:	e0ffff17 	ldw	r3,-4(fp)
   2dd64:	18c00324 	muli	r3,r3,12
   2dd68:	10c5883a 	add	r2,r2,r3
   2dd6c:	10800204 	addi	r2,r2,8
   2dd70:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2dd74:	008000f4 	movhi	r2,3
   2dd78:	10823c04 	addi	r2,r2,2288
   2dd7c:	e0ffff17 	ldw	r3,-4(fp)
   2dd80:	18c00324 	muli	r3,r3,12
   2dd84:	10c5883a 	add	r2,r2,r3
   2dd88:	10000015 	stw	zero,0(r2)
  }
}
   2dd8c:	0001883a 	nop
   2dd90:	e037883a 	mov	sp,fp
   2dd94:	df000017 	ldw	fp,0(sp)
   2dd98:	dec00104 	addi	sp,sp,4
   2dd9c:	f800283a 	ret

0002dda0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2dda0:	defff904 	addi	sp,sp,-28
   2dda4:	df000615 	stw	fp,24(sp)
   2dda8:	df000604 	addi	fp,sp,24
   2ddac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ddb0:	0005303a 	rdctl	r2,status
   2ddb4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ddb8:	e0fffe17 	ldw	r3,-8(fp)
   2ddbc:	00bfff84 	movi	r2,-2
   2ddc0:	1884703a 	and	r2,r3,r2
   2ddc4:	1001703a 	wrctl	status,r2
  
  return context;
   2ddc8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2ddcc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2ddd0:	d0a00d17 	ldw	r2,-32716(gp)
   2ddd4:	10c000c4 	addi	r3,r2,3
   2ddd8:	00bfff04 	movi	r2,-4
   2dddc:	1884703a 	and	r2,r3,r2
   2dde0:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2dde4:	d0e00d17 	ldw	r3,-32716(gp)
   2dde8:	e0bfff17 	ldw	r2,-4(fp)
   2ddec:	1887883a 	add	r3,r3,r2
   2ddf0:	008000f4 	movhi	r2,3
   2ddf4:	10900004 	addi	r2,r2,16384
   2ddf8:	10c0062e 	bgeu	r2,r3,2de14 <sbrk+0x74>
   2ddfc:	e0bffb17 	ldw	r2,-20(fp)
   2de00:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2de04:	e0bffa17 	ldw	r2,-24(fp)
   2de08:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2de0c:	00bfffc4 	movi	r2,-1
   2de10:	00000b06 	br	2de40 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2de14:	d0a00d17 	ldw	r2,-32716(gp)
   2de18:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2de1c:	d0e00d17 	ldw	r3,-32716(gp)
   2de20:	e0bfff17 	ldw	r2,-4(fp)
   2de24:	1885883a 	add	r2,r3,r2
   2de28:	d0a00d15 	stw	r2,-32716(gp)
   2de2c:	e0bffb17 	ldw	r2,-20(fp)
   2de30:	e0bffc15 	stw	r2,-16(fp)
   2de34:	e0bffc17 	ldw	r2,-16(fp)
   2de38:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2de3c:	e0bffd17 	ldw	r2,-12(fp)
} 
   2de40:	e037883a 	mov	sp,fp
   2de44:	df000017 	ldw	fp,0(sp)
   2de48:	dec00104 	addi	sp,sp,4
   2de4c:	f800283a 	ret

0002de50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2de50:	defffe04 	addi	sp,sp,-8
   2de54:	dfc00115 	stw	ra,4(sp)
   2de58:	df000015 	stw	fp,0(sp)
   2de5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2de60:	d0a00c17 	ldw	r2,-32720(gp)
   2de64:	10000326 	beq	r2,zero,2de74 <alt_get_errno+0x24>
   2de68:	d0a00c17 	ldw	r2,-32720(gp)
   2de6c:	103ee83a 	callr	r2
   2de70:	00000106 	br	2de78 <alt_get_errno+0x28>
   2de74:	d0a6d304 	addi	r2,gp,-25780
}
   2de78:	e037883a 	mov	sp,fp
   2de7c:	dfc00117 	ldw	ra,4(sp)
   2de80:	df000017 	ldw	fp,0(sp)
   2de84:	dec00204 	addi	sp,sp,8
   2de88:	f800283a 	ret

0002de8c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2de8c:	defff904 	addi	sp,sp,-28
   2de90:	dfc00615 	stw	ra,24(sp)
   2de94:	df000515 	stw	fp,20(sp)
   2de98:	df000504 	addi	fp,sp,20
   2de9c:	e13ffd15 	stw	r4,-12(fp)
   2dea0:	e17ffe15 	stw	r5,-8(fp)
   2dea4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dea8:	e0bffd17 	ldw	r2,-12(fp)
   2deac:	10000616 	blt	r2,zero,2dec8 <write+0x3c>
   2deb0:	e0bffd17 	ldw	r2,-12(fp)
   2deb4:	10c00324 	muli	r3,r2,12
   2deb8:	008000f4 	movhi	r2,3
   2debc:	10823c04 	addi	r2,r2,2288
   2dec0:	1885883a 	add	r2,r3,r2
   2dec4:	00000106 	br	2decc <write+0x40>
   2dec8:	0005883a 	mov	r2,zero
   2decc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2ded0:	e0bffb17 	ldw	r2,-20(fp)
   2ded4:	10002126 	beq	r2,zero,2df5c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2ded8:	e0bffb17 	ldw	r2,-20(fp)
   2dedc:	10800217 	ldw	r2,8(r2)
   2dee0:	108000cc 	andi	r2,r2,3
   2dee4:	10001826 	beq	r2,zero,2df48 <write+0xbc>
   2dee8:	e0bffb17 	ldw	r2,-20(fp)
   2deec:	10800017 	ldw	r2,0(r2)
   2def0:	10800617 	ldw	r2,24(r2)
   2def4:	10001426 	beq	r2,zero,2df48 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2def8:	e0bffb17 	ldw	r2,-20(fp)
   2defc:	10800017 	ldw	r2,0(r2)
   2df00:	10800617 	ldw	r2,24(r2)
   2df04:	e0ffff17 	ldw	r3,-4(fp)
   2df08:	180d883a 	mov	r6,r3
   2df0c:	e17ffe17 	ldw	r5,-8(fp)
   2df10:	e13ffb17 	ldw	r4,-20(fp)
   2df14:	103ee83a 	callr	r2
   2df18:	e0bffc15 	stw	r2,-16(fp)
   2df1c:	e0bffc17 	ldw	r2,-16(fp)
   2df20:	1000070e 	bge	r2,zero,2df40 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2df24:	002de500 	call	2de50 <alt_get_errno>
   2df28:	1007883a 	mov	r3,r2
   2df2c:	e0bffc17 	ldw	r2,-16(fp)
   2df30:	0085c83a 	sub	r2,zero,r2
   2df34:	18800015 	stw	r2,0(r3)
        return -1;
   2df38:	00bfffc4 	movi	r2,-1
   2df3c:	00000c06 	br	2df70 <write+0xe4>
      }
      return rval;
   2df40:	e0bffc17 	ldw	r2,-16(fp)
   2df44:	00000a06 	br	2df70 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2df48:	002de500 	call	2de50 <alt_get_errno>
   2df4c:	1007883a 	mov	r3,r2
   2df50:	00800344 	movi	r2,13
   2df54:	18800015 	stw	r2,0(r3)
   2df58:	00000406 	br	2df6c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2df5c:	002de500 	call	2de50 <alt_get_errno>
   2df60:	1007883a 	mov	r3,r2
   2df64:	00801444 	movi	r2,81
   2df68:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2df6c:	00bfffc4 	movi	r2,-1
}
   2df70:	e037883a 	mov	sp,fp
   2df74:	dfc00117 	ldw	ra,4(sp)
   2df78:	df000017 	ldw	fp,0(sp)
   2df7c:	dec00204 	addi	sp,sp,8
   2df80:	f800283a 	ret

0002df84 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2df84:	defffd04 	addi	sp,sp,-12
   2df88:	dfc00215 	stw	ra,8(sp)
   2df8c:	df000115 	stw	fp,4(sp)
   2df90:	df000104 	addi	fp,sp,4
   2df94:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2df98:	d1600904 	addi	r5,gp,-32732
   2df9c:	e13fff17 	ldw	r4,-4(fp)
   2dfa0:	002ec500 	call	2ec50 <alt_dev_llist_insert>
}
   2dfa4:	e037883a 	mov	sp,fp
   2dfa8:	dfc00117 	ldw	ra,4(sp)
   2dfac:	df000017 	ldw	fp,0(sp)
   2dfb0:	dec00204 	addi	sp,sp,8
   2dfb4:	f800283a 	ret

0002dfb8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2dfb8:	defffd04 	addi	sp,sp,-12
   2dfbc:	dfc00215 	stw	ra,8(sp)
   2dfc0:	df000115 	stw	fp,4(sp)
   2dfc4:	df000104 	addi	fp,sp,4
   2dfc8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   2dfcc:	002f5c00 	call	2f5c0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2dfd0:	00800044 	movi	r2,1
   2dfd4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2dfd8:	0001883a 	nop
   2dfdc:	e037883a 	mov	sp,fp
   2dfe0:	dfc00117 	ldw	ra,4(sp)
   2dfe4:	df000017 	ldw	fp,0(sp)
   2dfe8:	dec00204 	addi	sp,sp,8
   2dfec:	f800283a 	ret

0002dff0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2dff0:	defffe04 	addi	sp,sp,-8
   2dff4:	dfc00115 	stw	ra,4(sp)
   2dff8:	df000015 	stw	fp,0(sp)
   2dffc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   2e000:	01800044 	movi	r6,1
   2e004:	000b883a 	mov	r5,zero
   2e008:	010000f4 	movhi	r4,3
   2e00c:	2102a604 	addi	r4,r4,2712
   2e010:	002e19c0 	call	2e19c <altera_avalon_jtag_uart_init>
   2e014:	010000f4 	movhi	r4,3
   2e018:	21029c04 	addi	r4,r4,2672
   2e01c:	002df840 	call	2df84 <alt_dev_reg>
}
   2e020:	0001883a 	nop
   2e024:	e037883a 	mov	sp,fp
   2e028:	dfc00117 	ldw	ra,4(sp)
   2e02c:	df000017 	ldw	fp,0(sp)
   2e030:	dec00204 	addi	sp,sp,8
   2e034:	f800283a 	ret

0002e038 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e038:	defffa04 	addi	sp,sp,-24
   2e03c:	dfc00515 	stw	ra,20(sp)
   2e040:	df000415 	stw	fp,16(sp)
   2e044:	df000404 	addi	fp,sp,16
   2e048:	e13ffd15 	stw	r4,-12(fp)
   2e04c:	e17ffe15 	stw	r5,-8(fp)
   2e050:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e054:	e0bffd17 	ldw	r2,-12(fp)
   2e058:	10800017 	ldw	r2,0(r2)
   2e05c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e060:	e0bffc17 	ldw	r2,-16(fp)
   2e064:	10c00a04 	addi	r3,r2,40
   2e068:	e0bffd17 	ldw	r2,-12(fp)
   2e06c:	10800217 	ldw	r2,8(r2)
   2e070:	100f883a 	mov	r7,r2
   2e074:	e1bfff17 	ldw	r6,-4(fp)
   2e078:	e17ffe17 	ldw	r5,-8(fp)
   2e07c:	1809883a 	mov	r4,r3
   2e080:	002e6600 	call	2e660 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e084:	e037883a 	mov	sp,fp
   2e088:	dfc00117 	ldw	ra,4(sp)
   2e08c:	df000017 	ldw	fp,0(sp)
   2e090:	dec00204 	addi	sp,sp,8
   2e094:	f800283a 	ret

0002e098 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e098:	defffa04 	addi	sp,sp,-24
   2e09c:	dfc00515 	stw	ra,20(sp)
   2e0a0:	df000415 	stw	fp,16(sp)
   2e0a4:	df000404 	addi	fp,sp,16
   2e0a8:	e13ffd15 	stw	r4,-12(fp)
   2e0ac:	e17ffe15 	stw	r5,-8(fp)
   2e0b0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e0b4:	e0bffd17 	ldw	r2,-12(fp)
   2e0b8:	10800017 	ldw	r2,0(r2)
   2e0bc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e0c0:	e0bffc17 	ldw	r2,-16(fp)
   2e0c4:	10c00a04 	addi	r3,r2,40
   2e0c8:	e0bffd17 	ldw	r2,-12(fp)
   2e0cc:	10800217 	ldw	r2,8(r2)
   2e0d0:	100f883a 	mov	r7,r2
   2e0d4:	e1bfff17 	ldw	r6,-4(fp)
   2e0d8:	e17ffe17 	ldw	r5,-8(fp)
   2e0dc:	1809883a 	mov	r4,r3
   2e0e0:	002e87c0 	call	2e87c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e0e4:	e037883a 	mov	sp,fp
   2e0e8:	dfc00117 	ldw	ra,4(sp)
   2e0ec:	df000017 	ldw	fp,0(sp)
   2e0f0:	dec00204 	addi	sp,sp,8
   2e0f4:	f800283a 	ret

0002e0f8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e0f8:	defffc04 	addi	sp,sp,-16
   2e0fc:	dfc00315 	stw	ra,12(sp)
   2e100:	df000215 	stw	fp,8(sp)
   2e104:	df000204 	addi	fp,sp,8
   2e108:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e10c:	e0bfff17 	ldw	r2,-4(fp)
   2e110:	10800017 	ldw	r2,0(r2)
   2e114:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e118:	e0bffe17 	ldw	r2,-8(fp)
   2e11c:	10c00a04 	addi	r3,r2,40
   2e120:	e0bfff17 	ldw	r2,-4(fp)
   2e124:	10800217 	ldw	r2,8(r2)
   2e128:	100b883a 	mov	r5,r2
   2e12c:	1809883a 	mov	r4,r3
   2e130:	002e5080 	call	2e508 <altera_avalon_jtag_uart_close>
}
   2e134:	e037883a 	mov	sp,fp
   2e138:	dfc00117 	ldw	ra,4(sp)
   2e13c:	df000017 	ldw	fp,0(sp)
   2e140:	dec00204 	addi	sp,sp,8
   2e144:	f800283a 	ret

0002e148 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e148:	defffa04 	addi	sp,sp,-24
   2e14c:	dfc00515 	stw	ra,20(sp)
   2e150:	df000415 	stw	fp,16(sp)
   2e154:	df000404 	addi	fp,sp,16
   2e158:	e13ffd15 	stw	r4,-12(fp)
   2e15c:	e17ffe15 	stw	r5,-8(fp)
   2e160:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e164:	e0bffd17 	ldw	r2,-12(fp)
   2e168:	10800017 	ldw	r2,0(r2)
   2e16c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e170:	e0bffc17 	ldw	r2,-16(fp)
   2e174:	10800a04 	addi	r2,r2,40
   2e178:	e1bfff17 	ldw	r6,-4(fp)
   2e17c:	e17ffe17 	ldw	r5,-8(fp)
   2e180:	1009883a 	mov	r4,r2
   2e184:	002e5700 	call	2e570 <altera_avalon_jtag_uart_ioctl>
}
   2e188:	e037883a 	mov	sp,fp
   2e18c:	dfc00117 	ldw	ra,4(sp)
   2e190:	df000017 	ldw	fp,0(sp)
   2e194:	dec00204 	addi	sp,sp,8
   2e198:	f800283a 	ret

0002e19c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e19c:	defffa04 	addi	sp,sp,-24
   2e1a0:	dfc00515 	stw	ra,20(sp)
   2e1a4:	df000415 	stw	fp,16(sp)
   2e1a8:	df000404 	addi	fp,sp,16
   2e1ac:	e13ffd15 	stw	r4,-12(fp)
   2e1b0:	e17ffe15 	stw	r5,-8(fp)
   2e1b4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e1b8:	e0bffd17 	ldw	r2,-12(fp)
   2e1bc:	00c00044 	movi	r3,1
   2e1c0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e1c4:	e0bffd17 	ldw	r2,-12(fp)
   2e1c8:	10800017 	ldw	r2,0(r2)
   2e1cc:	10800104 	addi	r2,r2,4
   2e1d0:	1007883a 	mov	r3,r2
   2e1d4:	e0bffd17 	ldw	r2,-12(fp)
   2e1d8:	10800817 	ldw	r2,32(r2)
   2e1dc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2e1e0:	e0bffe17 	ldw	r2,-8(fp)
   2e1e4:	e0ffff17 	ldw	r3,-4(fp)
   2e1e8:	d8000015 	stw	zero,0(sp)
   2e1ec:	e1fffd17 	ldw	r7,-12(fp)
   2e1f0:	018000f4 	movhi	r6,3
   2e1f4:	31b89704 	addi	r6,r6,-7588
   2e1f8:	180b883a 	mov	r5,r3
   2e1fc:	1009883a 	mov	r4,r2
   2e200:	002ede80 	call	2ede8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e204:	e0bffd17 	ldw	r2,-12(fp)
   2e208:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e20c:	e0bffd17 	ldw	r2,-12(fp)
   2e210:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e214:	d0e6d817 	ldw	r3,-25760(gp)
   2e218:	e1fffd17 	ldw	r7,-12(fp)
   2e21c:	018000f4 	movhi	r6,3
   2e220:	31b91a04 	addi	r6,r6,-7064
   2e224:	180b883a 	mov	r5,r3
   2e228:	1009883a 	mov	r4,r2
   2e22c:	002eaa00 	call	2eaa0 <alt_alarm_start>
   2e230:	1000040e 	bge	r2,zero,2e244 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e234:	e0fffd17 	ldw	r3,-12(fp)
   2e238:	00a00034 	movhi	r2,32768
   2e23c:	10bfffc4 	addi	r2,r2,-1
   2e240:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e244:	0001883a 	nop
   2e248:	e037883a 	mov	sp,fp
   2e24c:	dfc00117 	ldw	ra,4(sp)
   2e250:	df000017 	ldw	fp,0(sp)
   2e254:	dec00204 	addi	sp,sp,8
   2e258:	f800283a 	ret

0002e25c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e25c:	defff804 	addi	sp,sp,-32
   2e260:	df000715 	stw	fp,28(sp)
   2e264:	df000704 	addi	fp,sp,28
   2e268:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e26c:	e0bfff17 	ldw	r2,-4(fp)
   2e270:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2e274:	e0bffb17 	ldw	r2,-20(fp)
   2e278:	10800017 	ldw	r2,0(r2)
   2e27c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e280:	e0bffc17 	ldw	r2,-16(fp)
   2e284:	10800104 	addi	r2,r2,4
   2e288:	10800037 	ldwio	r2,0(r2)
   2e28c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e290:	e0bffd17 	ldw	r2,-12(fp)
   2e294:	1080c00c 	andi	r2,r2,768
   2e298:	10006d26 	beq	r2,zero,2e450 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e29c:	e0bffd17 	ldw	r2,-12(fp)
   2e2a0:	1080400c 	andi	r2,r2,256
   2e2a4:	10003526 	beq	r2,zero,2e37c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e2a8:	00800074 	movhi	r2,1
   2e2ac:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e2b0:	e0bffb17 	ldw	r2,-20(fp)
   2e2b4:	10800a17 	ldw	r2,40(r2)
   2e2b8:	10800044 	addi	r2,r2,1
   2e2bc:	1081ffcc 	andi	r2,r2,2047
   2e2c0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2e2c4:	e0bffb17 	ldw	r2,-20(fp)
   2e2c8:	10c00b17 	ldw	r3,44(r2)
   2e2cc:	e0bffe17 	ldw	r2,-8(fp)
   2e2d0:	18801526 	beq	r3,r2,2e328 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e2d4:	e0bffc17 	ldw	r2,-16(fp)
   2e2d8:	10800037 	ldwio	r2,0(r2)
   2e2dc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e2e0:	e0bff917 	ldw	r2,-28(fp)
   2e2e4:	10a0000c 	andi	r2,r2,32768
   2e2e8:	10001126 	beq	r2,zero,2e330 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e2ec:	e0bffb17 	ldw	r2,-20(fp)
   2e2f0:	10800a17 	ldw	r2,40(r2)
   2e2f4:	e0fff917 	ldw	r3,-28(fp)
   2e2f8:	1809883a 	mov	r4,r3
   2e2fc:	e0fffb17 	ldw	r3,-20(fp)
   2e300:	1885883a 	add	r2,r3,r2
   2e304:	10800e04 	addi	r2,r2,56
   2e308:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e30c:	e0bffb17 	ldw	r2,-20(fp)
   2e310:	10800a17 	ldw	r2,40(r2)
   2e314:	10800044 	addi	r2,r2,1
   2e318:	10c1ffcc 	andi	r3,r2,2047
   2e31c:	e0bffb17 	ldw	r2,-20(fp)
   2e320:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2e324:	003fe206 	br	2e2b0 <_gp+0xffff47e0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2e328:	0001883a 	nop
   2e32c:	00000106 	br	2e334 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2e330:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e334:	e0bff917 	ldw	r2,-28(fp)
   2e338:	10bfffec 	andhi	r2,r2,65535
   2e33c:	10000f26 	beq	r2,zero,2e37c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e340:	e0bffb17 	ldw	r2,-20(fp)
   2e344:	10c00817 	ldw	r3,32(r2)
   2e348:	00bfff84 	movi	r2,-2
   2e34c:	1886703a 	and	r3,r3,r2
   2e350:	e0bffb17 	ldw	r2,-20(fp)
   2e354:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e358:	e0bffc17 	ldw	r2,-16(fp)
   2e35c:	10800104 	addi	r2,r2,4
   2e360:	1007883a 	mov	r3,r2
   2e364:	e0bffb17 	ldw	r2,-20(fp)
   2e368:	10800817 	ldw	r2,32(r2)
   2e36c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e370:	e0bffc17 	ldw	r2,-16(fp)
   2e374:	10800104 	addi	r2,r2,4
   2e378:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e37c:	e0bffd17 	ldw	r2,-12(fp)
   2e380:	1080800c 	andi	r2,r2,512
   2e384:	103fbe26 	beq	r2,zero,2e280 <_gp+0xffff47b0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e388:	e0bffd17 	ldw	r2,-12(fp)
   2e38c:	1004d43a 	srli	r2,r2,16
   2e390:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e394:	00001406 	br	2e3e8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e398:	e0bffc17 	ldw	r2,-16(fp)
   2e39c:	e0fffb17 	ldw	r3,-20(fp)
   2e3a0:	18c00d17 	ldw	r3,52(r3)
   2e3a4:	e13ffb17 	ldw	r4,-20(fp)
   2e3a8:	20c7883a 	add	r3,r4,r3
   2e3ac:	18c20e04 	addi	r3,r3,2104
   2e3b0:	18c00003 	ldbu	r3,0(r3)
   2e3b4:	18c03fcc 	andi	r3,r3,255
   2e3b8:	18c0201c 	xori	r3,r3,128
   2e3bc:	18ffe004 	addi	r3,r3,-128
   2e3c0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e3c4:	e0bffb17 	ldw	r2,-20(fp)
   2e3c8:	10800d17 	ldw	r2,52(r2)
   2e3cc:	10800044 	addi	r2,r2,1
   2e3d0:	10c1ffcc 	andi	r3,r2,2047
   2e3d4:	e0bffb17 	ldw	r2,-20(fp)
   2e3d8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e3dc:	e0bffa17 	ldw	r2,-24(fp)
   2e3e0:	10bfffc4 	addi	r2,r2,-1
   2e3e4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e3e8:	e0bffa17 	ldw	r2,-24(fp)
   2e3ec:	10000526 	beq	r2,zero,2e404 <altera_avalon_jtag_uart_irq+0x1a8>
   2e3f0:	e0bffb17 	ldw	r2,-20(fp)
   2e3f4:	10c00d17 	ldw	r3,52(r2)
   2e3f8:	e0bffb17 	ldw	r2,-20(fp)
   2e3fc:	10800c17 	ldw	r2,48(r2)
   2e400:	18bfe51e 	bne	r3,r2,2e398 <_gp+0xffff48c8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2e404:	e0bffa17 	ldw	r2,-24(fp)
   2e408:	103f9d26 	beq	r2,zero,2e280 <_gp+0xffff47b0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e40c:	e0bffb17 	ldw	r2,-20(fp)
   2e410:	10c00817 	ldw	r3,32(r2)
   2e414:	00bfff44 	movi	r2,-3
   2e418:	1886703a 	and	r3,r3,r2
   2e41c:	e0bffb17 	ldw	r2,-20(fp)
   2e420:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e424:	e0bffb17 	ldw	r2,-20(fp)
   2e428:	10800017 	ldw	r2,0(r2)
   2e42c:	10800104 	addi	r2,r2,4
   2e430:	1007883a 	mov	r3,r2
   2e434:	e0bffb17 	ldw	r2,-20(fp)
   2e438:	10800817 	ldw	r2,32(r2)
   2e43c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e440:	e0bffc17 	ldw	r2,-16(fp)
   2e444:	10800104 	addi	r2,r2,4
   2e448:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2e44c:	003f8c06 	br	2e280 <_gp+0xffff47b0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2e450:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2e454:	0001883a 	nop
   2e458:	e037883a 	mov	sp,fp
   2e45c:	df000017 	ldw	fp,0(sp)
   2e460:	dec00104 	addi	sp,sp,4
   2e464:	f800283a 	ret

0002e468 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e468:	defff804 	addi	sp,sp,-32
   2e46c:	df000715 	stw	fp,28(sp)
   2e470:	df000704 	addi	fp,sp,28
   2e474:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e478:	e0bffb17 	ldw	r2,-20(fp)
   2e47c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e480:	e0bff917 	ldw	r2,-28(fp)
   2e484:	10800017 	ldw	r2,0(r2)
   2e488:	10800104 	addi	r2,r2,4
   2e48c:	10800037 	ldwio	r2,0(r2)
   2e490:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e494:	e0bffa17 	ldw	r2,-24(fp)
   2e498:	1081000c 	andi	r2,r2,1024
   2e49c:	10000b26 	beq	r2,zero,2e4cc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e4a0:	e0bff917 	ldw	r2,-28(fp)
   2e4a4:	10800017 	ldw	r2,0(r2)
   2e4a8:	10800104 	addi	r2,r2,4
   2e4ac:	1007883a 	mov	r3,r2
   2e4b0:	e0bff917 	ldw	r2,-28(fp)
   2e4b4:	10800817 	ldw	r2,32(r2)
   2e4b8:	10810014 	ori	r2,r2,1024
   2e4bc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2e4c0:	e0bff917 	ldw	r2,-28(fp)
   2e4c4:	10000915 	stw	zero,36(r2)
   2e4c8:	00000a06 	br	2e4f4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e4cc:	e0bff917 	ldw	r2,-28(fp)
   2e4d0:	10c00917 	ldw	r3,36(r2)
   2e4d4:	00a00034 	movhi	r2,32768
   2e4d8:	10bfff04 	addi	r2,r2,-4
   2e4dc:	10c00536 	bltu	r2,r3,2e4f4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2e4e0:	e0bff917 	ldw	r2,-28(fp)
   2e4e4:	10800917 	ldw	r2,36(r2)
   2e4e8:	10c00044 	addi	r3,r2,1
   2e4ec:	e0bff917 	ldw	r2,-28(fp)
   2e4f0:	10c00915 	stw	r3,36(r2)
   2e4f4:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e4f8:	e037883a 	mov	sp,fp
   2e4fc:	df000017 	ldw	fp,0(sp)
   2e500:	dec00104 	addi	sp,sp,4
   2e504:	f800283a 	ret

0002e508 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e508:	defffd04 	addi	sp,sp,-12
   2e50c:	df000215 	stw	fp,8(sp)
   2e510:	df000204 	addi	fp,sp,8
   2e514:	e13ffe15 	stw	r4,-8(fp)
   2e518:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e51c:	00000506 	br	2e534 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2e520:	e0bfff17 	ldw	r2,-4(fp)
   2e524:	1090000c 	andi	r2,r2,16384
   2e528:	10000226 	beq	r2,zero,2e534 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2e52c:	00bffd44 	movi	r2,-11
   2e530:	00000b06 	br	2e560 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e534:	e0bffe17 	ldw	r2,-8(fp)
   2e538:	10c00d17 	ldw	r3,52(r2)
   2e53c:	e0bffe17 	ldw	r2,-8(fp)
   2e540:	10800c17 	ldw	r2,48(r2)
   2e544:	18800526 	beq	r3,r2,2e55c <altera_avalon_jtag_uart_close+0x54>
   2e548:	e0bffe17 	ldw	r2,-8(fp)
   2e54c:	10c00917 	ldw	r3,36(r2)
   2e550:	e0bffe17 	ldw	r2,-8(fp)
   2e554:	10800117 	ldw	r2,4(r2)
   2e558:	18bff136 	bltu	r3,r2,2e520 <_gp+0xffff4a50>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2e55c:	0005883a 	mov	r2,zero
}
   2e560:	e037883a 	mov	sp,fp
   2e564:	df000017 	ldw	fp,0(sp)
   2e568:	dec00104 	addi	sp,sp,4
   2e56c:	f800283a 	ret

0002e570 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e570:	defffa04 	addi	sp,sp,-24
   2e574:	df000515 	stw	fp,20(sp)
   2e578:	df000504 	addi	fp,sp,20
   2e57c:	e13ffd15 	stw	r4,-12(fp)
   2e580:	e17ffe15 	stw	r5,-8(fp)
   2e584:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2e588:	00bff9c4 	movi	r2,-25
   2e58c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2e590:	e0bffe17 	ldw	r2,-8(fp)
   2e594:	10da8060 	cmpeqi	r3,r2,27137
   2e598:	1800031e 	bne	r3,zero,2e5a8 <altera_avalon_jtag_uart_ioctl+0x38>
   2e59c:	109a80a0 	cmpeqi	r2,r2,27138
   2e5a0:	1000181e 	bne	r2,zero,2e604 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2e5a4:	00002906 	br	2e64c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2e5a8:	e0bffd17 	ldw	r2,-12(fp)
   2e5ac:	10c00117 	ldw	r3,4(r2)
   2e5b0:	00a00034 	movhi	r2,32768
   2e5b4:	10bfffc4 	addi	r2,r2,-1
   2e5b8:	18802126 	beq	r3,r2,2e640 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2e5bc:	e0bfff17 	ldw	r2,-4(fp)
   2e5c0:	10800017 	ldw	r2,0(r2)
   2e5c4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2e5c8:	e0bffc17 	ldw	r2,-16(fp)
   2e5cc:	10800090 	cmplti	r2,r2,2
   2e5d0:	1000061e 	bne	r2,zero,2e5ec <altera_avalon_jtag_uart_ioctl+0x7c>
   2e5d4:	e0fffc17 	ldw	r3,-16(fp)
   2e5d8:	00a00034 	movhi	r2,32768
   2e5dc:	10bfffc4 	addi	r2,r2,-1
   2e5e0:	18800226 	beq	r3,r2,2e5ec <altera_avalon_jtag_uart_ioctl+0x7c>
   2e5e4:	e0bffc17 	ldw	r2,-16(fp)
   2e5e8:	00000206 	br	2e5f4 <altera_avalon_jtag_uart_ioctl+0x84>
   2e5ec:	00a00034 	movhi	r2,32768
   2e5f0:	10bfff84 	addi	r2,r2,-2
   2e5f4:	e0fffd17 	ldw	r3,-12(fp)
   2e5f8:	18800115 	stw	r2,4(r3)
      rc = 0;
   2e5fc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2e600:	00000f06 	br	2e640 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2e604:	e0bffd17 	ldw	r2,-12(fp)
   2e608:	10c00117 	ldw	r3,4(r2)
   2e60c:	00a00034 	movhi	r2,32768
   2e610:	10bfffc4 	addi	r2,r2,-1
   2e614:	18800c26 	beq	r3,r2,2e648 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2e618:	e0bffd17 	ldw	r2,-12(fp)
   2e61c:	10c00917 	ldw	r3,36(r2)
   2e620:	e0bffd17 	ldw	r2,-12(fp)
   2e624:	10800117 	ldw	r2,4(r2)
   2e628:	1885803a 	cmpltu	r2,r3,r2
   2e62c:	10c03fcc 	andi	r3,r2,255
   2e630:	e0bfff17 	ldw	r2,-4(fp)
   2e634:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2e638:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2e63c:	00000206 	br	2e648 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2e640:	0001883a 	nop
   2e644:	00000106 	br	2e64c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2e648:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2e64c:	e0bffb17 	ldw	r2,-20(fp)
}
   2e650:	e037883a 	mov	sp,fp
   2e654:	df000017 	ldw	fp,0(sp)
   2e658:	dec00104 	addi	sp,sp,4
   2e65c:	f800283a 	ret

0002e660 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2e660:	defff304 	addi	sp,sp,-52
   2e664:	dfc00c15 	stw	ra,48(sp)
   2e668:	df000b15 	stw	fp,44(sp)
   2e66c:	df000b04 	addi	fp,sp,44
   2e670:	e13ffc15 	stw	r4,-16(fp)
   2e674:	e17ffd15 	stw	r5,-12(fp)
   2e678:	e1bffe15 	stw	r6,-8(fp)
   2e67c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2e680:	e0bffd17 	ldw	r2,-12(fp)
   2e684:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e688:	00004706 	br	2e7a8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2e68c:	e0bffc17 	ldw	r2,-16(fp)
   2e690:	10800a17 	ldw	r2,40(r2)
   2e694:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2e698:	e0bffc17 	ldw	r2,-16(fp)
   2e69c:	10800b17 	ldw	r2,44(r2)
   2e6a0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2e6a4:	e0fff717 	ldw	r3,-36(fp)
   2e6a8:	e0bff817 	ldw	r2,-32(fp)
   2e6ac:	18800536 	bltu	r3,r2,2e6c4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2e6b0:	e0fff717 	ldw	r3,-36(fp)
   2e6b4:	e0bff817 	ldw	r2,-32(fp)
   2e6b8:	1885c83a 	sub	r2,r3,r2
   2e6bc:	e0bff615 	stw	r2,-40(fp)
   2e6c0:	00000406 	br	2e6d4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2e6c4:	00c20004 	movi	r3,2048
   2e6c8:	e0bff817 	ldw	r2,-32(fp)
   2e6cc:	1885c83a 	sub	r2,r3,r2
   2e6d0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2e6d4:	e0bff617 	ldw	r2,-40(fp)
   2e6d8:	10001e26 	beq	r2,zero,2e754 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2e6dc:	e0fffe17 	ldw	r3,-8(fp)
   2e6e0:	e0bff617 	ldw	r2,-40(fp)
   2e6e4:	1880022e 	bgeu	r3,r2,2e6f0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2e6e8:	e0bffe17 	ldw	r2,-8(fp)
   2e6ec:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2e6f0:	e0bffc17 	ldw	r2,-16(fp)
   2e6f4:	10c00e04 	addi	r3,r2,56
   2e6f8:	e0bff817 	ldw	r2,-32(fp)
   2e6fc:	1885883a 	add	r2,r3,r2
   2e700:	e1bff617 	ldw	r6,-40(fp)
   2e704:	100b883a 	mov	r5,r2
   2e708:	e13ff517 	ldw	r4,-44(fp)
   2e70c:	00280ac0 	call	280ac <memcpy>
      ptr   += n;
   2e710:	e0fff517 	ldw	r3,-44(fp)
   2e714:	e0bff617 	ldw	r2,-40(fp)
   2e718:	1885883a 	add	r2,r3,r2
   2e71c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2e720:	e0fffe17 	ldw	r3,-8(fp)
   2e724:	e0bff617 	ldw	r2,-40(fp)
   2e728:	1885c83a 	sub	r2,r3,r2
   2e72c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e730:	e0fff817 	ldw	r3,-32(fp)
   2e734:	e0bff617 	ldw	r2,-40(fp)
   2e738:	1885883a 	add	r2,r3,r2
   2e73c:	10c1ffcc 	andi	r3,r2,2047
   2e740:	e0bffc17 	ldw	r2,-16(fp)
   2e744:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2e748:	e0bffe17 	ldw	r2,-8(fp)
   2e74c:	00bfcf16 	blt	zero,r2,2e68c <_gp+0xffff4bbc>
   2e750:	00000106 	br	2e758 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2e754:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2e758:	e0fff517 	ldw	r3,-44(fp)
   2e75c:	e0bffd17 	ldw	r2,-12(fp)
   2e760:	1880141e 	bne	r3,r2,2e7b4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2e764:	e0bfff17 	ldw	r2,-4(fp)
   2e768:	1090000c 	andi	r2,r2,16384
   2e76c:	1000131e 	bne	r2,zero,2e7bc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2e770:	0001883a 	nop
   2e774:	e0bffc17 	ldw	r2,-16(fp)
   2e778:	10c00a17 	ldw	r3,40(r2)
   2e77c:	e0bff717 	ldw	r2,-36(fp)
   2e780:	1880051e 	bne	r3,r2,2e798 <altera_avalon_jtag_uart_read+0x138>
   2e784:	e0bffc17 	ldw	r2,-16(fp)
   2e788:	10c00917 	ldw	r3,36(r2)
   2e78c:	e0bffc17 	ldw	r2,-16(fp)
   2e790:	10800117 	ldw	r2,4(r2)
   2e794:	18bff736 	bltu	r3,r2,2e774 <_gp+0xffff4ca4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2e798:	e0bffc17 	ldw	r2,-16(fp)
   2e79c:	10c00a17 	ldw	r3,40(r2)
   2e7a0:	e0bff717 	ldw	r2,-36(fp)
   2e7a4:	18800726 	beq	r3,r2,2e7c4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e7a8:	e0bffe17 	ldw	r2,-8(fp)
   2e7ac:	00bfb716 	blt	zero,r2,2e68c <_gp+0xffff4bbc>
   2e7b0:	00000506 	br	2e7c8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2e7b4:	0001883a 	nop
   2e7b8:	00000306 	br	2e7c8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2e7bc:	0001883a 	nop
   2e7c0:	00000106 	br	2e7c8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2e7c4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2e7c8:	e0fff517 	ldw	r3,-44(fp)
   2e7cc:	e0bffd17 	ldw	r2,-12(fp)
   2e7d0:	18801826 	beq	r3,r2,2e834 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e7d4:	0005303a 	rdctl	r2,status
   2e7d8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e7dc:	e0fffb17 	ldw	r3,-20(fp)
   2e7e0:	00bfff84 	movi	r2,-2
   2e7e4:	1884703a 	and	r2,r3,r2
   2e7e8:	1001703a 	wrctl	status,r2
  
  return context;
   2e7ec:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2e7f0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e7f4:	e0bffc17 	ldw	r2,-16(fp)
   2e7f8:	10800817 	ldw	r2,32(r2)
   2e7fc:	10c00054 	ori	r3,r2,1
   2e800:	e0bffc17 	ldw	r2,-16(fp)
   2e804:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e808:	e0bffc17 	ldw	r2,-16(fp)
   2e80c:	10800017 	ldw	r2,0(r2)
   2e810:	10800104 	addi	r2,r2,4
   2e814:	1007883a 	mov	r3,r2
   2e818:	e0bffc17 	ldw	r2,-16(fp)
   2e81c:	10800817 	ldw	r2,32(r2)
   2e820:	18800035 	stwio	r2,0(r3)
   2e824:	e0bffa17 	ldw	r2,-24(fp)
   2e828:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e82c:	e0bff917 	ldw	r2,-28(fp)
   2e830:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2e834:	e0fff517 	ldw	r3,-44(fp)
   2e838:	e0bffd17 	ldw	r2,-12(fp)
   2e83c:	18800426 	beq	r3,r2,2e850 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2e840:	e0fff517 	ldw	r3,-44(fp)
   2e844:	e0bffd17 	ldw	r2,-12(fp)
   2e848:	1885c83a 	sub	r2,r3,r2
   2e84c:	00000606 	br	2e868 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2e850:	e0bfff17 	ldw	r2,-4(fp)
   2e854:	1090000c 	andi	r2,r2,16384
   2e858:	10000226 	beq	r2,zero,2e864 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2e85c:	00bffd44 	movi	r2,-11
   2e860:	00000106 	br	2e868 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2e864:	00bffec4 	movi	r2,-5
}
   2e868:	e037883a 	mov	sp,fp
   2e86c:	dfc00117 	ldw	ra,4(sp)
   2e870:	df000017 	ldw	fp,0(sp)
   2e874:	dec00204 	addi	sp,sp,8
   2e878:	f800283a 	ret

0002e87c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2e87c:	defff304 	addi	sp,sp,-52
   2e880:	dfc00c15 	stw	ra,48(sp)
   2e884:	df000b15 	stw	fp,44(sp)
   2e888:	df000b04 	addi	fp,sp,44
   2e88c:	e13ffc15 	stw	r4,-16(fp)
   2e890:	e17ffd15 	stw	r5,-12(fp)
   2e894:	e1bffe15 	stw	r6,-8(fp)
   2e898:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2e89c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2e8a0:	e0bffd17 	ldw	r2,-12(fp)
   2e8a4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e8a8:	00003706 	br	2e988 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2e8ac:	e0bffc17 	ldw	r2,-16(fp)
   2e8b0:	10800c17 	ldw	r2,48(r2)
   2e8b4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2e8b8:	e0bffc17 	ldw	r2,-16(fp)
   2e8bc:	10800d17 	ldw	r2,52(r2)
   2e8c0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2e8c4:	e0fff917 	ldw	r3,-28(fp)
   2e8c8:	e0bff517 	ldw	r2,-44(fp)
   2e8cc:	1880062e 	bgeu	r3,r2,2e8e8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2e8d0:	e0fff517 	ldw	r3,-44(fp)
   2e8d4:	e0bff917 	ldw	r2,-28(fp)
   2e8d8:	1885c83a 	sub	r2,r3,r2
   2e8dc:	10bfffc4 	addi	r2,r2,-1
   2e8e0:	e0bff615 	stw	r2,-40(fp)
   2e8e4:	00000b06 	br	2e914 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2e8e8:	e0bff517 	ldw	r2,-44(fp)
   2e8ec:	10000526 	beq	r2,zero,2e904 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2e8f0:	00c20004 	movi	r3,2048
   2e8f4:	e0bff917 	ldw	r2,-28(fp)
   2e8f8:	1885c83a 	sub	r2,r3,r2
   2e8fc:	e0bff615 	stw	r2,-40(fp)
   2e900:	00000406 	br	2e914 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2e904:	00c1ffc4 	movi	r3,2047
   2e908:	e0bff917 	ldw	r2,-28(fp)
   2e90c:	1885c83a 	sub	r2,r3,r2
   2e910:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2e914:	e0bff617 	ldw	r2,-40(fp)
   2e918:	10001e26 	beq	r2,zero,2e994 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2e91c:	e0fffe17 	ldw	r3,-8(fp)
   2e920:	e0bff617 	ldw	r2,-40(fp)
   2e924:	1880022e 	bgeu	r3,r2,2e930 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2e928:	e0bffe17 	ldw	r2,-8(fp)
   2e92c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2e930:	e0bffc17 	ldw	r2,-16(fp)
   2e934:	10c20e04 	addi	r3,r2,2104
   2e938:	e0bff917 	ldw	r2,-28(fp)
   2e93c:	1885883a 	add	r2,r3,r2
   2e940:	e1bff617 	ldw	r6,-40(fp)
   2e944:	e17ffd17 	ldw	r5,-12(fp)
   2e948:	1009883a 	mov	r4,r2
   2e94c:	00280ac0 	call	280ac <memcpy>
      ptr   += n;
   2e950:	e0fffd17 	ldw	r3,-12(fp)
   2e954:	e0bff617 	ldw	r2,-40(fp)
   2e958:	1885883a 	add	r2,r3,r2
   2e95c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2e960:	e0fffe17 	ldw	r3,-8(fp)
   2e964:	e0bff617 	ldw	r2,-40(fp)
   2e968:	1885c83a 	sub	r2,r3,r2
   2e96c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e970:	e0fff917 	ldw	r3,-28(fp)
   2e974:	e0bff617 	ldw	r2,-40(fp)
   2e978:	1885883a 	add	r2,r3,r2
   2e97c:	10c1ffcc 	andi	r3,r2,2047
   2e980:	e0bffc17 	ldw	r2,-16(fp)
   2e984:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e988:	e0bffe17 	ldw	r2,-8(fp)
   2e98c:	00bfc716 	blt	zero,r2,2e8ac <_gp+0xffff4ddc>
   2e990:	00000106 	br	2e998 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2e994:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e998:	0005303a 	rdctl	r2,status
   2e99c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e9a0:	e0fffb17 	ldw	r3,-20(fp)
   2e9a4:	00bfff84 	movi	r2,-2
   2e9a8:	1884703a 	and	r2,r3,r2
   2e9ac:	1001703a 	wrctl	status,r2
  
  return context;
   2e9b0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e9b4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e9b8:	e0bffc17 	ldw	r2,-16(fp)
   2e9bc:	10800817 	ldw	r2,32(r2)
   2e9c0:	10c00094 	ori	r3,r2,2
   2e9c4:	e0bffc17 	ldw	r2,-16(fp)
   2e9c8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e9cc:	e0bffc17 	ldw	r2,-16(fp)
   2e9d0:	10800017 	ldw	r2,0(r2)
   2e9d4:	10800104 	addi	r2,r2,4
   2e9d8:	1007883a 	mov	r3,r2
   2e9dc:	e0bffc17 	ldw	r2,-16(fp)
   2e9e0:	10800817 	ldw	r2,32(r2)
   2e9e4:	18800035 	stwio	r2,0(r3)
   2e9e8:	e0bffa17 	ldw	r2,-24(fp)
   2e9ec:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e9f0:	e0bff817 	ldw	r2,-32(fp)
   2e9f4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2e9f8:	e0bffe17 	ldw	r2,-8(fp)
   2e9fc:	0080100e 	bge	zero,r2,2ea40 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2ea00:	e0bfff17 	ldw	r2,-4(fp)
   2ea04:	1090000c 	andi	r2,r2,16384
   2ea08:	1000101e 	bne	r2,zero,2ea4c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ea0c:	0001883a 	nop
   2ea10:	e0bffc17 	ldw	r2,-16(fp)
   2ea14:	10c00d17 	ldw	r3,52(r2)
   2ea18:	e0bff517 	ldw	r2,-44(fp)
   2ea1c:	1880051e 	bne	r3,r2,2ea34 <altera_avalon_jtag_uart_write+0x1b8>
   2ea20:	e0bffc17 	ldw	r2,-16(fp)
   2ea24:	10c00917 	ldw	r3,36(r2)
   2ea28:	e0bffc17 	ldw	r2,-16(fp)
   2ea2c:	10800117 	ldw	r2,4(r2)
   2ea30:	18bff736 	bltu	r3,r2,2ea10 <_gp+0xffff4f40>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ea34:	e0bffc17 	ldw	r2,-16(fp)
   2ea38:	10800917 	ldw	r2,36(r2)
   2ea3c:	1000051e 	bne	r2,zero,2ea54 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2ea40:	e0bffe17 	ldw	r2,-8(fp)
   2ea44:	00bfd016 	blt	zero,r2,2e988 <_gp+0xffff4eb8>
   2ea48:	00000306 	br	2ea58 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2ea4c:	0001883a 	nop
   2ea50:	00000106 	br	2ea58 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2ea54:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2ea58:	e0fffd17 	ldw	r3,-12(fp)
   2ea5c:	e0bff717 	ldw	r2,-36(fp)
   2ea60:	18800426 	beq	r3,r2,2ea74 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2ea64:	e0fffd17 	ldw	r3,-12(fp)
   2ea68:	e0bff717 	ldw	r2,-36(fp)
   2ea6c:	1885c83a 	sub	r2,r3,r2
   2ea70:	00000606 	br	2ea8c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2ea74:	e0bfff17 	ldw	r2,-4(fp)
   2ea78:	1090000c 	andi	r2,r2,16384
   2ea7c:	10000226 	beq	r2,zero,2ea88 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2ea80:	00bffd44 	movi	r2,-11
   2ea84:	00000106 	br	2ea8c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2ea88:	00bffec4 	movi	r2,-5
}
   2ea8c:	e037883a 	mov	sp,fp
   2ea90:	dfc00117 	ldw	ra,4(sp)
   2ea94:	df000017 	ldw	fp,0(sp)
   2ea98:	dec00204 	addi	sp,sp,8
   2ea9c:	f800283a 	ret

0002eaa0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2eaa0:	defff504 	addi	sp,sp,-44
   2eaa4:	df000a15 	stw	fp,40(sp)
   2eaa8:	df000a04 	addi	fp,sp,40
   2eaac:	e13ffc15 	stw	r4,-16(fp)
   2eab0:	e17ffd15 	stw	r5,-12(fp)
   2eab4:	e1bffe15 	stw	r6,-8(fp)
   2eab8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2eabc:	e03ff615 	stw	zero,-40(fp)
   2eac0:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
   2eac4:	10003c26 	beq	r2,zero,2ebb8 <alt_alarm_start+0x118>
  {
    if (alarm)
   2eac8:	e0bffc17 	ldw	r2,-16(fp)
   2eacc:	10003826 	beq	r2,zero,2ebb0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2ead0:	e0bffc17 	ldw	r2,-16(fp)
   2ead4:	e0fffe17 	ldw	r3,-8(fp)
   2ead8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2eadc:	e0bffc17 	ldw	r2,-16(fp)
   2eae0:	e0ffff17 	ldw	r3,-4(fp)
   2eae4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eae8:	0005303a 	rdctl	r2,status
   2eaec:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eaf0:	e0fff917 	ldw	r3,-28(fp)
   2eaf4:	00bfff84 	movi	r2,-2
   2eaf8:	1884703a 	and	r2,r3,r2
   2eafc:	1001703a 	wrctl	status,r2
  
  return context;
   2eb00:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2eb04:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2eb08:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
   2eb0c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2eb10:	e0fffd17 	ldw	r3,-12(fp)
   2eb14:	e0bff617 	ldw	r2,-40(fp)
   2eb18:	1885883a 	add	r2,r3,r2
   2eb1c:	10c00044 	addi	r3,r2,1
   2eb20:	e0bffc17 	ldw	r2,-16(fp)
   2eb24:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2eb28:	e0bffc17 	ldw	r2,-16(fp)
   2eb2c:	10c00217 	ldw	r3,8(r2)
   2eb30:	e0bff617 	ldw	r2,-40(fp)
   2eb34:	1880042e 	bgeu	r3,r2,2eb48 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2eb38:	e0bffc17 	ldw	r2,-16(fp)
   2eb3c:	00c00044 	movi	r3,1
   2eb40:	10c00405 	stb	r3,16(r2)
   2eb44:	00000206 	br	2eb50 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2eb48:	e0bffc17 	ldw	r2,-16(fp)
   2eb4c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2eb50:	e0bffc17 	ldw	r2,-16(fp)
   2eb54:	d0e00f04 	addi	r3,gp,-32708
   2eb58:	e0fffa15 	stw	r3,-24(fp)
   2eb5c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2eb60:	e0bffb17 	ldw	r2,-20(fp)
   2eb64:	e0fffa17 	ldw	r3,-24(fp)
   2eb68:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2eb6c:	e0bffa17 	ldw	r2,-24(fp)
   2eb70:	10c00017 	ldw	r3,0(r2)
   2eb74:	e0bffb17 	ldw	r2,-20(fp)
   2eb78:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2eb7c:	e0bffa17 	ldw	r2,-24(fp)
   2eb80:	10800017 	ldw	r2,0(r2)
   2eb84:	e0fffb17 	ldw	r3,-20(fp)
   2eb88:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2eb8c:	e0bffa17 	ldw	r2,-24(fp)
   2eb90:	e0fffb17 	ldw	r3,-20(fp)
   2eb94:	10c00015 	stw	r3,0(r2)
   2eb98:	e0bff817 	ldw	r2,-32(fp)
   2eb9c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2eba0:	e0bff717 	ldw	r2,-36(fp)
   2eba4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2eba8:	0005883a 	mov	r2,zero
   2ebac:	00000306 	br	2ebbc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2ebb0:	00bffa84 	movi	r2,-22
   2ebb4:	00000106 	br	2ebbc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2ebb8:	00bfde84 	movi	r2,-134
  }
}
   2ebbc:	e037883a 	mov	sp,fp
   2ebc0:	df000017 	ldw	fp,0(sp)
   2ebc4:	dec00104 	addi	sp,sp,4
   2ebc8:	f800283a 	ret

0002ebcc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2ebcc:	defffe04 	addi	sp,sp,-8
   2ebd0:	df000115 	stw	fp,4(sp)
   2ebd4:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2ebd8:	e03fff15 	stw	zero,-4(fp)
   2ebdc:	00000506 	br	2ebf4 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2ebe0:	e0bfff17 	ldw	r2,-4(fp)
   2ebe4:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2ebe8:	e0bfff17 	ldw	r2,-4(fp)
   2ebec:	10800804 	addi	r2,r2,32
   2ebf0:	e0bfff15 	stw	r2,-4(fp)
   2ebf4:	e0bfff17 	ldw	r2,-4(fp)
   2ebf8:	10840030 	cmpltui	r2,r2,4096
   2ebfc:	103ff81e 	bne	r2,zero,2ebe0 <_gp+0xffff5110>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2ec00:	0001883a 	nop
   2ec04:	e037883a 	mov	sp,fp
   2ec08:	df000017 	ldw	fp,0(sp)
   2ec0c:	dec00104 	addi	sp,sp,4
   2ec10:	f800283a 	ret

0002ec14 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ec14:	defffe04 	addi	sp,sp,-8
   2ec18:	dfc00115 	stw	ra,4(sp)
   2ec1c:	df000015 	stw	fp,0(sp)
   2ec20:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ec24:	d0a00c17 	ldw	r2,-32720(gp)
   2ec28:	10000326 	beq	r2,zero,2ec38 <alt_get_errno+0x24>
   2ec2c:	d0a00c17 	ldw	r2,-32720(gp)
   2ec30:	103ee83a 	callr	r2
   2ec34:	00000106 	br	2ec3c <alt_get_errno+0x28>
   2ec38:	d0a6d304 	addi	r2,gp,-25780
}
   2ec3c:	e037883a 	mov	sp,fp
   2ec40:	dfc00117 	ldw	ra,4(sp)
   2ec44:	df000017 	ldw	fp,0(sp)
   2ec48:	dec00204 	addi	sp,sp,8
   2ec4c:	f800283a 	ret

0002ec50 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2ec50:	defffa04 	addi	sp,sp,-24
   2ec54:	dfc00515 	stw	ra,20(sp)
   2ec58:	df000415 	stw	fp,16(sp)
   2ec5c:	df000404 	addi	fp,sp,16
   2ec60:	e13ffe15 	stw	r4,-8(fp)
   2ec64:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2ec68:	e0bffe17 	ldw	r2,-8(fp)
   2ec6c:	10000326 	beq	r2,zero,2ec7c <alt_dev_llist_insert+0x2c>
   2ec70:	e0bffe17 	ldw	r2,-8(fp)
   2ec74:	10800217 	ldw	r2,8(r2)
   2ec78:	1000061e 	bne	r2,zero,2ec94 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2ec7c:	002ec140 	call	2ec14 <alt_get_errno>
   2ec80:	1007883a 	mov	r3,r2
   2ec84:	00800584 	movi	r2,22
   2ec88:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2ec8c:	00bffa84 	movi	r2,-22
   2ec90:	00001306 	br	2ece0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2ec94:	e0bffe17 	ldw	r2,-8(fp)
   2ec98:	e0ffff17 	ldw	r3,-4(fp)
   2ec9c:	e0fffc15 	stw	r3,-16(fp)
   2eca0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2eca4:	e0bffd17 	ldw	r2,-12(fp)
   2eca8:	e0fffc17 	ldw	r3,-16(fp)
   2ecac:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2ecb0:	e0bffc17 	ldw	r2,-16(fp)
   2ecb4:	10c00017 	ldw	r3,0(r2)
   2ecb8:	e0bffd17 	ldw	r2,-12(fp)
   2ecbc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2ecc0:	e0bffc17 	ldw	r2,-16(fp)
   2ecc4:	10800017 	ldw	r2,0(r2)
   2ecc8:	e0fffd17 	ldw	r3,-12(fp)
   2eccc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2ecd0:	e0bffc17 	ldw	r2,-16(fp)
   2ecd4:	e0fffd17 	ldw	r3,-12(fp)
   2ecd8:	10c00015 	stw	r3,0(r2)

  return 0;  
   2ecdc:	0005883a 	mov	r2,zero
}
   2ece0:	e037883a 	mov	sp,fp
   2ece4:	dfc00117 	ldw	ra,4(sp)
   2ece8:	df000017 	ldw	fp,0(sp)
   2ecec:	dec00204 	addi	sp,sp,8
   2ecf0:	f800283a 	ret

0002ecf4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2ecf4:	defffd04 	addi	sp,sp,-12
   2ecf8:	dfc00215 	stw	ra,8(sp)
   2ecfc:	df000115 	stw	fp,4(sp)
   2ed00:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2ed04:	008000f4 	movhi	r2,3
   2ed08:	10bf3704 	addi	r2,r2,-804
   2ed0c:	e0bfff15 	stw	r2,-4(fp)
   2ed10:	00000606 	br	2ed2c <_do_ctors+0x38>
        (*ctor) (); 
   2ed14:	e0bfff17 	ldw	r2,-4(fp)
   2ed18:	10800017 	ldw	r2,0(r2)
   2ed1c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2ed20:	e0bfff17 	ldw	r2,-4(fp)
   2ed24:	10bfff04 	addi	r2,r2,-4
   2ed28:	e0bfff15 	stw	r2,-4(fp)
   2ed2c:	e0ffff17 	ldw	r3,-4(fp)
   2ed30:	008000f4 	movhi	r2,3
   2ed34:	10bf3804 	addi	r2,r2,-800
   2ed38:	18bff62e 	bgeu	r3,r2,2ed14 <_gp+0xffff5244>
        (*ctor) (); 
}
   2ed3c:	0001883a 	nop
   2ed40:	e037883a 	mov	sp,fp
   2ed44:	dfc00117 	ldw	ra,4(sp)
   2ed48:	df000017 	ldw	fp,0(sp)
   2ed4c:	dec00204 	addi	sp,sp,8
   2ed50:	f800283a 	ret

0002ed54 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2ed54:	defffd04 	addi	sp,sp,-12
   2ed58:	dfc00215 	stw	ra,8(sp)
   2ed5c:	df000115 	stw	fp,4(sp)
   2ed60:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2ed64:	008000f4 	movhi	r2,3
   2ed68:	10bf3704 	addi	r2,r2,-804
   2ed6c:	e0bfff15 	stw	r2,-4(fp)
   2ed70:	00000606 	br	2ed8c <_do_dtors+0x38>
        (*dtor) (); 
   2ed74:	e0bfff17 	ldw	r2,-4(fp)
   2ed78:	10800017 	ldw	r2,0(r2)
   2ed7c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2ed80:	e0bfff17 	ldw	r2,-4(fp)
   2ed84:	10bfff04 	addi	r2,r2,-4
   2ed88:	e0bfff15 	stw	r2,-4(fp)
   2ed8c:	e0ffff17 	ldw	r3,-4(fp)
   2ed90:	008000f4 	movhi	r2,3
   2ed94:	10bf3804 	addi	r2,r2,-800
   2ed98:	18bff62e 	bgeu	r3,r2,2ed74 <_gp+0xffff52a4>
        (*dtor) (); 
}
   2ed9c:	0001883a 	nop
   2eda0:	e037883a 	mov	sp,fp
   2eda4:	dfc00117 	ldw	ra,4(sp)
   2eda8:	df000017 	ldw	fp,0(sp)
   2edac:	dec00204 	addi	sp,sp,8
   2edb0:	f800283a 	ret

0002edb4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2edb4:	defffe04 	addi	sp,sp,-8
   2edb8:	dfc00115 	stw	ra,4(sp)
   2edbc:	df000015 	stw	fp,0(sp)
   2edc0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2edc4:	01480004 	movi	r5,8192
   2edc8:	0009883a 	mov	r4,zero
   2edcc:	002f8200 	call	2f820 <alt_icache_flush>
#endif
}
   2edd0:	0001883a 	nop
   2edd4:	e037883a 	mov	sp,fp
   2edd8:	dfc00117 	ldw	ra,4(sp)
   2eddc:	df000017 	ldw	fp,0(sp)
   2ede0:	dec00204 	addi	sp,sp,8
   2ede4:	f800283a 	ret

0002ede8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2ede8:	defff904 	addi	sp,sp,-28
   2edec:	dfc00615 	stw	ra,24(sp)
   2edf0:	df000515 	stw	fp,20(sp)
   2edf4:	df000504 	addi	fp,sp,20
   2edf8:	e13ffc15 	stw	r4,-16(fp)
   2edfc:	e17ffd15 	stw	r5,-12(fp)
   2ee00:	e1bffe15 	stw	r6,-8(fp)
   2ee04:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2ee08:	e0800217 	ldw	r2,8(fp)
   2ee0c:	d8800015 	stw	r2,0(sp)
   2ee10:	e1ffff17 	ldw	r7,-4(fp)
   2ee14:	e1bffe17 	ldw	r6,-8(fp)
   2ee18:	e17ffd17 	ldw	r5,-12(fp)
   2ee1c:	e13ffc17 	ldw	r4,-16(fp)
   2ee20:	002ef980 	call	2ef98 <alt_iic_isr_register>
}  
   2ee24:	e037883a 	mov	sp,fp
   2ee28:	dfc00117 	ldw	ra,4(sp)
   2ee2c:	df000017 	ldw	fp,0(sp)
   2ee30:	dec00204 	addi	sp,sp,8
   2ee34:	f800283a 	ret

0002ee38 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2ee38:	defff904 	addi	sp,sp,-28
   2ee3c:	df000615 	stw	fp,24(sp)
   2ee40:	df000604 	addi	fp,sp,24
   2ee44:	e13ffe15 	stw	r4,-8(fp)
   2ee48:	e17fff15 	stw	r5,-4(fp)
   2ee4c:	e0bfff17 	ldw	r2,-4(fp)
   2ee50:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ee54:	0005303a 	rdctl	r2,status
   2ee58:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ee5c:	e0fffb17 	ldw	r3,-20(fp)
   2ee60:	00bfff84 	movi	r2,-2
   2ee64:	1884703a 	and	r2,r3,r2
   2ee68:	1001703a 	wrctl	status,r2
  
  return context;
   2ee6c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2ee70:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2ee74:	00c00044 	movi	r3,1
   2ee78:	e0bffa17 	ldw	r2,-24(fp)
   2ee7c:	1884983a 	sll	r2,r3,r2
   2ee80:	1007883a 	mov	r3,r2
   2ee84:	d0a6d717 	ldw	r2,-25764(gp)
   2ee88:	1884b03a 	or	r2,r3,r2
   2ee8c:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2ee90:	d0a6d717 	ldw	r2,-25764(gp)
   2ee94:	100170fa 	wrctl	ienable,r2
   2ee98:	e0bffc17 	ldw	r2,-16(fp)
   2ee9c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2eea0:	e0bffd17 	ldw	r2,-12(fp)
   2eea4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2eea8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2eeac:	0001883a 	nop
}
   2eeb0:	e037883a 	mov	sp,fp
   2eeb4:	df000017 	ldw	fp,0(sp)
   2eeb8:	dec00104 	addi	sp,sp,4
   2eebc:	f800283a 	ret

0002eec0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2eec0:	defff904 	addi	sp,sp,-28
   2eec4:	df000615 	stw	fp,24(sp)
   2eec8:	df000604 	addi	fp,sp,24
   2eecc:	e13ffe15 	stw	r4,-8(fp)
   2eed0:	e17fff15 	stw	r5,-4(fp)
   2eed4:	e0bfff17 	ldw	r2,-4(fp)
   2eed8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eedc:	0005303a 	rdctl	r2,status
   2eee0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eee4:	e0fffb17 	ldw	r3,-20(fp)
   2eee8:	00bfff84 	movi	r2,-2
   2eeec:	1884703a 	and	r2,r3,r2
   2eef0:	1001703a 	wrctl	status,r2
  
  return context;
   2eef4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2eef8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2eefc:	00c00044 	movi	r3,1
   2ef00:	e0bffa17 	ldw	r2,-24(fp)
   2ef04:	1884983a 	sll	r2,r3,r2
   2ef08:	0084303a 	nor	r2,zero,r2
   2ef0c:	1007883a 	mov	r3,r2
   2ef10:	d0a6d717 	ldw	r2,-25764(gp)
   2ef14:	1884703a 	and	r2,r3,r2
   2ef18:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2ef1c:	d0a6d717 	ldw	r2,-25764(gp)
   2ef20:	100170fa 	wrctl	ienable,r2
   2ef24:	e0bffc17 	ldw	r2,-16(fp)
   2ef28:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ef2c:	e0bffd17 	ldw	r2,-12(fp)
   2ef30:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2ef34:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2ef38:	0001883a 	nop
}
   2ef3c:	e037883a 	mov	sp,fp
   2ef40:	df000017 	ldw	fp,0(sp)
   2ef44:	dec00104 	addi	sp,sp,4
   2ef48:	f800283a 	ret

0002ef4c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2ef4c:	defffc04 	addi	sp,sp,-16
   2ef50:	df000315 	stw	fp,12(sp)
   2ef54:	df000304 	addi	fp,sp,12
   2ef58:	e13ffe15 	stw	r4,-8(fp)
   2ef5c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2ef60:	000530fa 	rdctl	r2,ienable
   2ef64:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2ef68:	00c00044 	movi	r3,1
   2ef6c:	e0bfff17 	ldw	r2,-4(fp)
   2ef70:	1884983a 	sll	r2,r3,r2
   2ef74:	1007883a 	mov	r3,r2
   2ef78:	e0bffd17 	ldw	r2,-12(fp)
   2ef7c:	1884703a 	and	r2,r3,r2
   2ef80:	1004c03a 	cmpne	r2,r2,zero
   2ef84:	10803fcc 	andi	r2,r2,255
}
   2ef88:	e037883a 	mov	sp,fp
   2ef8c:	df000017 	ldw	fp,0(sp)
   2ef90:	dec00104 	addi	sp,sp,4
   2ef94:	f800283a 	ret

0002ef98 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2ef98:	defff504 	addi	sp,sp,-44
   2ef9c:	dfc00a15 	stw	ra,40(sp)
   2efa0:	df000915 	stw	fp,36(sp)
   2efa4:	df000904 	addi	fp,sp,36
   2efa8:	e13ffc15 	stw	r4,-16(fp)
   2efac:	e17ffd15 	stw	r5,-12(fp)
   2efb0:	e1bffe15 	stw	r6,-8(fp)
   2efb4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2efb8:	00bffa84 	movi	r2,-22
   2efbc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2efc0:	e0bffd17 	ldw	r2,-12(fp)
   2efc4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2efc8:	e0bff817 	ldw	r2,-32(fp)
   2efcc:	10800808 	cmpgei	r2,r2,32
   2efd0:	1000271e 	bne	r2,zero,2f070 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2efd4:	0005303a 	rdctl	r2,status
   2efd8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2efdc:	e0fffb17 	ldw	r3,-20(fp)
   2efe0:	00bfff84 	movi	r2,-2
   2efe4:	1884703a 	and	r2,r3,r2
   2efe8:	1001703a 	wrctl	status,r2
  
  return context;
   2efec:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2eff0:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2eff4:	008000f4 	movhi	r2,3
   2eff8:	108d9904 	addi	r2,r2,13924
   2effc:	e0fff817 	ldw	r3,-32(fp)
   2f000:	180690fa 	slli	r3,r3,3
   2f004:	10c5883a 	add	r2,r2,r3
   2f008:	e0fffe17 	ldw	r3,-8(fp)
   2f00c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2f010:	008000f4 	movhi	r2,3
   2f014:	108d9904 	addi	r2,r2,13924
   2f018:	e0fff817 	ldw	r3,-32(fp)
   2f01c:	180690fa 	slli	r3,r3,3
   2f020:	10c5883a 	add	r2,r2,r3
   2f024:	10800104 	addi	r2,r2,4
   2f028:	e0ffff17 	ldw	r3,-4(fp)
   2f02c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2f030:	e0bffe17 	ldw	r2,-8(fp)
   2f034:	10000526 	beq	r2,zero,2f04c <alt_iic_isr_register+0xb4>
   2f038:	e0bff817 	ldw	r2,-32(fp)
   2f03c:	100b883a 	mov	r5,r2
   2f040:	e13ffc17 	ldw	r4,-16(fp)
   2f044:	002ee380 	call	2ee38 <alt_ic_irq_enable>
   2f048:	00000406 	br	2f05c <alt_iic_isr_register+0xc4>
   2f04c:	e0bff817 	ldw	r2,-32(fp)
   2f050:	100b883a 	mov	r5,r2
   2f054:	e13ffc17 	ldw	r4,-16(fp)
   2f058:	002eec00 	call	2eec0 <alt_ic_irq_disable>
   2f05c:	e0bff715 	stw	r2,-36(fp)
   2f060:	e0bffa17 	ldw	r2,-24(fp)
   2f064:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f068:	e0bff917 	ldw	r2,-28(fp)
   2f06c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2f070:	e0bff717 	ldw	r2,-36(fp)
}
   2f074:	e037883a 	mov	sp,fp
   2f078:	dfc00117 	ldw	ra,4(sp)
   2f07c:	df000017 	ldw	fp,0(sp)
   2f080:	dec00204 	addi	sp,sp,8
   2f084:	f800283a 	ret

0002f088 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2f088:	defff904 	addi	sp,sp,-28
   2f08c:	dfc00615 	stw	ra,24(sp)
   2f090:	df000515 	stw	fp,20(sp)
   2f094:	df000504 	addi	fp,sp,20
   2f098:	e13ffc15 	stw	r4,-16(fp)
   2f09c:	e17ffd15 	stw	r5,-12(fp)
   2f0a0:	e1bffe15 	stw	r6,-8(fp)
   2f0a4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2f0a8:	e1bfff17 	ldw	r6,-4(fp)
   2f0ac:	e17ffe17 	ldw	r5,-8(fp)
   2f0b0:	e13ffd17 	ldw	r4,-12(fp)
   2f0b4:	002f2c80 	call	2f2c8 <open>
   2f0b8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2f0bc:	e0bffb17 	ldw	r2,-20(fp)
   2f0c0:	10001c16 	blt	r2,zero,2f134 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2f0c4:	008000f4 	movhi	r2,3
   2f0c8:	10823c04 	addi	r2,r2,2288
   2f0cc:	e0fffb17 	ldw	r3,-20(fp)
   2f0d0:	18c00324 	muli	r3,r3,12
   2f0d4:	10c5883a 	add	r2,r2,r3
   2f0d8:	10c00017 	ldw	r3,0(r2)
   2f0dc:	e0bffc17 	ldw	r2,-16(fp)
   2f0e0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f0e4:	008000f4 	movhi	r2,3
   2f0e8:	10823c04 	addi	r2,r2,2288
   2f0ec:	e0fffb17 	ldw	r3,-20(fp)
   2f0f0:	18c00324 	muli	r3,r3,12
   2f0f4:	10c5883a 	add	r2,r2,r3
   2f0f8:	10800104 	addi	r2,r2,4
   2f0fc:	10c00017 	ldw	r3,0(r2)
   2f100:	e0bffc17 	ldw	r2,-16(fp)
   2f104:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f108:	008000f4 	movhi	r2,3
   2f10c:	10823c04 	addi	r2,r2,2288
   2f110:	e0fffb17 	ldw	r3,-20(fp)
   2f114:	18c00324 	muli	r3,r3,12
   2f118:	10c5883a 	add	r2,r2,r3
   2f11c:	10800204 	addi	r2,r2,8
   2f120:	10c00017 	ldw	r3,0(r2)
   2f124:	e0bffc17 	ldw	r2,-16(fp)
   2f128:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f12c:	e13ffb17 	ldw	r4,-20(fp)
   2f130:	002dd3c0 	call	2dd3c <alt_release_fd>
  }
} 
   2f134:	0001883a 	nop
   2f138:	e037883a 	mov	sp,fp
   2f13c:	dfc00117 	ldw	ra,4(sp)
   2f140:	df000017 	ldw	fp,0(sp)
   2f144:	dec00204 	addi	sp,sp,8
   2f148:	f800283a 	ret

0002f14c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f14c:	defffb04 	addi	sp,sp,-20
   2f150:	dfc00415 	stw	ra,16(sp)
   2f154:	df000315 	stw	fp,12(sp)
   2f158:	df000304 	addi	fp,sp,12
   2f15c:	e13ffd15 	stw	r4,-12(fp)
   2f160:	e17ffe15 	stw	r5,-8(fp)
   2f164:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f168:	01c07fc4 	movi	r7,511
   2f16c:	01800044 	movi	r6,1
   2f170:	e17ffd17 	ldw	r5,-12(fp)
   2f174:	010000f4 	movhi	r4,3
   2f178:	21023f04 	addi	r4,r4,2300
   2f17c:	002f0880 	call	2f088 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f180:	01c07fc4 	movi	r7,511
   2f184:	000d883a 	mov	r6,zero
   2f188:	e17ffe17 	ldw	r5,-8(fp)
   2f18c:	010000f4 	movhi	r4,3
   2f190:	21023c04 	addi	r4,r4,2288
   2f194:	002f0880 	call	2f088 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f198:	01c07fc4 	movi	r7,511
   2f19c:	01800044 	movi	r6,1
   2f1a0:	e17fff17 	ldw	r5,-4(fp)
   2f1a4:	010000f4 	movhi	r4,3
   2f1a8:	21024204 	addi	r4,r4,2312
   2f1ac:	002f0880 	call	2f088 <alt_open_fd>
}  
   2f1b0:	0001883a 	nop
   2f1b4:	e037883a 	mov	sp,fp
   2f1b8:	dfc00117 	ldw	ra,4(sp)
   2f1bc:	df000017 	ldw	fp,0(sp)
   2f1c0:	dec00204 	addi	sp,sp,8
   2f1c4:	f800283a 	ret

0002f1c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f1c8:	defffe04 	addi	sp,sp,-8
   2f1cc:	dfc00115 	stw	ra,4(sp)
   2f1d0:	df000015 	stw	fp,0(sp)
   2f1d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f1d8:	d0a00c17 	ldw	r2,-32720(gp)
   2f1dc:	10000326 	beq	r2,zero,2f1ec <alt_get_errno+0x24>
   2f1e0:	d0a00c17 	ldw	r2,-32720(gp)
   2f1e4:	103ee83a 	callr	r2
   2f1e8:	00000106 	br	2f1f0 <alt_get_errno+0x28>
   2f1ec:	d0a6d304 	addi	r2,gp,-25780
}
   2f1f0:	e037883a 	mov	sp,fp
   2f1f4:	dfc00117 	ldw	ra,4(sp)
   2f1f8:	df000017 	ldw	fp,0(sp)
   2f1fc:	dec00204 	addi	sp,sp,8
   2f200:	f800283a 	ret

0002f204 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2f204:	defffd04 	addi	sp,sp,-12
   2f208:	df000215 	stw	fp,8(sp)
   2f20c:	df000204 	addi	fp,sp,8
   2f210:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2f214:	e0bfff17 	ldw	r2,-4(fp)
   2f218:	10800217 	ldw	r2,8(r2)
   2f21c:	10d00034 	orhi	r3,r2,16384
   2f220:	e0bfff17 	ldw	r2,-4(fp)
   2f224:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f228:	e03ffe15 	stw	zero,-8(fp)
   2f22c:	00001d06 	br	2f2a4 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f230:	008000f4 	movhi	r2,3
   2f234:	10823c04 	addi	r2,r2,2288
   2f238:	e0fffe17 	ldw	r3,-8(fp)
   2f23c:	18c00324 	muli	r3,r3,12
   2f240:	10c5883a 	add	r2,r2,r3
   2f244:	10c00017 	ldw	r3,0(r2)
   2f248:	e0bfff17 	ldw	r2,-4(fp)
   2f24c:	10800017 	ldw	r2,0(r2)
   2f250:	1880111e 	bne	r3,r2,2f298 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f254:	008000f4 	movhi	r2,3
   2f258:	10823c04 	addi	r2,r2,2288
   2f25c:	e0fffe17 	ldw	r3,-8(fp)
   2f260:	18c00324 	muli	r3,r3,12
   2f264:	10c5883a 	add	r2,r2,r3
   2f268:	10800204 	addi	r2,r2,8
   2f26c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f270:	1000090e 	bge	r2,zero,2f298 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2f274:	e0bffe17 	ldw	r2,-8(fp)
   2f278:	10c00324 	muli	r3,r2,12
   2f27c:	008000f4 	movhi	r2,3
   2f280:	10823c04 	addi	r2,r2,2288
   2f284:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f288:	e0bfff17 	ldw	r2,-4(fp)
   2f28c:	18800226 	beq	r3,r2,2f298 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2f290:	00bffcc4 	movi	r2,-13
   2f294:	00000806 	br	2f2b8 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f298:	e0bffe17 	ldw	r2,-8(fp)
   2f29c:	10800044 	addi	r2,r2,1
   2f2a0:	e0bffe15 	stw	r2,-8(fp)
   2f2a4:	d0a00b17 	ldw	r2,-32724(gp)
   2f2a8:	1007883a 	mov	r3,r2
   2f2ac:	e0bffe17 	ldw	r2,-8(fp)
   2f2b0:	18bfdf2e 	bgeu	r3,r2,2f230 <_gp+0xffff5760>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2f2b4:	0005883a 	mov	r2,zero
}
   2f2b8:	e037883a 	mov	sp,fp
   2f2bc:	df000017 	ldw	fp,0(sp)
   2f2c0:	dec00104 	addi	sp,sp,4
   2f2c4:	f800283a 	ret

0002f2c8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2f2c8:	defff604 	addi	sp,sp,-40
   2f2cc:	dfc00915 	stw	ra,36(sp)
   2f2d0:	df000815 	stw	fp,32(sp)
   2f2d4:	df000804 	addi	fp,sp,32
   2f2d8:	e13ffd15 	stw	r4,-12(fp)
   2f2dc:	e17ffe15 	stw	r5,-8(fp)
   2f2e0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2f2e4:	00bfffc4 	movi	r2,-1
   2f2e8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2f2ec:	00bffb44 	movi	r2,-19
   2f2f0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2f2f4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2f2f8:	d1600904 	addi	r5,gp,-32732
   2f2fc:	e13ffd17 	ldw	r4,-12(fp)
   2f300:	002f5e40 	call	2f5e4 <alt_find_dev>
   2f304:	e0bff815 	stw	r2,-32(fp)
   2f308:	e0bff817 	ldw	r2,-32(fp)
   2f30c:	1000051e 	bne	r2,zero,2f324 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2f310:	e13ffd17 	ldw	r4,-12(fp)
   2f314:	002f6740 	call	2f674 <alt_find_file>
   2f318:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2f31c:	00800044 	movi	r2,1
   2f320:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2f324:	e0bff817 	ldw	r2,-32(fp)
   2f328:	10002926 	beq	r2,zero,2f3d0 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2f32c:	e13ff817 	ldw	r4,-32(fp)
   2f330:	002f77c0 	call	2f77c <alt_get_fd>
   2f334:	e0bff915 	stw	r2,-28(fp)
   2f338:	e0bff917 	ldw	r2,-28(fp)
   2f33c:	1000030e 	bge	r2,zero,2f34c <open+0x84>
    {
      status = index;
   2f340:	e0bff917 	ldw	r2,-28(fp)
   2f344:	e0bffa15 	stw	r2,-24(fp)
   2f348:	00002306 	br	2f3d8 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2f34c:	e0bff917 	ldw	r2,-28(fp)
   2f350:	10c00324 	muli	r3,r2,12
   2f354:	008000f4 	movhi	r2,3
   2f358:	10823c04 	addi	r2,r2,2288
   2f35c:	1885883a 	add	r2,r3,r2
   2f360:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2f364:	e0fffe17 	ldw	r3,-8(fp)
   2f368:	00900034 	movhi	r2,16384
   2f36c:	10bfffc4 	addi	r2,r2,-1
   2f370:	1886703a 	and	r3,r3,r2
   2f374:	e0bffc17 	ldw	r2,-16(fp)
   2f378:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2f37c:	e0bffb17 	ldw	r2,-20(fp)
   2f380:	1000051e 	bne	r2,zero,2f398 <open+0xd0>
   2f384:	e13ffc17 	ldw	r4,-16(fp)
   2f388:	002f2040 	call	2f204 <alt_file_locked>
   2f38c:	e0bffa15 	stw	r2,-24(fp)
   2f390:	e0bffa17 	ldw	r2,-24(fp)
   2f394:	10001016 	blt	r2,zero,2f3d8 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2f398:	e0bff817 	ldw	r2,-32(fp)
   2f39c:	10800317 	ldw	r2,12(r2)
   2f3a0:	10000826 	beq	r2,zero,2f3c4 <open+0xfc>
   2f3a4:	e0bff817 	ldw	r2,-32(fp)
   2f3a8:	10800317 	ldw	r2,12(r2)
   2f3ac:	e1ffff17 	ldw	r7,-4(fp)
   2f3b0:	e1bffe17 	ldw	r6,-8(fp)
   2f3b4:	e17ffd17 	ldw	r5,-12(fp)
   2f3b8:	e13ffc17 	ldw	r4,-16(fp)
   2f3bc:	103ee83a 	callr	r2
   2f3c0:	00000106 	br	2f3c8 <open+0x100>
   2f3c4:	0005883a 	mov	r2,zero
   2f3c8:	e0bffa15 	stw	r2,-24(fp)
   2f3cc:	00000206 	br	2f3d8 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2f3d0:	00bffb44 	movi	r2,-19
   2f3d4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2f3d8:	e0bffa17 	ldw	r2,-24(fp)
   2f3dc:	1000090e 	bge	r2,zero,2f404 <open+0x13c>
  {
    alt_release_fd (index);  
   2f3e0:	e13ff917 	ldw	r4,-28(fp)
   2f3e4:	002dd3c0 	call	2dd3c <alt_release_fd>
    ALT_ERRNO = -status;
   2f3e8:	002f1c80 	call	2f1c8 <alt_get_errno>
   2f3ec:	1007883a 	mov	r3,r2
   2f3f0:	e0bffa17 	ldw	r2,-24(fp)
   2f3f4:	0085c83a 	sub	r2,zero,r2
   2f3f8:	18800015 	stw	r2,0(r3)
    return -1;
   2f3fc:	00bfffc4 	movi	r2,-1
   2f400:	00000106 	br	2f408 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2f404:	e0bff917 	ldw	r2,-28(fp)
}
   2f408:	e037883a 	mov	sp,fp
   2f40c:	dfc00117 	ldw	ra,4(sp)
   2f410:	df000017 	ldw	fp,0(sp)
   2f414:	dec00204 	addi	sp,sp,8
   2f418:	f800283a 	ret

0002f41c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2f41c:	defffa04 	addi	sp,sp,-24
   2f420:	df000515 	stw	fp,20(sp)
   2f424:	df000504 	addi	fp,sp,20
   2f428:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f42c:	0005303a 	rdctl	r2,status
   2f430:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f434:	e0fffc17 	ldw	r3,-16(fp)
   2f438:	00bfff84 	movi	r2,-2
   2f43c:	1884703a 	and	r2,r3,r2
   2f440:	1001703a 	wrctl	status,r2
  
  return context;
   2f444:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2f448:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2f44c:	e0bfff17 	ldw	r2,-4(fp)
   2f450:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2f454:	e0bffd17 	ldw	r2,-12(fp)
   2f458:	10800017 	ldw	r2,0(r2)
   2f45c:	e0fffd17 	ldw	r3,-12(fp)
   2f460:	18c00117 	ldw	r3,4(r3)
   2f464:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2f468:	e0bffd17 	ldw	r2,-12(fp)
   2f46c:	10800117 	ldw	r2,4(r2)
   2f470:	e0fffd17 	ldw	r3,-12(fp)
   2f474:	18c00017 	ldw	r3,0(r3)
   2f478:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2f47c:	e0bffd17 	ldw	r2,-12(fp)
   2f480:	e0fffd17 	ldw	r3,-12(fp)
   2f484:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2f488:	e0bffd17 	ldw	r2,-12(fp)
   2f48c:	e0fffd17 	ldw	r3,-12(fp)
   2f490:	10c00015 	stw	r3,0(r2)
   2f494:	e0bffb17 	ldw	r2,-20(fp)
   2f498:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f49c:	e0bffe17 	ldw	r2,-8(fp)
   2f4a0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2f4a4:	0001883a 	nop
   2f4a8:	e037883a 	mov	sp,fp
   2f4ac:	df000017 	ldw	fp,0(sp)
   2f4b0:	dec00104 	addi	sp,sp,4
   2f4b4:	f800283a 	ret

0002f4b8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2f4b8:	defffb04 	addi	sp,sp,-20
   2f4bc:	dfc00415 	stw	ra,16(sp)
   2f4c0:	df000315 	stw	fp,12(sp)
   2f4c4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2f4c8:	d0a00f17 	ldw	r2,-32708(gp)
   2f4cc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2f4d0:	d0a6d917 	ldw	r2,-25756(gp)
   2f4d4:	10800044 	addi	r2,r2,1
   2f4d8:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f4dc:	00002e06 	br	2f598 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2f4e0:	e0bffd17 	ldw	r2,-12(fp)
   2f4e4:	10800017 	ldw	r2,0(r2)
   2f4e8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2f4ec:	e0bffd17 	ldw	r2,-12(fp)
   2f4f0:	10800403 	ldbu	r2,16(r2)
   2f4f4:	10803fcc 	andi	r2,r2,255
   2f4f8:	10000426 	beq	r2,zero,2f50c <alt_tick+0x54>
   2f4fc:	d0a6d917 	ldw	r2,-25756(gp)
   2f500:	1000021e 	bne	r2,zero,2f50c <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2f504:	e0bffd17 	ldw	r2,-12(fp)
   2f508:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2f50c:	e0bffd17 	ldw	r2,-12(fp)
   2f510:	10800217 	ldw	r2,8(r2)
   2f514:	d0e6d917 	ldw	r3,-25756(gp)
   2f518:	18801d36 	bltu	r3,r2,2f590 <alt_tick+0xd8>
   2f51c:	e0bffd17 	ldw	r2,-12(fp)
   2f520:	10800403 	ldbu	r2,16(r2)
   2f524:	10803fcc 	andi	r2,r2,255
   2f528:	1000191e 	bne	r2,zero,2f590 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2f52c:	e0bffd17 	ldw	r2,-12(fp)
   2f530:	10800317 	ldw	r2,12(r2)
   2f534:	e0fffd17 	ldw	r3,-12(fp)
   2f538:	18c00517 	ldw	r3,20(r3)
   2f53c:	1809883a 	mov	r4,r3
   2f540:	103ee83a 	callr	r2
   2f544:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2f548:	e0bfff17 	ldw	r2,-4(fp)
   2f54c:	1000031e 	bne	r2,zero,2f55c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2f550:	e13ffd17 	ldw	r4,-12(fp)
   2f554:	002f41c0 	call	2f41c <alt_alarm_stop>
   2f558:	00000d06 	br	2f590 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2f55c:	e0bffd17 	ldw	r2,-12(fp)
   2f560:	10c00217 	ldw	r3,8(r2)
   2f564:	e0bfff17 	ldw	r2,-4(fp)
   2f568:	1887883a 	add	r3,r3,r2
   2f56c:	e0bffd17 	ldw	r2,-12(fp)
   2f570:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2f574:	e0bffd17 	ldw	r2,-12(fp)
   2f578:	10c00217 	ldw	r3,8(r2)
   2f57c:	d0a6d917 	ldw	r2,-25756(gp)
   2f580:	1880032e 	bgeu	r3,r2,2f590 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2f584:	e0bffd17 	ldw	r2,-12(fp)
   2f588:	00c00044 	movi	r3,1
   2f58c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2f590:	e0bffe17 	ldw	r2,-8(fp)
   2f594:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f598:	e0fffd17 	ldw	r3,-12(fp)
   2f59c:	d0a00f04 	addi	r2,gp,-32708
   2f5a0:	18bfcf1e 	bne	r3,r2,2f4e0 <_gp+0xffff5a10>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2f5a4:	0001883a 	nop
}
   2f5a8:	0001883a 	nop
   2f5ac:	e037883a 	mov	sp,fp
   2f5b0:	dfc00117 	ldw	ra,4(sp)
   2f5b4:	df000017 	ldw	fp,0(sp)
   2f5b8:	dec00204 	addi	sp,sp,8
   2f5bc:	f800283a 	ret

0002f5c0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2f5c0:	deffff04 	addi	sp,sp,-4
   2f5c4:	df000015 	stw	fp,0(sp)
   2f5c8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2f5cc:	000170fa 	wrctl	ienable,zero
}
   2f5d0:	0001883a 	nop
   2f5d4:	e037883a 	mov	sp,fp
   2f5d8:	df000017 	ldw	fp,0(sp)
   2f5dc:	dec00104 	addi	sp,sp,4
   2f5e0:	f800283a 	ret

0002f5e4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f5e4:	defffa04 	addi	sp,sp,-24
   2f5e8:	dfc00515 	stw	ra,20(sp)
   2f5ec:	df000415 	stw	fp,16(sp)
   2f5f0:	df000404 	addi	fp,sp,16
   2f5f4:	e13ffe15 	stw	r4,-8(fp)
   2f5f8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f5fc:	e0bfff17 	ldw	r2,-4(fp)
   2f600:	10800017 	ldw	r2,0(r2)
   2f604:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f608:	e13ffe17 	ldw	r4,-8(fp)
   2f60c:	00232040 	call	23204 <strlen>
   2f610:	10800044 	addi	r2,r2,1
   2f614:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f618:	00000d06 	br	2f650 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f61c:	e0bffc17 	ldw	r2,-16(fp)
   2f620:	10800217 	ldw	r2,8(r2)
   2f624:	e0fffd17 	ldw	r3,-12(fp)
   2f628:	180d883a 	mov	r6,r3
   2f62c:	e17ffe17 	ldw	r5,-8(fp)
   2f630:	1009883a 	mov	r4,r2
   2f634:	002f9980 	call	2f998 <memcmp>
   2f638:	1000021e 	bne	r2,zero,2f644 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f63c:	e0bffc17 	ldw	r2,-16(fp)
   2f640:	00000706 	br	2f660 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f644:	e0bffc17 	ldw	r2,-16(fp)
   2f648:	10800017 	ldw	r2,0(r2)
   2f64c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f650:	e0fffc17 	ldw	r3,-16(fp)
   2f654:	e0bfff17 	ldw	r2,-4(fp)
   2f658:	18bff01e 	bne	r3,r2,2f61c <_gp+0xffff5b4c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2f65c:	0005883a 	mov	r2,zero
}
   2f660:	e037883a 	mov	sp,fp
   2f664:	dfc00117 	ldw	ra,4(sp)
   2f668:	df000017 	ldw	fp,0(sp)
   2f66c:	dec00204 	addi	sp,sp,8
   2f670:	f800283a 	ret

0002f674 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f674:	defffb04 	addi	sp,sp,-20
   2f678:	dfc00415 	stw	ra,16(sp)
   2f67c:	df000315 	stw	fp,12(sp)
   2f680:	df000304 	addi	fp,sp,12
   2f684:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f688:	d0a00717 	ldw	r2,-32740(gp)
   2f68c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f690:	00003106 	br	2f758 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2f694:	e0bffd17 	ldw	r2,-12(fp)
   2f698:	10800217 	ldw	r2,8(r2)
   2f69c:	1009883a 	mov	r4,r2
   2f6a0:	00232040 	call	23204 <strlen>
   2f6a4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2f6a8:	e0bffd17 	ldw	r2,-12(fp)
   2f6ac:	10c00217 	ldw	r3,8(r2)
   2f6b0:	e0bffe17 	ldw	r2,-8(fp)
   2f6b4:	10bfffc4 	addi	r2,r2,-1
   2f6b8:	1885883a 	add	r2,r3,r2
   2f6bc:	10800003 	ldbu	r2,0(r2)
   2f6c0:	10803fcc 	andi	r2,r2,255
   2f6c4:	1080201c 	xori	r2,r2,128
   2f6c8:	10bfe004 	addi	r2,r2,-128
   2f6cc:	10800bd8 	cmpnei	r2,r2,47
   2f6d0:	1000031e 	bne	r2,zero,2f6e0 <alt_find_file+0x6c>
    {
      len -= 1;
   2f6d4:	e0bffe17 	ldw	r2,-8(fp)
   2f6d8:	10bfffc4 	addi	r2,r2,-1
   2f6dc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f6e0:	e0bffe17 	ldw	r2,-8(fp)
   2f6e4:	e0ffff17 	ldw	r3,-4(fp)
   2f6e8:	1885883a 	add	r2,r3,r2
   2f6ec:	10800003 	ldbu	r2,0(r2)
   2f6f0:	10803fcc 	andi	r2,r2,255
   2f6f4:	1080201c 	xori	r2,r2,128
   2f6f8:	10bfe004 	addi	r2,r2,-128
   2f6fc:	10800be0 	cmpeqi	r2,r2,47
   2f700:	1000081e 	bne	r2,zero,2f724 <alt_find_file+0xb0>
   2f704:	e0bffe17 	ldw	r2,-8(fp)
   2f708:	e0ffff17 	ldw	r3,-4(fp)
   2f70c:	1885883a 	add	r2,r3,r2
   2f710:	10800003 	ldbu	r2,0(r2)
   2f714:	10803fcc 	andi	r2,r2,255
   2f718:	1080201c 	xori	r2,r2,128
   2f71c:	10bfe004 	addi	r2,r2,-128
   2f720:	10000a1e 	bne	r2,zero,2f74c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2f724:	e0bffd17 	ldw	r2,-12(fp)
   2f728:	10800217 	ldw	r2,8(r2)
   2f72c:	e0fffe17 	ldw	r3,-8(fp)
   2f730:	180d883a 	mov	r6,r3
   2f734:	e17fff17 	ldw	r5,-4(fp)
   2f738:	1009883a 	mov	r4,r2
   2f73c:	002f9980 	call	2f998 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f740:	1000021e 	bne	r2,zero,2f74c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2f744:	e0bffd17 	ldw	r2,-12(fp)
   2f748:	00000706 	br	2f768 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2f74c:	e0bffd17 	ldw	r2,-12(fp)
   2f750:	10800017 	ldw	r2,0(r2)
   2f754:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f758:	e0fffd17 	ldw	r3,-12(fp)
   2f75c:	d0a00704 	addi	r2,gp,-32740
   2f760:	18bfcc1e 	bne	r3,r2,2f694 <_gp+0xffff5bc4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2f764:	0005883a 	mov	r2,zero
}
   2f768:	e037883a 	mov	sp,fp
   2f76c:	dfc00117 	ldw	ra,4(sp)
   2f770:	df000017 	ldw	fp,0(sp)
   2f774:	dec00204 	addi	sp,sp,8
   2f778:	f800283a 	ret

0002f77c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2f77c:	defffc04 	addi	sp,sp,-16
   2f780:	df000315 	stw	fp,12(sp)
   2f784:	df000304 	addi	fp,sp,12
   2f788:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2f78c:	00bffa04 	movi	r2,-24
   2f790:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f794:	e03ffd15 	stw	zero,-12(fp)
   2f798:	00001906 	br	2f800 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   2f79c:	008000f4 	movhi	r2,3
   2f7a0:	10823c04 	addi	r2,r2,2288
   2f7a4:	e0fffd17 	ldw	r3,-12(fp)
   2f7a8:	18c00324 	muli	r3,r3,12
   2f7ac:	10c5883a 	add	r2,r2,r3
   2f7b0:	10800017 	ldw	r2,0(r2)
   2f7b4:	10000f1e 	bne	r2,zero,2f7f4 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   2f7b8:	008000f4 	movhi	r2,3
   2f7bc:	10823c04 	addi	r2,r2,2288
   2f7c0:	e0fffd17 	ldw	r3,-12(fp)
   2f7c4:	18c00324 	muli	r3,r3,12
   2f7c8:	10c5883a 	add	r2,r2,r3
   2f7cc:	e0ffff17 	ldw	r3,-4(fp)
   2f7d0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2f7d4:	d0e00b17 	ldw	r3,-32724(gp)
   2f7d8:	e0bffd17 	ldw	r2,-12(fp)
   2f7dc:	1880020e 	bge	r3,r2,2f7e8 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   2f7e0:	e0bffd17 	ldw	r2,-12(fp)
   2f7e4:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   2f7e8:	e0bffd17 	ldw	r2,-12(fp)
   2f7ec:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2f7f0:	00000606 	br	2f80c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f7f4:	e0bffd17 	ldw	r2,-12(fp)
   2f7f8:	10800044 	addi	r2,r2,1
   2f7fc:	e0bffd15 	stw	r2,-12(fp)
   2f800:	e0bffd17 	ldw	r2,-12(fp)
   2f804:	10800810 	cmplti	r2,r2,32
   2f808:	103fe41e 	bne	r2,zero,2f79c <_gp+0xffff5ccc>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2f80c:	e0bffe17 	ldw	r2,-8(fp)
}
   2f810:	e037883a 	mov	sp,fp
   2f814:	df000017 	ldw	fp,0(sp)
   2f818:	dec00104 	addi	sp,sp,4
   2f81c:	f800283a 	ret

0002f820 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2f820:	defffb04 	addi	sp,sp,-20
   2f824:	df000415 	stw	fp,16(sp)
   2f828:	df000404 	addi	fp,sp,16
   2f82c:	e13ffe15 	stw	r4,-8(fp)
   2f830:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2f834:	e0bfff17 	ldw	r2,-4(fp)
   2f838:	10880070 	cmpltui	r2,r2,8193
   2f83c:	1000021e 	bne	r2,zero,2f848 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2f840:	00880004 	movi	r2,8192
   2f844:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2f848:	e0fffe17 	ldw	r3,-8(fp)
   2f84c:	e0bfff17 	ldw	r2,-4(fp)
   2f850:	1885883a 	add	r2,r3,r2
   2f854:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2f858:	e0bffe17 	ldw	r2,-8(fp)
   2f85c:	e0bffc15 	stw	r2,-16(fp)
   2f860:	00000506 	br	2f878 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2f864:	e0bffc17 	ldw	r2,-16(fp)
   2f868:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2f86c:	e0bffc17 	ldw	r2,-16(fp)
   2f870:	10800804 	addi	r2,r2,32
   2f874:	e0bffc15 	stw	r2,-16(fp)
   2f878:	e0fffc17 	ldw	r3,-16(fp)
   2f87c:	e0bffd17 	ldw	r2,-12(fp)
   2f880:	18bff836 	bltu	r3,r2,2f864 <_gp+0xffff5d94>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2f884:	e0bffe17 	ldw	r2,-8(fp)
   2f888:	108007cc 	andi	r2,r2,31
   2f88c:	10000226 	beq	r2,zero,2f898 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2f890:	e0bffc17 	ldw	r2,-16(fp)
   2f894:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2f898:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2f89c:	0001883a 	nop
   2f8a0:	e037883a 	mov	sp,fp
   2f8a4:	df000017 	ldw	fp,0(sp)
   2f8a8:	dec00104 	addi	sp,sp,4
   2f8ac:	f800283a 	ret

0002f8b0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2f8b0:	defffe04 	addi	sp,sp,-8
   2f8b4:	df000115 	stw	fp,4(sp)
   2f8b8:	df000104 	addi	fp,sp,4
   2f8bc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2f8c0:	e0bfff17 	ldw	r2,-4(fp)
   2f8c4:	10bffe84 	addi	r2,r2,-6
   2f8c8:	10c00428 	cmpgeui	r3,r2,16
   2f8cc:	18001a1e 	bne	r3,zero,2f938 <alt_exception_cause_generated_bad_addr+0x88>
   2f8d0:	100690ba 	slli	r3,r2,2
   2f8d4:	008000f4 	movhi	r2,3
   2f8d8:	10be3a04 	addi	r2,r2,-1816
   2f8dc:	1885883a 	add	r2,r3,r2
   2f8e0:	10800017 	ldw	r2,0(r2)
   2f8e4:	1000683a 	jmp	r2
   2f8e8:	0002f928 	cmpgeui	zero,zero,3044
   2f8ec:	0002f928 	cmpgeui	zero,zero,3044
   2f8f0:	0002f938 	rdprs	zero,zero,3044
   2f8f4:	0002f938 	rdprs	zero,zero,3044
   2f8f8:	0002f938 	rdprs	zero,zero,3044
   2f8fc:	0002f928 	cmpgeui	zero,zero,3044
   2f900:	0002f930 	cmpltui	zero,zero,3044
   2f904:	0002f938 	rdprs	zero,zero,3044
   2f908:	0002f928 	cmpgeui	zero,zero,3044
   2f90c:	0002f928 	cmpgeui	zero,zero,3044
   2f910:	0002f938 	rdprs	zero,zero,3044
   2f914:	0002f928 	cmpgeui	zero,zero,3044
   2f918:	0002f930 	cmpltui	zero,zero,3044
   2f91c:	0002f938 	rdprs	zero,zero,3044
   2f920:	0002f938 	rdprs	zero,zero,3044
   2f924:	0002f928 	cmpgeui	zero,zero,3044
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2f928:	00800044 	movi	r2,1
   2f92c:	00000306 	br	2f93c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2f930:	0005883a 	mov	r2,zero
   2f934:	00000106 	br	2f93c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2f938:	0005883a 	mov	r2,zero
  }
}
   2f93c:	e037883a 	mov	sp,fp
   2f940:	df000017 	ldw	fp,0(sp)
   2f944:	dec00104 	addi	sp,sp,4
   2f948:	f800283a 	ret

0002f94c <atexit>:
   2f94c:	200b883a 	mov	r5,r4
   2f950:	000f883a 	mov	r7,zero
   2f954:	000d883a 	mov	r6,zero
   2f958:	0009883a 	mov	r4,zero
   2f95c:	002fa141 	jmpi	2fa14 <__register_exitproc>

0002f960 <exit>:
   2f960:	defffe04 	addi	sp,sp,-8
   2f964:	000b883a 	mov	r5,zero
   2f968:	dc000015 	stw	r16,0(sp)
   2f96c:	dfc00115 	stw	ra,4(sp)
   2f970:	2021883a 	mov	r16,r4
   2f974:	002fb2c0 	call	2fb2c <__call_exitprocs>
   2f978:	008000f4 	movhi	r2,3
   2f97c:	1086b604 	addi	r2,r2,6872
   2f980:	11000017 	ldw	r4,0(r2)
   2f984:	20800f17 	ldw	r2,60(r4)
   2f988:	10000126 	beq	r2,zero,2f990 <exit+0x30>
   2f98c:	103ee83a 	callr	r2
   2f990:	8009883a 	mov	r4,r16
   2f994:	002fcac0 	call	2fcac <_exit>

0002f998 <memcmp>:
   2f998:	01c000c4 	movi	r7,3
   2f99c:	3980192e 	bgeu	r7,r6,2fa04 <memcmp+0x6c>
   2f9a0:	2144b03a 	or	r2,r4,r5
   2f9a4:	11c4703a 	and	r2,r2,r7
   2f9a8:	10000f26 	beq	r2,zero,2f9e8 <memcmp+0x50>
   2f9ac:	20800003 	ldbu	r2,0(r4)
   2f9b0:	28c00003 	ldbu	r3,0(r5)
   2f9b4:	10c0151e 	bne	r2,r3,2fa0c <memcmp+0x74>
   2f9b8:	31bfff84 	addi	r6,r6,-2
   2f9bc:	01ffffc4 	movi	r7,-1
   2f9c0:	00000406 	br	2f9d4 <memcmp+0x3c>
   2f9c4:	20800003 	ldbu	r2,0(r4)
   2f9c8:	28c00003 	ldbu	r3,0(r5)
   2f9cc:	31bfffc4 	addi	r6,r6,-1
   2f9d0:	10c00e1e 	bne	r2,r3,2fa0c <memcmp+0x74>
   2f9d4:	21000044 	addi	r4,r4,1
   2f9d8:	29400044 	addi	r5,r5,1
   2f9dc:	31fff91e 	bne	r6,r7,2f9c4 <_gp+0xffff5ef4>
   2f9e0:	0005883a 	mov	r2,zero
   2f9e4:	f800283a 	ret
   2f9e8:	20c00017 	ldw	r3,0(r4)
   2f9ec:	28800017 	ldw	r2,0(r5)
   2f9f0:	18bfee1e 	bne	r3,r2,2f9ac <_gp+0xffff5edc>
   2f9f4:	31bfff04 	addi	r6,r6,-4
   2f9f8:	21000104 	addi	r4,r4,4
   2f9fc:	29400104 	addi	r5,r5,4
   2fa00:	39bff936 	bltu	r7,r6,2f9e8 <_gp+0xffff5f18>
   2fa04:	303fe91e 	bne	r6,zero,2f9ac <_gp+0xffff5edc>
   2fa08:	003ff506 	br	2f9e0 <_gp+0xffff5f10>
   2fa0c:	10c5c83a 	sub	r2,r2,r3
   2fa10:	f800283a 	ret

0002fa14 <__register_exitproc>:
   2fa14:	defffa04 	addi	sp,sp,-24
   2fa18:	dc000315 	stw	r16,12(sp)
   2fa1c:	040000f4 	movhi	r16,3
   2fa20:	8406b604 	addi	r16,r16,6872
   2fa24:	80c00017 	ldw	r3,0(r16)
   2fa28:	dc400415 	stw	r17,16(sp)
   2fa2c:	dfc00515 	stw	ra,20(sp)
   2fa30:	18805217 	ldw	r2,328(r3)
   2fa34:	2023883a 	mov	r17,r4
   2fa38:	10003726 	beq	r2,zero,2fb18 <__register_exitproc+0x104>
   2fa3c:	10c00117 	ldw	r3,4(r2)
   2fa40:	010007c4 	movi	r4,31
   2fa44:	20c00e16 	blt	r4,r3,2fa80 <__register_exitproc+0x6c>
   2fa48:	1a000044 	addi	r8,r3,1
   2fa4c:	8800221e 	bne	r17,zero,2fad8 <__register_exitproc+0xc4>
   2fa50:	18c00084 	addi	r3,r3,2
   2fa54:	18c7883a 	add	r3,r3,r3
   2fa58:	18c7883a 	add	r3,r3,r3
   2fa5c:	12000115 	stw	r8,4(r2)
   2fa60:	10c7883a 	add	r3,r2,r3
   2fa64:	19400015 	stw	r5,0(r3)
   2fa68:	0005883a 	mov	r2,zero
   2fa6c:	dfc00517 	ldw	ra,20(sp)
   2fa70:	dc400417 	ldw	r17,16(sp)
   2fa74:	dc000317 	ldw	r16,12(sp)
   2fa78:	dec00604 	addi	sp,sp,24
   2fa7c:	f800283a 	ret
   2fa80:	00800034 	movhi	r2,0
   2fa84:	10800004 	addi	r2,r2,0
   2fa88:	10002626 	beq	r2,zero,2fb24 <__register_exitproc+0x110>
   2fa8c:	01006404 	movi	r4,400
   2fa90:	d9400015 	stw	r5,0(sp)
   2fa94:	d9800115 	stw	r6,4(sp)
   2fa98:	d9c00215 	stw	r7,8(sp)
   2fa9c:	00000000 	call	0 <__reset-0x20000>
   2faa0:	d9400017 	ldw	r5,0(sp)
   2faa4:	d9800117 	ldw	r6,4(sp)
   2faa8:	d9c00217 	ldw	r7,8(sp)
   2faac:	10001d26 	beq	r2,zero,2fb24 <__register_exitproc+0x110>
   2fab0:	81000017 	ldw	r4,0(r16)
   2fab4:	10000115 	stw	zero,4(r2)
   2fab8:	02000044 	movi	r8,1
   2fabc:	22405217 	ldw	r9,328(r4)
   2fac0:	0007883a 	mov	r3,zero
   2fac4:	12400015 	stw	r9,0(r2)
   2fac8:	20805215 	stw	r2,328(r4)
   2facc:	10006215 	stw	zero,392(r2)
   2fad0:	10006315 	stw	zero,396(r2)
   2fad4:	883fde26 	beq	r17,zero,2fa50 <_gp+0xffff5f80>
   2fad8:	18c9883a 	add	r4,r3,r3
   2fadc:	2109883a 	add	r4,r4,r4
   2fae0:	1109883a 	add	r4,r2,r4
   2fae4:	21802215 	stw	r6,136(r4)
   2fae8:	01800044 	movi	r6,1
   2faec:	12406217 	ldw	r9,392(r2)
   2faf0:	30cc983a 	sll	r6,r6,r3
   2faf4:	4992b03a 	or	r9,r9,r6
   2faf8:	12406215 	stw	r9,392(r2)
   2fafc:	21c04215 	stw	r7,264(r4)
   2fb00:	01000084 	movi	r4,2
   2fb04:	893fd21e 	bne	r17,r4,2fa50 <_gp+0xffff5f80>
   2fb08:	11006317 	ldw	r4,396(r2)
   2fb0c:	218cb03a 	or	r6,r4,r6
   2fb10:	11806315 	stw	r6,396(r2)
   2fb14:	003fce06 	br	2fa50 <_gp+0xffff5f80>
   2fb18:	18805304 	addi	r2,r3,332
   2fb1c:	18805215 	stw	r2,328(r3)
   2fb20:	003fc606 	br	2fa3c <_gp+0xffff5f6c>
   2fb24:	00bfffc4 	movi	r2,-1
   2fb28:	003fd006 	br	2fa6c <_gp+0xffff5f9c>

0002fb2c <__call_exitprocs>:
   2fb2c:	defff504 	addi	sp,sp,-44
   2fb30:	df000915 	stw	fp,36(sp)
   2fb34:	dd400615 	stw	r21,24(sp)
   2fb38:	dc800315 	stw	r18,12(sp)
   2fb3c:	dfc00a15 	stw	ra,40(sp)
   2fb40:	ddc00815 	stw	r23,32(sp)
   2fb44:	dd800715 	stw	r22,28(sp)
   2fb48:	dd000515 	stw	r20,20(sp)
   2fb4c:	dcc00415 	stw	r19,16(sp)
   2fb50:	dc400215 	stw	r17,8(sp)
   2fb54:	dc000115 	stw	r16,4(sp)
   2fb58:	d9000015 	stw	r4,0(sp)
   2fb5c:	2839883a 	mov	fp,r5
   2fb60:	04800044 	movi	r18,1
   2fb64:	057fffc4 	movi	r21,-1
   2fb68:	008000f4 	movhi	r2,3
   2fb6c:	1086b604 	addi	r2,r2,6872
   2fb70:	12000017 	ldw	r8,0(r2)
   2fb74:	45005217 	ldw	r20,328(r8)
   2fb78:	44c05204 	addi	r19,r8,328
   2fb7c:	a0001c26 	beq	r20,zero,2fbf0 <__call_exitprocs+0xc4>
   2fb80:	a0800117 	ldw	r2,4(r20)
   2fb84:	15ffffc4 	addi	r23,r2,-1
   2fb88:	b8000d16 	blt	r23,zero,2fbc0 <__call_exitprocs+0x94>
   2fb8c:	14000044 	addi	r16,r2,1
   2fb90:	8421883a 	add	r16,r16,r16
   2fb94:	8421883a 	add	r16,r16,r16
   2fb98:	84402004 	addi	r17,r16,128
   2fb9c:	a463883a 	add	r17,r20,r17
   2fba0:	a421883a 	add	r16,r20,r16
   2fba4:	e0001e26 	beq	fp,zero,2fc20 <__call_exitprocs+0xf4>
   2fba8:	80804017 	ldw	r2,256(r16)
   2fbac:	e0801c26 	beq	fp,r2,2fc20 <__call_exitprocs+0xf4>
   2fbb0:	bdffffc4 	addi	r23,r23,-1
   2fbb4:	843fff04 	addi	r16,r16,-4
   2fbb8:	8c7fff04 	addi	r17,r17,-4
   2fbbc:	bd7ff91e 	bne	r23,r21,2fba4 <_gp+0xffff60d4>
   2fbc0:	00800034 	movhi	r2,0
   2fbc4:	10800004 	addi	r2,r2,0
   2fbc8:	10000926 	beq	r2,zero,2fbf0 <__call_exitprocs+0xc4>
   2fbcc:	a0800117 	ldw	r2,4(r20)
   2fbd0:	1000301e 	bne	r2,zero,2fc94 <__call_exitprocs+0x168>
   2fbd4:	a0800017 	ldw	r2,0(r20)
   2fbd8:	10003226 	beq	r2,zero,2fca4 <__call_exitprocs+0x178>
   2fbdc:	a009883a 	mov	r4,r20
   2fbe0:	98800015 	stw	r2,0(r19)
   2fbe4:	00000000 	call	0 <__reset-0x20000>
   2fbe8:	9d000017 	ldw	r20,0(r19)
   2fbec:	a03fe41e 	bne	r20,zero,2fb80 <_gp+0xffff60b0>
   2fbf0:	dfc00a17 	ldw	ra,40(sp)
   2fbf4:	df000917 	ldw	fp,36(sp)
   2fbf8:	ddc00817 	ldw	r23,32(sp)
   2fbfc:	dd800717 	ldw	r22,28(sp)
   2fc00:	dd400617 	ldw	r21,24(sp)
   2fc04:	dd000517 	ldw	r20,20(sp)
   2fc08:	dcc00417 	ldw	r19,16(sp)
   2fc0c:	dc800317 	ldw	r18,12(sp)
   2fc10:	dc400217 	ldw	r17,8(sp)
   2fc14:	dc000117 	ldw	r16,4(sp)
   2fc18:	dec00b04 	addi	sp,sp,44
   2fc1c:	f800283a 	ret
   2fc20:	a0800117 	ldw	r2,4(r20)
   2fc24:	80c00017 	ldw	r3,0(r16)
   2fc28:	10bfffc4 	addi	r2,r2,-1
   2fc2c:	15c01426 	beq	r2,r23,2fc80 <__call_exitprocs+0x154>
   2fc30:	80000015 	stw	zero,0(r16)
   2fc34:	183fde26 	beq	r3,zero,2fbb0 <_gp+0xffff60e0>
   2fc38:	95c8983a 	sll	r4,r18,r23
   2fc3c:	a0806217 	ldw	r2,392(r20)
   2fc40:	a5800117 	ldw	r22,4(r20)
   2fc44:	2084703a 	and	r2,r4,r2
   2fc48:	10000b26 	beq	r2,zero,2fc78 <__call_exitprocs+0x14c>
   2fc4c:	a0806317 	ldw	r2,396(r20)
   2fc50:	2088703a 	and	r4,r4,r2
   2fc54:	20000c1e 	bne	r4,zero,2fc88 <__call_exitprocs+0x15c>
   2fc58:	89400017 	ldw	r5,0(r17)
   2fc5c:	d9000017 	ldw	r4,0(sp)
   2fc60:	183ee83a 	callr	r3
   2fc64:	a0800117 	ldw	r2,4(r20)
   2fc68:	15bfbf1e 	bne	r2,r22,2fb68 <_gp+0xffff6098>
   2fc6c:	98800017 	ldw	r2,0(r19)
   2fc70:	153fcf26 	beq	r2,r20,2fbb0 <_gp+0xffff60e0>
   2fc74:	003fbc06 	br	2fb68 <_gp+0xffff6098>
   2fc78:	183ee83a 	callr	r3
   2fc7c:	003ff906 	br	2fc64 <_gp+0xffff6194>
   2fc80:	a5c00115 	stw	r23,4(r20)
   2fc84:	003feb06 	br	2fc34 <_gp+0xffff6164>
   2fc88:	89000017 	ldw	r4,0(r17)
   2fc8c:	183ee83a 	callr	r3
   2fc90:	003ff406 	br	2fc64 <_gp+0xffff6194>
   2fc94:	a0800017 	ldw	r2,0(r20)
   2fc98:	a027883a 	mov	r19,r20
   2fc9c:	1029883a 	mov	r20,r2
   2fca0:	003fb606 	br	2fb7c <_gp+0xffff60ac>
   2fca4:	0005883a 	mov	r2,zero
   2fca8:	003ffb06 	br	2fc98 <_gp+0xffff61c8>

0002fcac <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2fcac:	defffd04 	addi	sp,sp,-12
   2fcb0:	df000215 	stw	fp,8(sp)
   2fcb4:	df000204 	addi	fp,sp,8
   2fcb8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2fcbc:	0001883a 	nop
   2fcc0:	e0bfff17 	ldw	r2,-4(fp)
   2fcc4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2fcc8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2fccc:	10000226 	beq	r2,zero,2fcd8 <_exit+0x2c>
    ALT_SIM_FAIL();
   2fcd0:	002af070 	cmpltui	zero,zero,43969
   2fcd4:	00000106 	br	2fcdc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2fcd8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2fcdc:	003fff06 	br	2fcdc <_gp+0xffff620c>
