library ieee;
use ieee.numeric_std.all;
use ieee.std_logic_1164.all;

library work;
use work.TdmaMinTypes.all;

entity in_PD is
	port (
		clk 	: in std_logic;
		recv 	: in tdma_min_port;
		send	: in tdma_min_port;
	);
	
end entity in_PD;

architecture behaviour of testCor is
	
	signal corr_val : std_logic_vector(31 downto 0) := (others => '0');
	TYPE sine_wave_array IS ARRAY (0 TO 31) OF STD_LOGIC_VECTOR(31 DOWNTO 0);
    CONSTANT sine_wave_lut : sine_wave_array := (
        0 	=> x"0000"&"0111111111111111",
        1 	=> x"0000"&"1001100011111000",
        2 	=> x"0000"&"1011000011111011",
        3 	=> x"0000"&"1100011100011100",
        4 	=> x"0000"&"1101101010000001",
        5 	=> x"0000"&"1110101001101100",
        6 	=> x"0000"&"1111011001000000",
        7 	=> x"0000"&"1111110110001001",
        8 	=> x"0000"&"1111111111111111",
        9 	=> x"0000"&"1111110110001001",
        10 	=> x"0000"&"1111011001000000",
        11 	=> x"0000"&"1110101001101100",
        12 	=> x"0000"&"1101101010000001",
        13 	=> x"0000"&"1100011100011100",
        14 	=> x"0000"&"1011000011111011",
        15 	=> x"0000"&"1001100011111000",
        16 	=> x"0000"&"0111111111111111",
        17 	=> x"0000"&"0110011100000110",
        18 	=> x"0000"&"0100111100000011",
        19 	=> x"0000"&"0011100011100010",
        20 	=> x"0000"&"0010010101111101",
        21 	=> x"0000"&"0001010110010010",
        22 	=> x"0000"&"0000100110111110",
        23 	=> x"0000"&"0000001001110101",
        24 	=> x"0000"&"0000000000000000",
        25 	=> x"0000"&"0000001001110101",
        26 	=> x"0000"&"0000100110111110",
        27 	=> x"0000"&"0001010110010010",
        28 	=> x"0000"&"0010010101111101",
        29 	=> x"0000"&"0011100011100010",
        30 	=> x"0000"&"0100111100000011",
        31 	=> x"0000"&"0110011100000110"
    );
	
begin
	
	send.addr <= x"02";
	
	process(clk)
	begin
		if rising_edge(clk) then
			corr_val <= sine_wave_lut(lut_index);
			lut_index <= (lut_index + 1) MOD 32;
		end if;
	end process;
end architecture;
		